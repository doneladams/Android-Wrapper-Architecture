package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/16/2017 5:54:08 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;

import org.ksoap2.serialization.PropertyInfo;

import java.lang.*;
import java.util.Hashtable;

import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class DiscountAgreementFilter implements KvmSerializable {

    /*
        public int storeId;
        public int storeIdOrUnassigned;
        public int customerGroupId;
        public String description;
        public WS_Enums.BooleanFilter isCustomerBoundOnly;
        public WS_Enums.BooleanFilter isProductBoundOnly;
        public WS_Enums.BooleanFilter isLoyaltyCardBoundOnly;
        public WS_Enums.BooleanFilter isIgnoreDiscountAgreementOnly;
        public WS_Enums.BooleanFilter isWebshopBoundOnly;
        public WS_Enums.CashInvoiceDiscount cashInvoiceDiscountOnly;
    */
    public int applyableOnProductId;
/*
    public WS_Enums.BooleanFilter isActiveOnly;
    public WS_Enums.BooleanFilter isActiveAndFutureOnly;
*/

    public DiscountAgreementFilter() {
    }

    public DiscountAgreementFilter(SoapObject soapObject) {
        if (soapObject == null)
            return;
/*        if (soapObject.hasProperty("StoreId"))
        {
            Object obj = soapObject.getProperty("StoreId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                storeId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                storeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("StoreIdOrUnassigned"))
        {
            Object obj = soapObject.getProperty("StoreIdOrUnassigned");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                storeIdOrUnassigned = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                storeIdOrUnassigned = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CustomerGroupId"))
        {
            Object obj = soapObject.getProperty("CustomerGroupId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                customerGroupId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                customerGroupId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Description"))
        {
            Object obj = soapObject.getProperty("Description");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                description = j.toString();
            }else if (obj!= null && obj instanceof String){
                description = (String) obj;
            }
        }
        if (soapObject.hasProperty("IsCustomerBoundOnly"))
        {
            Object obj = soapObject.getProperty("IsCustomerBoundOnly");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                isCustomerBoundOnly = WS_Enums.BooleanFilter.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("IsProductBoundOnly"))
        {
            Object obj = soapObject.getProperty("IsProductBoundOnly");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                isProductBoundOnly = WS_Enums.BooleanFilter.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("IsLoyaltyCardBoundOnly"))
        {
            Object obj = soapObject.getProperty("IsLoyaltyCardBoundOnly");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                isLoyaltyCardBoundOnly = WS_Enums.BooleanFilter.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("IsIgnoreDiscountAgreementOnly"))
        {
            Object obj = soapObject.getProperty("IsIgnoreDiscountAgreementOnly");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                isIgnoreDiscountAgreementOnly = WS_Enums.BooleanFilter.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("IsWebshopBoundOnly"))
        {
            Object obj = soapObject.getProperty("IsWebshopBoundOnly");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                isWebshopBoundOnly = WS_Enums.BooleanFilter.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("CashInvoiceDiscountOnly"))
        {
            Object obj = soapObject.getProperty("CashInvoiceDiscountOnly");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                cashInvoiceDiscountOnly = WS_Enums.CashInvoiceDiscount.fromString(j.toString());
            }
        }*/
        if (soapObject.hasProperty("ApplyableOnProductId")) {
            Object obj = soapObject.getProperty("ApplyableOnProductId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                applyableOnProductId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                applyableOnProductId = (Integer) obj;
            }
        }
/*        if (soapObject.hasProperty("IsActiveOnly"))
        {
            Object obj = soapObject.getProperty("IsActiveOnly");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                isActiveOnly = WS_Enums.BooleanFilter.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("IsActiveAndFutureOnly"))
        {
            Object obj = soapObject.getProperty("IsActiveAndFutureOnly");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                isActiveAndFutureOnly = WS_Enums.BooleanFilter.fromString(j.toString());
            }
        }*/
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return applyableOnProductId;
         /*   case 1:
                return storeIdOrUnassigned;
            case 2:
                return customerGroupId;
            case 3:
                return description;
            case 4:
                return isCustomerBoundOnly.toString();
            case 5:
                return isProductBoundOnly.toString();
            case 6:
                return isLoyaltyCardBoundOnly.toString();
            case 7:
                return isIgnoreDiscountAgreementOnly.toString();
            case 8:
                return isWebshopBoundOnly.toString();
            case 9:
                return cashInvoiceDiscountOnly.toString();
            case 10:
                return storeId;
            case 11:
                return isActiveOnly.toString();
            case 12:
                return isActiveAndFutureOnly.toString();*/
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 1;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ApplyableOnProductId";
                break;
        /*    case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreId";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreIdOrUnassigned";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CustomerGroupId";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Description";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IsCustomerBoundOnly";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IsProductBoundOnly";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IsLoyaltyCardBoundOnly";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IsIgnoreDiscountAgreementOnly";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IsWebshopBoundOnly";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CashInvoiceDiscountOnly";
                break;

            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IsActiveOnly";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IsActiveAndFutureOnly";
                break;*/
        }
    }

//    @Override //    public String getInnerText() { //        return null; //    } // // //    @Override //    public void setInnerText(String s) { //    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
