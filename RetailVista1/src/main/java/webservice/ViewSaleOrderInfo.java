package webservice;

/**
 * Created by samir on 8/16/2017.
 */


//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/16/2017 5:54:09 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import webservice.WS_Enums.*;

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.util.Hashtable;

import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ViewSaleOrderInfo implements KvmSerializable {

    public String webshopDescription;
    public long customerNumber;
    public String customerName;
    public long deliveryCustomerNumber;
    public String deliveryCustomerName;
    public String userFullName;
    public String storeDescription;
    public String transportTypeDescription;
    public double totalPrepaymentRequests;
    public double totalPrePaid;
    public double totalPrePaidBalance;
    public double totalPrepaymentRequestBalance;
    public int inboundMessageNumber;
    public String saleOrderClassDescriptionField;
    public int scannerNumber;
    public int purchaseOrderNumber;
    public int companyId;
    public int storeId;
    public int customerId;
    public int customerContactId;
    public int deliveryCustomerId;
    public int deliveryAddressId;
    public int debtorId;
    public boolean isVatFree;
    public boolean isRaise;
    public int scannerId;
    public int userId;
    public int costCenterId;
    public int orderNumber;
    public WS_Enums.SaleOrderStatus orderStatus;
    public boolean isCancelled;
    public String referenceCode;
    public String description;
    public String ProductDescription;

    public String miscInfo;
    public int transportTypeId;
    public int saleOrderClassIdField;
    public SaleOrderType saleOrderType;
    public int purchaseOrderId;
    public double discountPrice;
    public double discountPercentage;
    public boolean secureDiscounts;
    public double totalGrossPrice;
    public double totalNetPrice;
    public double totalWeightedNetPrice;
    public String printedDateTime;
    public String exportDateTime;
    public String expectedDeliveryDate;
    public String utmostDeliveryDate;
    public String orderResponseDate;
    public String orderResponseLog;
    public int inboundMessageId;
    public long conversionId;
    public int webshopId;
    public int createdByUserId;
    public String createdDateTime;
    public int lastModifiedByUserId;
    public String lastModifiedDateTime;
    public int itemId;
    public double reservedAmount;
    public double amount;

    public ViewSaleOrderInfo() {
    }

    public ViewSaleOrderInfo(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("WebshopDescription")) {
            Object obj = soapObject.getProperty("WebshopDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                webshopDescription = j.toString();
            } else if (obj != null && obj instanceof String) {
                webshopDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("CustomerNumber")) {
            Object obj = soapObject.getProperty("CustomerNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                customerNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                customerNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CustomerName")) {
            Object obj = soapObject.getProperty("CustomerName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                customerName = j.toString();
            } else if (obj != null && obj instanceof String) {
                customerName = (String) obj;
            }
        }
        if (soapObject.hasProperty("DeliveryCustomerNumber")) {
            Object obj = soapObject.getProperty("DeliveryCustomerNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                deliveryCustomerNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                deliveryCustomerNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("DeliveryCustomerName")) {
            Object obj = soapObject.getProperty("DeliveryCustomerName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                deliveryCustomerName = j.toString();
            } else if (obj != null && obj instanceof String) {
                deliveryCustomerName = (String) obj;
            }
        }
        if (soapObject.hasProperty("UserFullName")) {
            Object obj = soapObject.getProperty("UserFullName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                userFullName = j.toString();
            } else if (obj != null && obj instanceof String) {
                userFullName = (String) obj;
            }
        }
        if (soapObject.hasProperty("StoreDescription")) {
            Object obj = soapObject.getProperty("StoreDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                storeDescription = j.toString();
            } else if (obj != null && obj instanceof String) {
                storeDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("TransportTypeDescription")) {
            Object obj = soapObject.getProperty("TransportTypeDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                transportTypeDescription = j.toString();
            } else if (obj != null && obj instanceof String) {
                transportTypeDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("TotalPrepaymentRequests")) {
            Object obj = soapObject.getProperty("TotalPrepaymentRequests");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                totalPrepaymentRequests = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                totalPrepaymentRequests = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TotalPrePaid")) {
            Object obj = soapObject.getProperty("TotalPrePaid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                totalPrePaid = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                totalPrePaid = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TotalPrePaidBalance")) {
            Object obj = soapObject.getProperty("TotalPrePaidBalance");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                totalPrePaidBalance = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                totalPrePaidBalance = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TotalPrepaymentRequestBalance")) {
            Object obj = soapObject.getProperty("TotalPrepaymentRequestBalance");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                totalPrepaymentRequestBalance = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                totalPrepaymentRequestBalance = (Double) obj;
            }
        }
        if (soapObject.hasProperty("InboundMessageNumber")) {
            Object obj = soapObject.getProperty("InboundMessageNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                inboundMessageNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                inboundMessageNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SaleOrderClassDescription")) {
            Object obj = soapObject.getProperty("SaleOrderClassDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                saleOrderClassDescriptionField = j.toString();
            } else if (obj != null && obj instanceof String) {
                saleOrderClassDescriptionField = (String) obj;
            }
        }
        if (soapObject.hasProperty("ScannerNumber")) {
            Object obj = soapObject.getProperty("ScannerNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                scannerNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                scannerNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PurchaseOrderNumber")) {
            Object obj = soapObject.getProperty("PurchaseOrderNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                purchaseOrderNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                purchaseOrderNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CompanyId")) {
            Object obj = soapObject.getProperty("CompanyId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                companyId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                companyId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("StoreId")) {
            Object obj = soapObject.getProperty("StoreId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                storeId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                storeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CustomerId")) {
            Object obj = soapObject.getProperty("CustomerId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                customerId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                customerId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CustomerContactId")) {
            Object obj = soapObject.getProperty("CustomerContactId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                customerContactId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                customerContactId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("DeliveryCustomerId")) {
            Object obj = soapObject.getProperty("DeliveryCustomerId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                deliveryCustomerId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                deliveryCustomerId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("DeliveryAddressId")) {
            Object obj = soapObject.getProperty("DeliveryAddressId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                deliveryAddressId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                deliveryAddressId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("DebtorId")) {
            Object obj = soapObject.getProperty("DebtorId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                debtorId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                debtorId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IsVatFree")) {
            Object obj = soapObject.getProperty("IsVatFree");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isVatFree = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isVatFree = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsRaise")) {
            Object obj = soapObject.getProperty("IsRaise");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isRaise = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isRaise = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ScannerId")) {
            Object obj = soapObject.getProperty("ScannerId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                scannerId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                scannerId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("UserId")) {
            Object obj = soapObject.getProperty("UserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                userId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                userId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CostCenterId")) {
            Object obj = soapObject.getProperty("CostCenterId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                costCenterId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                costCenterId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("OrderNumber")) {
            Object obj = soapObject.getProperty("OrderNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                orderNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                orderNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("OrderStatus")) {
            Object obj = soapObject.getProperty("OrderStatus");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                orderStatus = WS_Enums.SaleOrderStatus.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("IsCancelled")) {
            Object obj = soapObject.getProperty("IsCancelled");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isCancelled = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isCancelled = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("ReferenceCode")) {
            Object obj = soapObject.getProperty("ReferenceCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                referenceCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                referenceCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("Description")) {
            Object obj = soapObject.getProperty("Description");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                description = j.toString();
            } else if (obj != null && obj instanceof String) {
                description = (String) obj;
            }
        }
        if (soapObject.hasProperty("ProductDescription")) {
            Object obj = soapObject.getProperty("ProductDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                ProductDescription = j.toString();
            } else if (obj != null && obj instanceof String) {
                ProductDescription = (String) obj;
            }
        }

        if (soapObject.hasProperty("MiscInfo")) {

            Object obj = soapObject.getProperty("MiscInfo");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                miscInfo = j.toString();
            } else if (obj != null && obj instanceof String) {
                miscInfo = (String) obj;
            }
        }
        if (soapObject.hasProperty("TransportTypeId")) {
            Object obj = soapObject.getProperty("TransportTypeId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                transportTypeId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                transportTypeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SaleOrderClassId")) {
            Object obj = soapObject.getProperty("SaleOrderClassId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                saleOrderClassIdField = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                saleOrderClassIdField = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SaleOrderType")) {
            Object obj = soapObject.getProperty("SaleOrderType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                saleOrderType = SaleOrderType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("PurchaseOrderId")) {
            Object obj = soapObject.getProperty("PurchaseOrderId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                purchaseOrderId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                purchaseOrderId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("DiscountPrice")) {
            Object obj = soapObject.getProperty("DiscountPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                discountPrice = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                discountPrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("DiscountPercentage")) {
            Object obj = soapObject.getProperty("DiscountPercentage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                discountPercentage = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                discountPercentage = (Double) obj;
            }
        }
        if (soapObject.hasProperty("SecureDiscounts")) {
            Object obj = soapObject.getProperty("SecureDiscounts");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                secureDiscounts = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                secureDiscounts = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("TotalGrossPrice")) {
            Object obj = soapObject.getProperty("TotalGrossPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                totalGrossPrice = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                totalGrossPrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TotalNetPrice")) {
            Object obj = soapObject.getProperty("TotalNetPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                totalNetPrice = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                totalNetPrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TotalWeightedNetPrice")) {
            Object obj = soapObject.getProperty("TotalWeightedNetPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                totalWeightedNetPrice = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                totalWeightedNetPrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("PrintedDateTime")) {
            Object obj = soapObject.getProperty("PrintedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                printedDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                printedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ExportDateTime")) {
            Object obj = soapObject.getProperty("ExportDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                exportDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                exportDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ExpectedDeliveryDate")) {
            Object obj = soapObject.getProperty("ExpectedDeliveryDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                expectedDeliveryDate = j.toString();
            } else if (obj != null && obj instanceof String) {
                expectedDeliveryDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("UtmostDeliveryDate")) {
            Object obj = soapObject.getProperty("UtmostDeliveryDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                utmostDeliveryDate = j.toString();
            } else if (obj != null && obj instanceof String) {
                utmostDeliveryDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("OrderResponseDate")) {
            Object obj = soapObject.getProperty("OrderResponseDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                orderResponseDate = j.toString();
            } else if (obj != null && obj instanceof String) {
                orderResponseDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("OrderResponseLog")) {
            Object obj = soapObject.getProperty("OrderResponseLog");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                orderResponseLog = j.toString();
            } else if (obj != null && obj instanceof String) {
                orderResponseLog = (String) obj;
            }
        }
        if (soapObject.hasProperty("InboundMessageId")) {
            Object obj = soapObject.getProperty("InboundMessageId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                inboundMessageId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                inboundMessageId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ConversionId")) {
            Object obj = soapObject.getProperty("ConversionId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                conversionId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                conversionId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("WebshopId")) {
            Object obj = soapObject.getProperty("WebshopId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                webshopId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                webshopId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedByUserId")) {
            Object obj = soapObject.getProperty("CreatedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                createdByUserId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                createdByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedDateTime")) {
            Object obj = soapObject.getProperty("CreatedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                createdDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                createdDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedByUserId")) {
            Object obj = soapObject.getProperty("LastModifiedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastModifiedByUserId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                lastModifiedByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedDateTime")) {
            Object obj = soapObject.getProperty("LastModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastModifiedDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastModifiedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ItemId")) {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                itemId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ReservedAmount")) {
            Object obj = soapObject.getProperty("ReservedAmount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                reservedAmount = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                reservedAmount = (Double) obj;
            }
        }
        if (soapObject.hasProperty("Amount")) {
            Object obj = soapObject.getProperty("Amount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                amount = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                amount = (Double) obj;
            }
        }

    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return webshopDescription;
            case 1:
                return customerNumber;
            case 2:
                return customerName;
            case 3:
                return deliveryCustomerNumber;
            case 4:
                return deliveryCustomerName;
            case 5:
                return userFullName;
            case 6:
                return storeDescription;
            case 7:
                return transportTypeDescription;
            case 8:
                return totalPrepaymentRequests;
            case 9:
                return totalPrePaid;
            case 10:
                return totalPrePaidBalance;
            case 11:
                return totalPrepaymentRequestBalance;
            case 12:
                return inboundMessageNumber;
            case 13:
                return saleOrderClassDescriptionField;
            case 14:
                return scannerNumber;
            case 15:
                return purchaseOrderNumber;
            case 16:
                return companyId;
            case 17:
                return storeId;
            case 18:
                return customerId;
            case 19:
                return customerContactId;
            case 20:
                return deliveryCustomerId;
            case 21:
                return deliveryAddressId;
            case 22:
                return debtorId;
            case 23:
                return isVatFree;
            case 24:
                return isRaise;
            case 25:
                return scannerId;
            case 26:
                return userId;
            case 27:
                return costCenterId;
            case 28:
                return orderNumber;
            case 29:
                return orderStatus.toString();
            case 30:
                return isCancelled;
            case 31:
                return referenceCode;
            case 32:
                return description;
            case 33:
                return miscInfo;
            case 34:
                return transportTypeId;
            case 35:
                return saleOrderClassIdField;
            case 36:
                return saleOrderType.toString();
            case 37:
                return purchaseOrderId;
            case 38:
                return discountPrice;
            case 39:
                return discountPercentage;
            case 40:
                return secureDiscounts;
            case 41:
                return totalGrossPrice;
            case 42:
                return totalNetPrice;
            case 43:
                return totalWeightedNetPrice;
            case 44:
                return printedDateTime;
            case 45:
                return exportDateTime;
            case 46:
                return expectedDeliveryDate;
            case 47:
                return utmostDeliveryDate;
            case 48:
                return orderResponseDate;
            case 49:
                return orderResponseLog;
            case 50:
                return inboundMessageId;
            case 51:
                return conversionId;
            case 52:
                return webshopId;
            case 53:
                return createdByUserId;
            case 54:
                return createdDateTime;
            case 55:
                return lastModifiedByUserId;
            case 56:
                return lastModifiedDateTime;
            case 57:
                return itemId;
            case 58:
                return ProductDescription;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 59;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "WebshopDescription";
                break;
            case 1:
                info.type = Long.class;
                info.name = "CustomerNumber";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CustomerName";
                break;
            case 3:
                info.type = Long.class;
                info.name = "DeliveryCustomerNumber";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DeliveryCustomerName";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "UserFullName";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "StoreDescription";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "TransportTypeDescription";
                break;
            case 8:
                info.type = Double.class;
                info.name = "TotalPrepaymentRequests";
                break;
            case 9:
                info.type = Double.class;
                info.name = "TotalPrePaid";
                break;
            case 10:
                info.type = Double.class;
                info.name = "TotalPrePaidBalance";
                break;
            case 11:
                info.type = Double.class;
                info.name = "TotalPrepaymentRequestBalance";
                break;
            case 12:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "InboundMessageNumber";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SaleOrderClassDescription";
                break;
            case 14:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ScannerNumber";
                break;
            case 15:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PurchaseOrderNumber";
                break;
            case 16:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;
            case 17:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreId";
                break;
            case 18:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CustomerId";
                break;
            case 19:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CustomerContactId";
                break;
            case 20:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "DeliveryCustomerId";
                break;
            case 21:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "DeliveryAddressId";
                break;
            case 22:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "DebtorId";
                break;
            case 23:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsVatFree";
                break;
            case 24:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsRaise";
                break;
            case 25:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ScannerId";
                break;
            case 26:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "UserId";
                break;
            case 27:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CostCenterId";
                break;
            case 28:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "OrderNumber";
                break;
            case 29:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OrderStatus";
                break;
            case 30:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsCancelled";
                break;
            case 31:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ReferenceCode";
                break;
            case 32:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Description";
                break;
            case 33:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "MiscInfo";
                break;
            case 34:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "TransportTypeId";
                break;
            case 35:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SaleOrderClassId";
                break;
            case 36:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SaleOrderType";
                break;
            case 37:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PurchaseOrderId";
                break;
            case 38:
                info.type = Double.class;
                info.name = "DiscountPrice";
                break;
            case 39:
                info.type = Double.class;
                info.name = "DiscountPercentage";
                break;
            case 40:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "SecureDiscounts";
                break;
            case 41:
                info.type = Double.class;
                info.name = "TotalGrossPrice";
                break;
            case 42:
                info.type = Double.class;
                info.name = "TotalNetPrice";
                break;
            case 43:
                info.type = Double.class;
                info.name = "TotalWeightedNetPrice";
                break;
            case 44:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PrintedDateTime";
                break;
            case 45:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExportDateTime";
                break;
            case 46:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExpectedDeliveryDate";
                break;
            case 47:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "UtmostDeliveryDate";
                break;
            case 48:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OrderResponseDate";
                break;
            case 49:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OrderResponseLog";
                break;
            case 50:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "InboundMessageId";
                break;
            case 51:
                info.type = Long.class;
                info.name = "ConversionId";
                break;
            case 52:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "WebshopId";
                break;
            case 53:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 54:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 55:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 56:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;
            case 57:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
            case 58:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ProductDescription";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
