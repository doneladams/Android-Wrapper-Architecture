package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/11/2017 5:10:09 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.lang.*;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class PurchaseInfo implements KvmSerializable {
    
    public int productId;
    public int supplierId;
    public int purchaseStatusRowId;
    public String externalCode;
    public String orderCode;
    public long purchaseUnitBarcode;
    public double orderMultiplier;
    public double minimumOrderQuantity;
    public int purchaseUnitDimensionId;
    public int purchaseUnitPackageIdField;
    public double purchaseUnitToPurchaseContentUnitFactor;
    public int purchaseContentUnitDimensionId;
    public int purchaseContentUnitPackageIdField;
    public double purchaseContentUnitToConsumerUnitFactor;
    public double cbmPerSingleUnit;
    public double purchasePricePerAmount;
    public double grossPurchasePrice;
    public double purchasePrice;
    public boolean isNetNet;
    public double ownPurchasePrice;
    public String ownPurchasePriceNote;
    public WS_Enums.PurchasePriceType purchasePriceType;
    public String organizationReference;
    public String organizationModifiedDateTime;
    public String lastExchangeDateTime;
    public boolean isPreferredSupplierRow;
    public WS_Enums.DataSource source;
    public boolean isActive;
    public int seasonProfileId;
    public long collectionBarcode;
    public int collectionAmount;
    public long collectionParentBarcode;
    public double grossPriceReductionPercentage;
    public boolean isDerived;
    public int organizationId;
    public int companyId;
    public int createdByUserId;
    public String createdDateTime;
    public int lastModifiedByUserId;
    public String lastModifiedDateTime;
    public int itemId;
    
    public PurchaseInfo(){}
    
    public PurchaseInfo(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("ProductId"))
        {
            Object obj = soapObject.getProperty("ProductId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                productId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                productId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SupplierId"))
        {
            Object obj = soapObject.getProperty("SupplierId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                supplierId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                supplierId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PurchaseStatusRowId"))
        {
            Object obj = soapObject.getProperty("PurchaseStatusRowId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                purchaseStatusRowId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                purchaseStatusRowId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ExternalCode"))
        {
            Object obj = soapObject.getProperty("ExternalCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                externalCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                externalCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("OrderCode"))
        {
            Object obj = soapObject.getProperty("OrderCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                orderCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                orderCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("PurchaseUnitBarcode"))
        {
            Object obj = soapObject.getProperty("PurchaseUnitBarcode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                purchaseUnitBarcode = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                purchaseUnitBarcode = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("OrderMultiplier"))
        {
            Object obj = soapObject.getProperty("OrderMultiplier");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                orderMultiplier = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                orderMultiplier = (Double) obj;
            }
        }
        if (soapObject.hasProperty("MinimumOrderQuantity"))
        {
            Object obj = soapObject.getProperty("MinimumOrderQuantity");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                minimumOrderQuantity = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                minimumOrderQuantity = (Double) obj;
            }
        }
        if (soapObject.hasProperty("PurchaseUnitDimensionId"))
        {
            Object obj = soapObject.getProperty("PurchaseUnitDimensionId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                purchaseUnitDimensionId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                purchaseUnitDimensionId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PurchaseUnitPackageId"))
        {
            Object obj = soapObject.getProperty("PurchaseUnitPackageId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                purchaseUnitPackageIdField = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                purchaseUnitPackageIdField = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PurchaseUnitToPurchaseContentUnitFactor"))
        {
            Object obj = soapObject.getProperty("PurchaseUnitToPurchaseContentUnitFactor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                purchaseUnitToPurchaseContentUnitFactor = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                purchaseUnitToPurchaseContentUnitFactor = (Double) obj;
            }
        }
        if (soapObject.hasProperty("PurchaseContentUnitDimensionId"))
        {
            Object obj = soapObject.getProperty("PurchaseContentUnitDimensionId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                purchaseContentUnitDimensionId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                purchaseContentUnitDimensionId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PurchaseContentUnitPackageId"))
        {
            Object obj = soapObject.getProperty("PurchaseContentUnitPackageId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                purchaseContentUnitPackageIdField = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                purchaseContentUnitPackageIdField = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PurchaseContentUnitToConsumerUnitFactor"))
        {
            Object obj = soapObject.getProperty("PurchaseContentUnitToConsumerUnitFactor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                purchaseContentUnitToConsumerUnitFactor = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                purchaseContentUnitToConsumerUnitFactor = (Double) obj;
            }
        }
        if (soapObject.hasProperty("CbmPerSingleUnit"))
        {
            Object obj = soapObject.getProperty("CbmPerSingleUnit");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cbmPerSingleUnit = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                cbmPerSingleUnit = (Double) obj;
            }
        }
        if (soapObject.hasProperty("PurchasePricePerAmount"))
        {
            Object obj = soapObject.getProperty("PurchasePricePerAmount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                purchasePricePerAmount = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                purchasePricePerAmount = (Double) obj;
            }
        }
        if (soapObject.hasProperty("GrossPurchasePrice"))
        {
            Object obj = soapObject.getProperty("GrossPurchasePrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                grossPurchasePrice = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                grossPurchasePrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("PurchasePrice"))
        {
            Object obj = soapObject.getProperty("PurchasePrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                purchasePrice = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                purchasePrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("IsNetNet"))
        {
            Object obj = soapObject.getProperty("IsNetNet");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isNetNet = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isNetNet = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("OwnPurchasePrice"))
        {
            Object obj = soapObject.getProperty("OwnPurchasePrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ownPurchasePrice = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                ownPurchasePrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("OwnPurchasePriceNote"))
        {
            Object obj = soapObject.getProperty("OwnPurchasePriceNote");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ownPurchasePriceNote = j.toString();
            }else if (obj!= null && obj instanceof String){
                ownPurchasePriceNote = (String) obj;
            }
        }
        if (soapObject.hasProperty("PurchasePriceType"))
        {
            Object obj = soapObject.getProperty("PurchasePriceType");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                purchasePriceType = WS_Enums.PurchasePriceType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("OrganizationReference"))
        {
            Object obj = soapObject.getProperty("OrganizationReference");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                organizationReference = j.toString();
            }else if (obj!= null && obj instanceof String){
                organizationReference = (String) obj;
            }
        }
        if (soapObject.hasProperty("OrganizationModifiedDateTime"))
        {
            Object obj = soapObject.getProperty("OrganizationModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                organizationModifiedDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                organizationModifiedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastExchangeDateTime"))
        {
            Object obj = soapObject.getProperty("LastExchangeDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastExchangeDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                lastExchangeDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("IsPreferredSupplierRow"))
        {
            Object obj = soapObject.getProperty("IsPreferredSupplierRow");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isPreferredSupplierRow = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isPreferredSupplierRow = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Source"))
        {
            Object obj = soapObject.getProperty("Source");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                source = WS_Enums.DataSource.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("IsActive"))
        {
            Object obj = soapObject.getProperty("IsActive");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isActive = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isActive = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("SeasonProfileId"))
        {
            Object obj = soapObject.getProperty("SeasonProfileId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                seasonProfileId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                seasonProfileId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CollectionBarcode"))
        {
            Object obj = soapObject.getProperty("CollectionBarcode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                collectionBarcode = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                collectionBarcode = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CollectionAmount"))
        {
            Object obj = soapObject.getProperty("CollectionAmount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                collectionAmount = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                collectionAmount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CollectionParentBarcode"))
        {
            Object obj = soapObject.getProperty("CollectionParentBarcode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                collectionParentBarcode = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                collectionParentBarcode = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("GrossPriceReductionPercentage"))
        {
            Object obj = soapObject.getProperty("GrossPriceReductionPercentage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                grossPriceReductionPercentage = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                grossPriceReductionPercentage = (Double) obj;
            }
        }
        if (soapObject.hasProperty("IsDerived"))
        {
            Object obj = soapObject.getProperty("IsDerived");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isDerived = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isDerived = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("OrganizationId"))
        {
            Object obj = soapObject.getProperty("OrganizationId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                organizationId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                organizationId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CompanyId"))
        {
            Object obj = soapObject.getProperty("CompanyId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                companyId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                companyId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedByUserId"))
        {
            Object obj = soapObject.getProperty("CreatedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                createdByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedDateTime"))
        {
            Object obj = soapObject.getProperty("CreatedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                createdDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedByUserId"))
        {
            Object obj = soapObject.getProperty("LastModifiedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                lastModifiedByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedDateTime"))
        {
            Object obj = soapObject.getProperty("LastModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                lastModifiedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ItemId"))
        {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                itemId = (Integer) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return productId;
            case 1:
                return supplierId;
            case 2:
                return purchaseStatusRowId;
            case 3:
                return externalCode;
            case 4:
                return orderCode;
            case 5:
                return purchaseUnitBarcode;
            case 6:
                return orderMultiplier;
            case 7:
                return minimumOrderQuantity;
            case 8:
                return purchaseUnitDimensionId;
            case 9:
                return purchaseUnitPackageIdField;
            case 10:
                return purchaseUnitToPurchaseContentUnitFactor;
            case 11:
                return purchaseContentUnitDimensionId;
            case 12:
                return purchaseContentUnitPackageIdField;
            case 13:
                return purchaseContentUnitToConsumerUnitFactor;
            case 14:
                return cbmPerSingleUnit;
            case 15:
                return purchasePricePerAmount;
            case 16:
                return grossPurchasePrice;
            case 17:
                return purchasePrice;
            case 18:
                return isNetNet;
            case 19:
                return ownPurchasePrice;
            case 20:
                return ownPurchasePriceNote;
            case 21:
                return purchasePriceType.toString();
            case 22:
                return organizationReference;
            case 23:
                return organizationModifiedDateTime;
            case 24:
                return lastExchangeDateTime;
            case 25:
                return isPreferredSupplierRow;
            case 26:
                return source.toString();
            case 27:
                return isActive;
            case 28:
                return seasonProfileId;
            case 29:
                return collectionBarcode;
            case 30:
                return collectionAmount;
            case 31:
                return collectionParentBarcode;
            case 32:
                return grossPriceReductionPercentage;
            case 33:
                return isDerived;
            case 34:
                return organizationId;
            case 35:
                return companyId;
            case 36:
                return createdByUserId;
            case 37:
                return createdDateTime;
            case 38:
                return lastModifiedByUserId;
            case 39:
                return lastModifiedDateTime;
            case 40:
                return itemId;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 41;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductId";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SupplierId";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PurchaseStatusRowId";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExternalCode";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OrderCode";
                break;
            case 5:
                info.type = Long.class;
                info.name = "PurchaseUnitBarcode";
                break;
            case 6:
                info.type = Double.class;
                info.name = "OrderMultiplier";
                break;
            case 7:
                info.type = Double.class;
                info.name = "MinimumOrderQuantity";
                break;
            case 8:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PurchaseUnitDimensionId";
                break;
            case 9:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PurchaseUnitPackageId";
                break;
            case 10:
                info.type = Double.class;
                info.name = "PurchaseUnitToPurchaseContentUnitFactor";
                break;
            case 11:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PurchaseContentUnitDimensionId";
                break;
            case 12:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PurchaseContentUnitPackageId";
                break;
            case 13:
                info.type = Double.class;
                info.name = "PurchaseContentUnitToConsumerUnitFactor";
                break;
            case 14:
                info.type = Double.class;
                info.name = "CbmPerSingleUnit";
                break;
            case 15:
                info.type = Double.class;
                info.name = "PurchasePricePerAmount";
                break;
            case 16:
                info.type = Double.class;
                info.name = "GrossPurchasePrice";
                break;
            case 17:
                info.type = Double.class;
                info.name = "PurchasePrice";
                break;
            case 18:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsNetNet";
                break;
            case 19:
                info.type = Double.class;
                info.name = "OwnPurchasePrice";
                break;
            case 20:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OwnPurchasePriceNote";
                break;
            case 21:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PurchasePriceType";
                break;
            case 22:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OrganizationReference";
                break;
            case 23:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "OrganizationModifiedDateTime";
                break;
            case 24:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastExchangeDateTime";
                break;
            case 25:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsPreferredSupplierRow";
                break;
            case 26:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Source";
                break;
            case 27:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsActive";
                break;
            case 28:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SeasonProfileId";
                break;
            case 29:
                info.type = Long.class;
                info.name = "CollectionBarcode";
                break;
            case 30:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CollectionAmount";
                break;
            case 31:
                info.type = Long.class;
                info.name = "CollectionParentBarcode";
                break;
            case 32:
                info.type = Double.class;
                info.name = "GrossPriceReductionPercentage";
                break;
            case 33:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsDerived";
                break;
            case 34:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "OrganizationId";
                break;
            case 35:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;
            case 36:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 37:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 38:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 39:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;
            case 40:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
        }
    }
    
//    @Override //    public String getInnerText() { //        return null; //    } // // //    @Override //    public void setInnerText(String s) { //    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
