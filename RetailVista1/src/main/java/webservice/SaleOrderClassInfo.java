package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/16/2017 5:54:09 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.lang.*;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class SaleOrderClassInfo implements KvmSerializable {
    
    public int storeId;
    public boolean cancelled;
    public String description;
    public int requiredFieldSetId;
    public WS_Enums.DeliveryType deliveryType;
    public int conceptSaleOrderReportId;
    public int finalSaleOrderReportId;
    public int copySaleOrderReportId;
    public int picklistReportId;
    public WS_Enums.SuggestDirectReservationAmountType directReservationAmountType;
    public int numberOfConceptReports;
    public int numberOfFinalReports;
    public int numberOfCopyReports;
    public int numberOfPicklistReports;
    public WS_Enums.SaleOrders_ConceptOrderModus conceptSaleOrderModus;
    public boolean autoAddPrepaymentRequest;
    public SaleOrderStatus statusWhenDone;
    public int companyId;
    public int createdByUserId;
    public String createdDateTime;
    public int lastModifiedByUserId;
    public String lastModifiedDateTime;
    public int itemId;
    
    public SaleOrderClassInfo(){}
    
    public SaleOrderClassInfo(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("StoreId"))
        {
            Object obj = soapObject.getProperty("StoreId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                storeId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                storeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Cancelled"))
        {
            Object obj = soapObject.getProperty("Cancelled");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cancelled = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                cancelled = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Description"))
        {
            Object obj = soapObject.getProperty("Description");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                description = j.toString();
            }else if (obj!= null && obj instanceof String){
                description = (String) obj;
            }
        }
        if (soapObject.hasProperty("RequiredFieldSetId"))
        {
            Object obj = soapObject.getProperty("RequiredFieldSetId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                requiredFieldSetId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                requiredFieldSetId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("DeliveryType"))
        {
            Object obj = soapObject.getProperty("DeliveryType");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                deliveryType = WS_Enums.DeliveryType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("ConceptSaleOrderReportId"))
        {
            Object obj = soapObject.getProperty("ConceptSaleOrderReportId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                conceptSaleOrderReportId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                conceptSaleOrderReportId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FinalSaleOrderReportId"))
        {
            Object obj = soapObject.getProperty("FinalSaleOrderReportId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                finalSaleOrderReportId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                finalSaleOrderReportId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CopySaleOrderReportId"))
        {
            Object obj = soapObject.getProperty("CopySaleOrderReportId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                copySaleOrderReportId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                copySaleOrderReportId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PicklistReportId"))
        {
            Object obj = soapObject.getProperty("PicklistReportId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                picklistReportId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                picklistReportId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("DirectReservationAmountType"))
        {
            Object obj = soapObject.getProperty("DirectReservationAmountType");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                directReservationAmountType = WS_Enums.SuggestDirectReservationAmountType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("NumberOfConceptReports"))
        {
            Object obj = soapObject.getProperty("NumberOfConceptReports");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numberOfConceptReports = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                numberOfConceptReports = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("NumberOfFinalReports"))
        {
            Object obj = soapObject.getProperty("NumberOfFinalReports");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numberOfFinalReports = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                numberOfFinalReports = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("NumberOfCopyReports"))
        {
            Object obj = soapObject.getProperty("NumberOfCopyReports");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numberOfCopyReports = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                numberOfCopyReports = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("NumberOfPicklistReports"))
        {
            Object obj = soapObject.getProperty("NumberOfPicklistReports");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numberOfPicklistReports = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                numberOfPicklistReports = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ConceptSaleOrderModus"))
        {
            Object obj = soapObject.getProperty("ConceptSaleOrderModus");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                conceptSaleOrderModus = WS_Enums.SaleOrders_ConceptOrderModus.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("AutoAddPrepaymentRequest"))
        {
            Object obj = soapObject.getProperty("AutoAddPrepaymentRequest");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                autoAddPrepaymentRequest = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                autoAddPrepaymentRequest = (Boolean) obj;
            }
        }
//        if (soapObject.hasProperty("StatusWhenDone"))
//        {
//            java.lang.Object obj = soapObject.getProperty("StatusWhenDone");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                statusWhenDone = SaleOrderStatus.fromString(j.toString());
//            }
//        }
        if (soapObject.hasProperty("CompanyId"))
        {
            Object obj = soapObject.getProperty("CompanyId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                companyId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                companyId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedByUserId"))
        {
            Object obj = soapObject.getProperty("CreatedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                createdByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedDateTime"))
        {
            Object obj = soapObject.getProperty("CreatedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                createdDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedByUserId"))
        {
            Object obj = soapObject.getProperty("LastModifiedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                lastModifiedByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedDateTime"))
        {
            Object obj = soapObject.getProperty("LastModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                lastModifiedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ItemId"))
        {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                itemId = (Integer) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return storeId;
            case 1:
                return cancelled;
            case 2:
                return description;
            case 3:
                return requiredFieldSetId;
            case 4:
                return deliveryType.toString();
            case 5:
                return conceptSaleOrderReportId;
            case 6:
                return finalSaleOrderReportId;
            case 7:
                return copySaleOrderReportId;
            case 8:
                return picklistReportId;
            case 9:
                return directReservationAmountType.toString();
            case 10:
                return numberOfConceptReports;
            case 11:
                return numberOfFinalReports;
            case 12:
                return numberOfCopyReports;
            case 13:
                return numberOfPicklistReports;
            case 14:
                return conceptSaleOrderModus.toString();
            case 15:
                return autoAddPrepaymentRequest;
            case 16:
                return statusWhenDone.toString();
            case 17:
                return companyId;
            case 18:
                return createdByUserId;
            case 19:
                return createdDateTime;
            case 20:
                return lastModifiedByUserId;
            case 21:
                return lastModifiedDateTime;
            case 22:
                return itemId;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 23;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreId";
                break;
            case 1:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Cancelled";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Description";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "RequiredFieldSetId";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DeliveryType";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ConceptSaleOrderReportId";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "FinalSaleOrderReportId";
                break;
            case 7:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CopySaleOrderReportId";
                break;
            case 8:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PicklistReportId";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DirectReservationAmountType";
                break;
            case 10:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "NumberOfConceptReports";
                break;
            case 11:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "NumberOfFinalReports";
                break;
            case 12:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "NumberOfCopyReports";
                break;
            case 13:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "NumberOfPicklistReports";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ConceptSaleOrderModus";
                break;
            case 15:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AutoAddPrepaymentRequest";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "StatusWhenDone";
                break;
            case 17:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;
            case 18:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 19:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 20:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 21:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;
            case 22:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
        }
    }
    
//    @Override //    public String getInnerText() { //        return null; //    } // // //    @Override //    public void setInnerText(String s) { //    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
