package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/11/2017 5:10:09 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class Retail3000AuthenticateToken implements KvmSerializable {
    
    public String username;
    public String password;
    public int companyNumber;
    public int storeNumber;
    public String clientIp;
    public String languageCode;
    public int scannerNumber;
    public String clientApplicationCode;
    public String clientAppVersion;
    public int mobileDeviceNumber;
    public String encodedMustUnderstand;
    public String encodedMustUnderstand12;
    public boolean mustUnderstand;
    public String actor;
    public String role;
    public boolean didUnderstand;
    public String encodedRelay;
    public boolean relay;
    
    public Retail3000AuthenticateToken(){}
    
    public Retail3000AuthenticateToken(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("Username"))
        {
            Object obj = soapObject.getProperty("Username");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                username = j.toString();
            }else if (obj!= null && obj instanceof String){
                username = (String) obj;
            }
        }
        if (soapObject.hasProperty("Password"))
        {
            Object obj = soapObject.getProperty("Password");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                password = j.toString();
            }else if (obj!= null && obj instanceof String){
                password = (String) obj;
            }
        }
        if (soapObject.hasProperty("CompanyNumber"))
        {
            Object obj = soapObject.getProperty("CompanyNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                companyNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                companyNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("StoreNumber"))
        {
            Object obj = soapObject.getProperty("StoreNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                storeNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                storeNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ClientIp"))
        {
            Object obj = soapObject.getProperty("ClientIp");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                clientIp = j.toString();
            }else if (obj!= null && obj instanceof String){
                clientIp = (String) obj;
            }
        }
        if (soapObject.hasProperty("LanguageCode"))
        {
            Object obj = soapObject.getProperty("LanguageCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                languageCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                languageCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("ScannerNumber"))
        {
            Object obj = soapObject.getProperty("ScannerNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                scannerNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                scannerNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ClientApplicationCode"))
        {
            Object obj = soapObject.getProperty("ClientApplicationCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                clientApplicationCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                clientApplicationCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("ClientAppVersion"))
        {
            Object obj = soapObject.getProperty("ClientAppVersion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                clientAppVersion = j.toString();
            }else if (obj!= null && obj instanceof String){
                clientAppVersion = (String) obj;
            }
        }
        if (soapObject.hasProperty("MobileDeviceNumber"))
        {
            Object obj = soapObject.getProperty("MobileDeviceNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mobileDeviceNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                mobileDeviceNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("EncodedMustUnderstand"))
        {
            Object obj = soapObject.getProperty("EncodedMustUnderstand");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                encodedMustUnderstand = j.toString();
            }else if (obj!= null && obj instanceof String){
                encodedMustUnderstand = (String) obj;
            }
        }
        if (soapObject.hasProperty("EncodedMustUnderstand12"))
        {
            Object obj = soapObject.getProperty("EncodedMustUnderstand12");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                encodedMustUnderstand12 = j.toString();
            }else if (obj!= null && obj instanceof String){
                encodedMustUnderstand12 = (String) obj;
            }
        }
        if (soapObject.hasProperty("MustUnderstand"))
        {
            Object obj = soapObject.getProperty("MustUnderstand");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mustUnderstand = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                mustUnderstand = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Actor"))
        {
            Object obj = soapObject.getProperty("Actor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                actor = j.toString();
            }else if (obj!= null && obj instanceof String){
                actor = (String) obj;
            }
        }
        if (soapObject.hasProperty("Role"))
        {
            Object obj = soapObject.getProperty("Role");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                role = j.toString();
            }else if (obj!= null && obj instanceof String){
                role = (String) obj;
            }
        }
        if (soapObject.hasProperty("DidUnderstand"))
        {
            Object obj = soapObject.getProperty("DidUnderstand");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                didUnderstand = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                didUnderstand = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("EncodedRelay"))
        {
            Object obj = soapObject.getProperty("EncodedRelay");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                encodedRelay = j.toString();
            }else if (obj!= null && obj instanceof String){
                encodedRelay = (String) obj;
            }
        }
        if (soapObject.hasProperty("Relay"))
        {
            Object obj = soapObject.getProperty("Relay");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                relay = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                relay = (Boolean) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return username;
            case 1:
                return password;
            case 2:
                return companyNumber;
            case 3:
                return storeNumber;
            case 4:
                return clientIp;
            case 5:
                return languageCode;
            case 6:
                return scannerNumber;
            case 7:
                return clientApplicationCode;
            case 8:
                return clientAppVersion;
            case 9:
                return mobileDeviceNumber;
            case 10:
                return encodedMustUnderstand;
            case 11:
                return encodedMustUnderstand12;
            case 12:
                return mustUnderstand;
            case 13:
                return actor;
            case 14:
                return role;
            case 15:
                return didUnderstand;
            case 16:
                return encodedRelay;
            case 17:
                return relay;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 18;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Username";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Password";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyNumber";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreNumber";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ClientIp";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LanguageCode";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ScannerNumber";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ClientApplicationCode";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ClientAppVersion";
                break;
            case 9:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "MobileDeviceNumber";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EncodedMustUnderstand";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EncodedMustUnderstand12";
                break;
            case 12:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "MustUnderstand";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Actor";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Role";
                break;
            case 15:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "DidUnderstand";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "EncodedRelay";
                break;
            case 17:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Relay";
                break;
        }
    }
    
//    @Override
//    public String getInnerText() {
//        return null;
//    }
//
//
//    @Override
//    public void setInnerText(String s) {
//    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
