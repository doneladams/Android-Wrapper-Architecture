package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 9/11/2018 7:31:36 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//


import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class ViewSupplierInfo implements KvmSerializable {

    public double interbrancheFreeStock;
    public String generalNameAndInterbrancheTotalFreeStock;
    public String seasonProfileDescription;
    public long supplierNumber;
    public String externalCode;
    public String financialExportCode;
    public long gs1Code;
    public String generalName;
    public String vatCode;
    public double defaultGrossProfitPercentage;
    public String iban;
    public String bIC;
    public WS_Enums.DefaultCommunicationType defaultCommunicationType;
    public String administrationEmailAddress;
    public WS_Enums.GS1EdiFormat gS1EdiFormat;
    public long gS1EdiPartyNumber;
    public long gS1EdiSupplierPartyNumber;
    public WS_Enums.PurchaseOrderRowOrderType pORowOrderType;
    public String pOEmailAddress;
    public WS_Enums.SupplierType supplierType;
    public int fallbackVatId;
    public String information;
    public boolean isBackorders;
    public boolean isDisablePreferredSupplierChange;
    public boolean isConsignmentSupplier;
    public boolean isInterbranche;
    public boolean isCancelled;
    public boolean ignoreAutoStockValues;
    public boolean autoStockCalculate;
    public int autoStockDefaultMinStockDays;
    public int autoStockDefaultMaxStockDays;
    public int autoStockDefaultSaleDays;
    public int autoStockMinStockPercentage;
    public int autoStockMaxStockPercentage;
    public int seasonProfileId;
    public int labelClassIdField;
    public boolean printLabel;
    public boolean maintainStock;
    public boolean allowSavings;
    public boolean allowDiscounts;
    public boolean ignoreChanges;
    public WS_Enums.PurchaseDiscountCalculationMethod discountCalculationMethod;
    public Byte orderDiscountExecuteOrder;
    public Byte performanceDiscountExecuteOrder;
    public Byte freeDiscount1ExecuteOrder;
    public Byte freeDiscount2ExecuteOrder;
    public Byte ediDiscountExecuteOrder;
    public int purchaseOrdersMinimumOrderAmount;
    public int defaultDeliveryDays;
    public boolean isDerived;
    public int organizationId;
    public int companyId;
    public int createdByUserId;
    public String createdDateTime;
    public int lastModifiedByUserId;
    public String lastModifiedDateTime;
    public int itemId;
    public boolean isSelected;

    public ViewSupplierInfo() {
    }

    public ViewSupplierInfo(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("InterbrancheFreeStock")) {
            Object obj = soapObject.getProperty("InterbrancheFreeStock");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                interbrancheFreeStock = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                interbrancheFreeStock = (Double) obj;
            }
        }
        if (soapObject.hasProperty("GeneralNameAndInterbrancheTotalFreeStock")) {
            Object obj = soapObject.getProperty("GeneralNameAndInterbrancheTotalFreeStock");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                generalNameAndInterbrancheTotalFreeStock = j.toString();
            } else if (obj != null && obj instanceof String) {
                generalNameAndInterbrancheTotalFreeStock = (String) obj;
            }
        }
        if (soapObject.hasProperty("SeasonProfileDescription")) {
            Object obj = soapObject.getProperty("SeasonProfileDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                seasonProfileDescription = j.toString();
            } else if (obj != null && obj instanceof String) {
                seasonProfileDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("SupplierNumber")) {
            Object obj = soapObject.getProperty("SupplierNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                supplierNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                supplierNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ExternalCode")) {
            Object obj = soapObject.getProperty("ExternalCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                externalCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                externalCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("FinancialExportCode")) {
            Object obj = soapObject.getProperty("FinancialExportCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                financialExportCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                financialExportCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("Gs1Code")) {
            Object obj = soapObject.getProperty("Gs1Code");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                gs1Code = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                gs1Code = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("GeneralName")) {
            Object obj = soapObject.getProperty("GeneralName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                generalName = j.toString();
            } else if (obj != null && obj instanceof String) {
                generalName = (String) obj;
            }
        }
        if (soapObject.hasProperty("VatCode")) {
            Object obj = soapObject.getProperty("VatCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                vatCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                vatCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("DefaultGrossProfitPercentage")) {
            Object obj = soapObject.getProperty("DefaultGrossProfitPercentage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                defaultGrossProfitPercentage = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                defaultGrossProfitPercentage = (Double) obj;
            }
        }
        if (soapObject.hasProperty("Iban")) {
            Object obj = soapObject.getProperty("Iban");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                iban = j.toString();
            } else if (obj != null && obj instanceof String) {
                iban = (String) obj;
            }
        }
        if (soapObject.hasProperty("BIC")) {
            Object obj = soapObject.getProperty("BIC");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                bIC = j.toString();
            } else if (obj != null && obj instanceof String) {
                bIC = (String) obj;
            }
        }
        if (soapObject.hasProperty("DefaultCommunicationType")) {
            Object obj = soapObject.getProperty("DefaultCommunicationType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                defaultCommunicationType = WS_Enums.DefaultCommunicationType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("AdministrationEmailAddress")) {
            Object obj = soapObject.getProperty("AdministrationEmailAddress");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                administrationEmailAddress = j.toString();
            } else if (obj != null && obj instanceof String) {
                administrationEmailAddress = (String) obj;
            }
        }
        if (soapObject.hasProperty("GS1EdiFormat")) {
            Object obj = soapObject.getProperty("GS1EdiFormat");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                gS1EdiFormat = WS_Enums.GS1EdiFormat.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("GS1EdiPartyNumber")) {
            Object obj = soapObject.getProperty("GS1EdiPartyNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                gS1EdiPartyNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                gS1EdiPartyNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("GS1EdiSupplierPartyNumber")) {
            Object obj = soapObject.getProperty("GS1EdiSupplierPartyNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                gS1EdiSupplierPartyNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                gS1EdiSupplierPartyNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PORowOrderType")) {
            Object obj = soapObject.getProperty("PORowOrderType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                pORowOrderType = WS_Enums.PurchaseOrderRowOrderType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("POEmailAddress")) {
            Object obj = soapObject.getProperty("POEmailAddress");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                pOEmailAddress = j.toString();
            } else if (obj != null && obj instanceof String) {
                pOEmailAddress = (String) obj;
            }
        }
        if (soapObject.hasProperty("SupplierType")) {
            Object obj = soapObject.getProperty("SupplierType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                supplierType = WS_Enums.SupplierType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("FallbackVatId")) {
            Object obj = soapObject.getProperty("FallbackVatId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                fallbackVatId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                fallbackVatId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Information")) {
            Object obj = soapObject.getProperty("Information");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                information = j.toString();
            } else if (obj != null && obj instanceof String) {
                information = (String) obj;
            }
        }
        if (soapObject.hasProperty("IsBackorders")) {
            Object obj = soapObject.getProperty("IsBackorders");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isBackorders = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isBackorders = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsDisablePreferredSupplierChange")) {
            Object obj = soapObject.getProperty("IsDisablePreferredSupplierChange");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isDisablePreferredSupplierChange = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isDisablePreferredSupplierChange = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsConsignmentSupplier")) {
            Object obj = soapObject.getProperty("IsConsignmentSupplier");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isConsignmentSupplier = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isConsignmentSupplier = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsInterbranche")) {
            Object obj = soapObject.getProperty("IsInterbranche");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isInterbranche = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isInterbranche = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsCancelled")) {
            Object obj = soapObject.getProperty("IsCancelled");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isCancelled = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isCancelled = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IgnoreAutoStockValues")) {
            Object obj = soapObject.getProperty("IgnoreAutoStockValues");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                ignoreAutoStockValues = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                ignoreAutoStockValues = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockCalculate")) {
            Object obj = soapObject.getProperty("AutoStockCalculate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                autoStockCalculate = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                autoStockCalculate = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockDefaultMinStockDays")) {
            Object obj = soapObject.getProperty("AutoStockDefaultMinStockDays");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                autoStockDefaultMinStockDays = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                autoStockDefaultMinStockDays = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockDefaultMaxStockDays")) {
            Object obj = soapObject.getProperty("AutoStockDefaultMaxStockDays");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                autoStockDefaultMaxStockDays = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                autoStockDefaultMaxStockDays = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockDefaultSaleDays")) {
            Object obj = soapObject.getProperty("AutoStockDefaultSaleDays");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                autoStockDefaultSaleDays = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                autoStockDefaultSaleDays = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockMinStockPercentage")) {
            Object obj = soapObject.getProperty("AutoStockMinStockPercentage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                autoStockMinStockPercentage = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                autoStockMinStockPercentage = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockMaxStockPercentage")) {
            Object obj = soapObject.getProperty("AutoStockMaxStockPercentage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                autoStockMaxStockPercentage = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                autoStockMaxStockPercentage = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SeasonProfileId")) {
            Object obj = soapObject.getProperty("SeasonProfileId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                seasonProfileId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                seasonProfileId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LabelClassId")) {
            Object obj = soapObject.getProperty("LabelClassId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                labelClassIdField = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                labelClassIdField = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PrintLabel")) {
            Object obj = soapObject.getProperty("PrintLabel");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                printLabel = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                printLabel = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("MaintainStock")) {
            Object obj = soapObject.getProperty("MaintainStock");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                maintainStock = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                maintainStock = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("AllowSavings")) {
            Object obj = soapObject.getProperty("AllowSavings");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                allowSavings = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                allowSavings = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("AllowDiscounts")) {
            Object obj = soapObject.getProperty("AllowDiscounts");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                allowDiscounts = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                allowDiscounts = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IgnoreChanges")) {
            Object obj = soapObject.getProperty("IgnoreChanges");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                ignoreChanges = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                ignoreChanges = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("DiscountCalculationMethod")) {
            Object obj = soapObject.getProperty("DiscountCalculationMethod");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                discountCalculationMethod = WS_Enums.PurchaseDiscountCalculationMethod.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("OrderDiscountExecuteOrder")) {
            Object obj = soapObject.getProperty("OrderDiscountExecuteOrder");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                orderDiscountExecuteOrder = Byte.parseByte(j.toString());
            } else if (obj != null && obj instanceof Byte) {
                orderDiscountExecuteOrder = (Byte) obj;
            }
        }
        if (soapObject.hasProperty("PerformanceDiscountExecuteOrder")) {
            Object obj = soapObject.getProperty("PerformanceDiscountExecuteOrder");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                performanceDiscountExecuteOrder = Byte.parseByte(j.toString());
            } else if (obj != null && obj instanceof Byte) {
                performanceDiscountExecuteOrder = (Byte) obj;
            }
        }
        if (soapObject.hasProperty("FreeDiscount1ExecuteOrder")) {
            Object obj = soapObject.getProperty("FreeDiscount1ExecuteOrder");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                freeDiscount1ExecuteOrder = Byte.parseByte(j.toString());
            } else if (obj != null && obj instanceof Byte) {
                freeDiscount1ExecuteOrder = (Byte) obj;
            }
        }
        if (soapObject.hasProperty("FreeDiscount2ExecuteOrder")) {
            Object obj = soapObject.getProperty("FreeDiscount2ExecuteOrder");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                freeDiscount2ExecuteOrder = Byte.parseByte(j.toString());
            } else if (obj != null && obj instanceof Byte) {
                freeDiscount2ExecuteOrder = (Byte) obj;
            }
        }
        if (soapObject.hasProperty("EdiDiscountExecuteOrder")) {
            Object obj = soapObject.getProperty("EdiDiscountExecuteOrder");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                ediDiscountExecuteOrder = Byte.parseByte(j.toString());
            } else if (obj != null && obj instanceof Byte) {
                ediDiscountExecuteOrder = (Byte) obj;
            }
        }
        if (soapObject.hasProperty("PurchaseOrdersMinimumOrderAmount")) {
            Object obj = soapObject.getProperty("PurchaseOrdersMinimumOrderAmount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                purchaseOrdersMinimumOrderAmount = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                purchaseOrdersMinimumOrderAmount = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("DefaultDeliveryDays")) {
            Object obj = soapObject.getProperty("DefaultDeliveryDays");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                defaultDeliveryDays = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                defaultDeliveryDays = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IsDerived")) {
            Object obj = soapObject.getProperty("IsDerived");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isDerived = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isDerived = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("OrganizationId")) {
            Object obj = soapObject.getProperty("OrganizationId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                organizationId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                organizationId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CompanyId")) {
            Object obj = soapObject.getProperty("CompanyId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                companyId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                companyId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedByUserId")) {
            Object obj = soapObject.getProperty("CreatedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                createdByUserId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                createdByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedDateTime")) {
            Object obj = soapObject.getProperty("CreatedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                createdDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                createdDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedByUserId")) {
            Object obj = soapObject.getProperty("LastModifiedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastModifiedByUserId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                lastModifiedByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedDateTime")) {
            Object obj = soapObject.getProperty("LastModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastModifiedDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastModifiedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ItemId")) {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                itemId = (Integer) obj;
            }
        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return interbrancheFreeStock;
            case 1:
                return generalNameAndInterbrancheTotalFreeStock;
            case 2:
                return seasonProfileDescription;
            case 3:
                return supplierNumber;
            case 4:
                return externalCode;
            case 5:
                return financialExportCode;
            case 6:
                return gs1Code;
            case 7:
                return generalName;
            case 8:
                return vatCode;
            case 9:
                return defaultGrossProfitPercentage;
            case 10:
                return iban;
            case 11:
                return bIC;
            case 12:
                return defaultCommunicationType.toString();
            case 13:
                return administrationEmailAddress;
            case 14:
                return gS1EdiFormat.toString();
            case 15:
                return gS1EdiPartyNumber;
            case 16:
                return gS1EdiSupplierPartyNumber;
            case 17:
                return pORowOrderType.toString();
            case 18:
                return pOEmailAddress;
            case 19:
                return supplierType.toString();
            case 20:
                return fallbackVatId;
            case 21:
                return information;
            case 22:
                return isBackorders;
            case 23:
                return isDisablePreferredSupplierChange;
            case 24:
                return isConsignmentSupplier;
            case 25:
                return isInterbranche;
            case 26:
                return isCancelled;
            case 27:
                return ignoreAutoStockValues;
            case 28:
                return autoStockCalculate;
            case 29:
                return autoStockDefaultMinStockDays;
            case 30:
                return autoStockDefaultMaxStockDays;
            case 31:
                return autoStockDefaultSaleDays;
            case 32:
                return autoStockMinStockPercentage;
            case 33:
                return autoStockMaxStockPercentage;
            case 34:
                return seasonProfileId;
            case 35:
                return labelClassIdField;
            case 36:
                return printLabel;
            case 37:
                return maintainStock;
            case 38:
                return allowSavings;
            case 39:
                return allowDiscounts;
            case 40:
                return ignoreChanges;
            case 41:
                return discountCalculationMethod.toString();
            case 42:
                return orderDiscountExecuteOrder.toString();
            case 43:
                return performanceDiscountExecuteOrder.toString();
            case 44:
                return freeDiscount1ExecuteOrder.toString();
            case 45:
                return freeDiscount2ExecuteOrder.toString();
            case 46:
                return ediDiscountExecuteOrder.toString();
            case 47:
                return purchaseOrdersMinimumOrderAmount;
            case 48:
                return defaultDeliveryDays;
            case 49:
                return isDerived;
            case 50:
                return organizationId;
            case 51:
                return companyId;
            case 52:
                return createdByUserId;
            case 53:
                return createdDateTime;
            case 54:
                return lastModifiedByUserId;
            case 55:
                return lastModifiedDateTime;
            case 56:
                return itemId;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 57;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = Double.class;
                info.name = "InterbrancheFreeStock";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "GeneralNameAndInterbrancheTotalFreeStock";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SeasonProfileDescription";
                break;
            case 3:
                info.type = Long.class;
                info.name = "SupplierNumber";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExternalCode";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FinancialExportCode";
                break;
            case 6:
                info.type = Long.class;
                info.name = "Gs1Code";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "GeneralName";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VatCode";
                break;
            case 9:
                info.type = Double.class;
                info.name = "DefaultGrossProfitPercentage";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Iban";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "BIC";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DefaultCommunicationType";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AdministrationEmailAddress";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "GS1EdiFormat";
                break;
            case 15:
                info.type = Long.class;
                info.name = "GS1EdiPartyNumber";
                break;
            case 16:
                info.type = Long.class;
                info.name = "GS1EdiSupplierPartyNumber";
                break;
            case 17:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PORowOrderType";
                break;
            case 18:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "POEmailAddress";
                break;
            case 19:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SupplierType";
                break;
            case 20:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "FallbackVatId";
                break;
            case 21:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Information";
                break;
            case 22:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsBackorders";
                break;
            case 23:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsDisablePreferredSupplierChange";
                break;
            case 24:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsConsignmentSupplier";
                break;
            case 25:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsInterbranche";
                break;
            case 26:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsCancelled";
                break;
            case 27:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IgnoreAutoStockValues";
                break;
            case 28:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AutoStockCalculate";
                break;
            case 29:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AutoStockDefaultMinStockDays";
                break;
            case 30:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AutoStockDefaultMaxStockDays";
                break;
            case 31:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AutoStockDefaultSaleDays";
                break;
            case 32:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AutoStockMinStockPercentage";
                break;
            case 33:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AutoStockMaxStockPercentage";
                break;
            case 34:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SeasonProfileId";
                break;
            case 35:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LabelClassId";
                break;
            case 36:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PrintLabel";
                break;
            case 37:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "MaintainStock";
                break;
            case 38:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AllowSavings";
                break;
            case 39:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AllowDiscounts";
                break;
            case 40:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IgnoreChanges";
                break;
            case 41:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DiscountCalculationMethod";
                break;
            case 42:
                info.type = Byte.class;
                info.name = "OrderDiscountExecuteOrder";
                break;
            case 43:
                info.type = Byte.class;
                info.name = "PerformanceDiscountExecuteOrder";
                break;
            case 44:
                info.type = Byte.class;
                info.name = "FreeDiscount1ExecuteOrder";
                break;
            case 45:
                info.type = Byte.class;
                info.name = "FreeDiscount2ExecuteOrder";
                break;
            case 46:
                info.type = Byte.class;
                info.name = "EdiDiscountExecuteOrder";
                break;
            case 47:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PurchaseOrdersMinimumOrderAmount";
                break;
            case 48:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "DefaultDeliveryDays";
                break;
            case 49:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsDerived";
                break;
            case 50:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "OrganizationId";
                break;
            case 51:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;
            case 52:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 53:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 54:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 55:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;
            case 56:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
