package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/11/2017 5:10:09 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.lang.*;
import java.util.Hashtable;

import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ViewStoreProductLocationInfo implements KvmSerializable {

    public long productNumber;
    public String productDescription;
    public long productMainBarcode;
    public String locationCode;
    public String stockAndLocationCode;
    public String lastReceivedProductDate;
    public String lastStockAdjustmentDateTime;
    public String lastStockLocationMovementDateTime;
    public String lastCashSaleDateTime;
    public String lastInvoiceSaleDateTime;
    public String lastInventoryDate;
    public String lastSaleDateTime;
    public int companyId;
    public int storeId;
    public int productId;
    public int locationLevel5Id;
    public double stock;
    public int createdByUserId;
    public String createdDateTime;
    public int lastModifiedByUserId;
    public String lastModifiedDateTime;
    public int itemId;

    public ViewStoreProductLocationInfo() {
    }

    public ViewStoreProductLocationInfo(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("ProductNumber")) {
            Object obj = soapObject.getProperty("ProductNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ProductDescription")) {
            Object obj = soapObject.getProperty("ProductDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productDescription = j.toString();
            } else if (obj != null && obj instanceof String) {
                productDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("ProductMainBarcode")) {
            Object obj = soapObject.getProperty("ProductMainBarcode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productMainBarcode = Long.parseLong(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productMainBarcode = (Long) obj;
            }
        }
        if (soapObject.hasProperty("LocationCode")) {
            Object obj = soapObject.getProperty("LocationCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                locationCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                locationCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("StockAndLocationCode")) {
            Object obj = soapObject.getProperty("StockAndLocationCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                stockAndLocationCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                stockAndLocationCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastReceivedProductDate")) {
            Object obj = soapObject.getProperty("LastReceivedProductDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastReceivedProductDate = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastReceivedProductDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastStockAdjustmentDateTime")) {
            Object obj = soapObject.getProperty("LastStockAdjustmentDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastStockAdjustmentDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastStockAdjustmentDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastStockLocationMovementDateTime")) {
            Object obj = soapObject.getProperty("LastStockLocationMovementDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastStockLocationMovementDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastStockLocationMovementDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastCashSaleDateTime")) {
            Object obj = soapObject.getProperty("LastCashSaleDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastCashSaleDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastCashSaleDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastInvoiceSaleDateTime")) {
            Object obj = soapObject.getProperty("LastInvoiceSaleDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastInvoiceSaleDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastInvoiceSaleDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastInventoryDate")) {
            Object obj = soapObject.getProperty("LastInventoryDate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastInventoryDate = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastInventoryDate = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastSaleDateTime")) {
            Object obj = soapObject.getProperty("LastSaleDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastSaleDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastSaleDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("CompanyId")) {
            Object obj = soapObject.getProperty("CompanyId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                companyId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                companyId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("StoreId")) {
            Object obj = soapObject.getProperty("StoreId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                storeId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                storeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ProductId")) {
            Object obj = soapObject.getProperty("ProductId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LocationLevel5Id")) {
            Object obj = soapObject.getProperty("LocationLevel5Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                locationLevel5Id = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                locationLevel5Id = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Stock")) {
            Object obj = soapObject.getProperty("Stock");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                stock = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                stock = (Double) obj;
            }
        }
        if (soapObject.hasProperty("CreatedByUserId")) {
            Object obj = soapObject.getProperty("CreatedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                createdByUserId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                createdByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedDateTime")) {
            Object obj = soapObject.getProperty("CreatedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                createdDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                createdDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedByUserId")) {
            Object obj = soapObject.getProperty("LastModifiedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastModifiedByUserId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                lastModifiedByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedDateTime")) {
            Object obj = soapObject.getProperty("LastModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastModifiedDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastModifiedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ItemId")) {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                itemId = (Integer) obj;
            }
        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return productNumber;
            case 1:
                return productDescription;
            case 2:
                return productMainBarcode;
            case 3:
                return locationCode;
            case 4:
                return stockAndLocationCode;
            case 5:
                return lastReceivedProductDate;
            case 6:
                return lastStockAdjustmentDateTime;
            case 7:
                return lastStockLocationMovementDateTime;
            case 8:
                return lastCashSaleDateTime;
            case 9:
                return lastInvoiceSaleDateTime;
            case 10:
                return lastInventoryDate;
            case 11:
                return lastSaleDateTime;
            case 12:
                return companyId;
            case 13:
                return storeId;
            case 14:
                return productId;
            case 15:
                return locationLevel5Id;
            case 16:
                return stock;
            case 17:
                return createdByUserId;
            case 18:
                return createdDateTime;
            case 19:
                return lastModifiedByUserId;
            case 20:
                return lastModifiedDateTime;
            case 21:
                return itemId;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 22;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = Long.class;
                info.name = "ProductNumber";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ProductDescription";
                break;
            case 2:
                info.type = Long.class;
                info.name = "ProductMainBarcode";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LocationCode";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "StockAndLocationCode";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastReceivedProductDate";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastStockAdjustmentDateTime";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastStockLocationMovementDateTime";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastCashSaleDateTime";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastInvoiceSaleDateTime";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastInventoryDate";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastSaleDateTime";
                break;
            case 12:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;
            case 13:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreId";
                break;
            case 14:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductId";
                break;
            case 15:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LocationLevel5Id";
                break;
            case 16:
                info.type = Double.class;
                info.name = "Stock";
                break;
            case 17:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 18:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 19:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 20:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;
            case 21:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
        }
    }

//    @Override //    public String getInnerText() { //        return null; //    } // // //    @Override //    public void setInnerText(String s) { //    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
