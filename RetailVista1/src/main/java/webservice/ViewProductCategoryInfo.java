package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/16/2017 5:54:08 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.lang.*;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ViewProductCategoryInfo implements KvmSerializable {
    
    public String cashRegisterGroupDescription;
    public String cashRegisterGroupCode;
    public String webshopClassificationCodeField;
    public String webshopClassificationDescriptionField;
    public String departmentDescription;
    public String seasonProfileDescription;
    public int cashRegisterGroupId;
    public int productCategoryGroupId;
    public int webshopClassificationIdField;
    public int departmentId;
    public String code;
    public String externalCode;
    public long gs1Code;
    public long gs1ExportCode;
    public String externalAnnouncementCode;
    public String description;
    public int minimalMargin;
    public int maximalMargin;
    public int margin;
    public double loyaltyCardPercentage;
    public boolean isPosPromotion;
    public boolean isDoNotSendEPlato;
    public boolean isCancelled;
    public int followupNumber;
    public boolean ignoreAutoStockValues;
    public boolean autoStockCalculate;
    public int autoStockDefaultMinStockDays;
    public int autoStockDefaultMaxStockDays;
    public int autoStockDefaultSaleDays;
    public int autoStockMinStockPercentage;
    public int autoStockMaxStockPercentage;
    public int seasonProfileId;
    public int labelClassIdField;
    public boolean printLabel;
    public boolean maintainStock;
    public boolean allowSavings;
    public boolean allowDiscounts;
    public boolean isDerived;
    public int organizationId;
    public int companyId;
    public int createdByUserId;
    public String createdDateTime;
    public int lastModifiedByUserId;
    public String lastModifiedDateTime;
    public int itemId;
    
    public ViewProductCategoryInfo(){}
    
    public ViewProductCategoryInfo(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("CashRegisterGroupDescription"))
        {
            Object obj = soapObject.getProperty("CashRegisterGroupDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cashRegisterGroupDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                cashRegisterGroupDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("CashRegisterGroupCode"))
        {
            Object obj = soapObject.getProperty("CashRegisterGroupCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cashRegisterGroupCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                cashRegisterGroupCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("WebshopClassificationCode"))
        {
            Object obj = soapObject.getProperty("WebshopClassificationCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                webshopClassificationCodeField = j.toString();
            }else if (obj!= null && obj instanceof String){
                webshopClassificationCodeField = (String) obj;
            }
        }
        if (soapObject.hasProperty("WebshopClassificationDescription"))
        {
            Object obj = soapObject.getProperty("WebshopClassificationDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                webshopClassificationDescriptionField = j.toString();
            }else if (obj!= null && obj instanceof String){
                webshopClassificationDescriptionField = (String) obj;
            }
        }
        if (soapObject.hasProperty("DepartmentDescription"))
        {
            Object obj = soapObject.getProperty("DepartmentDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                departmentDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                departmentDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("SeasonProfileDescription"))
        {
            Object obj = soapObject.getProperty("SeasonProfileDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                seasonProfileDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                seasonProfileDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("CashRegisterGroupId"))
        {
            Object obj = soapObject.getProperty("CashRegisterGroupId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cashRegisterGroupId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                cashRegisterGroupId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ProductCategoryGroupId"))
        {
            Object obj = soapObject.getProperty("ProductCategoryGroupId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                productCategoryGroupId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                productCategoryGroupId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("WebshopClassificationId"))
        {
            Object obj = soapObject.getProperty("WebshopClassificationId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                webshopClassificationIdField = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                webshopClassificationIdField = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("DepartmentId"))
        {
            Object obj = soapObject.getProperty("DepartmentId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                departmentId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                departmentId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Code"))
        {
            Object obj = soapObject.getProperty("Code");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                code = j.toString();
            }else if (obj!= null && obj instanceof String){
                code = (String) obj;
            }
        }
        if (soapObject.hasProperty("ExternalCode"))
        {
            Object obj = soapObject.getProperty("ExternalCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                externalCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                externalCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("Gs1Code"))
        {
            Object obj = soapObject.getProperty("Gs1Code");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                gs1Code = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                gs1Code = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Gs1ExportCode"))
        {
            Object obj = soapObject.getProperty("Gs1ExportCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                gs1ExportCode = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                gs1ExportCode = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ExternalAnnouncementCode"))
        {
            Object obj = soapObject.getProperty("ExternalAnnouncementCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                externalAnnouncementCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                externalAnnouncementCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("Description"))
        {
            Object obj = soapObject.getProperty("Description");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                description = j.toString();
            }else if (obj!= null && obj instanceof String){
                description = (String) obj;
            }
        }
        if (soapObject.hasProperty("MinimalMargin"))
        {
            Object obj = soapObject.getProperty("MinimalMargin");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                minimalMargin = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                minimalMargin = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("MaximalMargin"))
        {
            Object obj = soapObject.getProperty("MaximalMargin");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                maximalMargin = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                maximalMargin = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Margin"))
        {
            Object obj = soapObject.getProperty("Margin");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                margin = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                margin = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LoyaltyCardPercentage"))
        {
            Object obj = soapObject.getProperty("LoyaltyCardPercentage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                loyaltyCardPercentage = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                loyaltyCardPercentage = (Double) obj;
            }
        }
        if (soapObject.hasProperty("IsPosPromotion"))
        {
            Object obj = soapObject.getProperty("IsPosPromotion");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isPosPromotion = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isPosPromotion = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsDoNotSendEPlato"))
        {
            Object obj = soapObject.getProperty("IsDoNotSendEPlato");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isDoNotSendEPlato = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isDoNotSendEPlato = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsCancelled"))
        {
            Object obj = soapObject.getProperty("IsCancelled");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isCancelled = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isCancelled = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FollowupNumber"))
        {
            Object obj = soapObject.getProperty("FollowupNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                followupNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                followupNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IgnoreAutoStockValues"))
        {
            Object obj = soapObject.getProperty("IgnoreAutoStockValues");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ignoreAutoStockValues = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                ignoreAutoStockValues = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockCalculate"))
        {
            Object obj = soapObject.getProperty("AutoStockCalculate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                autoStockCalculate = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                autoStockCalculate = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockDefaultMinStockDays"))
        {
            Object obj = soapObject.getProperty("AutoStockDefaultMinStockDays");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                autoStockDefaultMinStockDays = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                autoStockDefaultMinStockDays = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockDefaultMaxStockDays"))
        {
            Object obj = soapObject.getProperty("AutoStockDefaultMaxStockDays");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                autoStockDefaultMaxStockDays = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                autoStockDefaultMaxStockDays = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockDefaultSaleDays"))
        {
            Object obj = soapObject.getProperty("AutoStockDefaultSaleDays");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                autoStockDefaultSaleDays = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                autoStockDefaultSaleDays = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockMinStockPercentage"))
        {
            Object obj = soapObject.getProperty("AutoStockMinStockPercentage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                autoStockMinStockPercentage = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                autoStockMinStockPercentage = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockMaxStockPercentage"))
        {
            Object obj = soapObject.getProperty("AutoStockMaxStockPercentage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                autoStockMaxStockPercentage = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                autoStockMaxStockPercentage = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SeasonProfileId"))
        {
            Object obj = soapObject.getProperty("SeasonProfileId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                seasonProfileId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                seasonProfileId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LabelClassId"))
        {
            Object obj = soapObject.getProperty("LabelClassId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                labelClassIdField = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                labelClassIdField = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PrintLabel"))
        {
            Object obj = soapObject.getProperty("PrintLabel");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                printLabel = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                printLabel = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("MaintainStock"))
        {
            Object obj = soapObject.getProperty("MaintainStock");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                maintainStock = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                maintainStock = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("AllowSavings"))
        {
            Object obj = soapObject.getProperty("AllowSavings");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                allowSavings = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                allowSavings = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("AllowDiscounts"))
        {
            Object obj = soapObject.getProperty("AllowDiscounts");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                allowDiscounts = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                allowDiscounts = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsDerived"))
        {
            Object obj = soapObject.getProperty("IsDerived");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isDerived = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isDerived = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("OrganizationId"))
        {
            Object obj = soapObject.getProperty("OrganizationId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                organizationId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                organizationId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CompanyId"))
        {
            Object obj = soapObject.getProperty("CompanyId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                companyId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                companyId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedByUserId"))
        {
            Object obj = soapObject.getProperty("CreatedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                createdByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedDateTime"))
        {
            Object obj = soapObject.getProperty("CreatedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                createdDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedByUserId"))
        {
            Object obj = soapObject.getProperty("LastModifiedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                lastModifiedByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedDateTime"))
        {
            Object obj = soapObject.getProperty("LastModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                lastModifiedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ItemId"))
        {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                itemId = (Integer) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return cashRegisterGroupDescription;
            case 1:
                return cashRegisterGroupCode;
            case 2:
                return webshopClassificationCodeField;
            case 3:
                return webshopClassificationDescriptionField;
            case 4:
                return departmentDescription;
            case 5:
                return seasonProfileDescription;
            case 6:
                return cashRegisterGroupId;
            case 7:
                return productCategoryGroupId;
            case 8:
                return webshopClassificationIdField;
            case 9:
                return departmentId;
            case 10:
                return code;
            case 11:
                return externalCode;
            case 12:
                return gs1Code;
            case 13:
                return gs1ExportCode;
            case 14:
                return externalAnnouncementCode;
            case 15:
                return description;
            case 16:
                return minimalMargin;
            case 17:
                return maximalMargin;
            case 18:
                return margin;
            case 19:
                return loyaltyCardPercentage;
            case 20:
                return isPosPromotion;
            case 21:
                return isDoNotSendEPlato;
            case 22:
                return isCancelled;
            case 23:
                return followupNumber;
            case 24:
                return ignoreAutoStockValues;
            case 25:
                return autoStockCalculate;
            case 26:
                return autoStockDefaultMinStockDays;
            case 27:
                return autoStockDefaultMaxStockDays;
            case 28:
                return autoStockDefaultSaleDays;
            case 29:
                return autoStockMinStockPercentage;
            case 30:
                return autoStockMaxStockPercentage;
            case 31:
                return seasonProfileId;
            case 32:
                return labelClassIdField;
            case 33:
                return printLabel;
            case 34:
                return maintainStock;
            case 35:
                return allowSavings;
            case 36:
                return allowDiscounts;
            case 37:
                return isDerived;
            case 38:
                return organizationId;
            case 39:
                return companyId;
            case 40:
                return createdByUserId;
            case 41:
                return createdDateTime;
            case 42:
                return lastModifiedByUserId;
            case 43:
                return lastModifiedDateTime;
            case 44:
                return itemId;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 45;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CashRegisterGroupDescription";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CashRegisterGroupCode";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "WebshopClassificationCode";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "WebshopClassificationDescription";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DepartmentDescription";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SeasonProfileDescription";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CashRegisterGroupId";
                break;
            case 7:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductCategoryGroupId";
                break;
            case 8:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "WebshopClassificationId";
                break;
            case 9:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "DepartmentId";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Code";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExternalCode";
                break;
            case 12:
                info.type = Long.class;
                info.name = "Gs1Code";
                break;
            case 13:
                info.type = Long.class;
                info.name = "Gs1ExportCode";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExternalAnnouncementCode";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Description";
                break;
            case 16:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "MinimalMargin";
                break;
            case 17:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "MaximalMargin";
                break;
            case 18:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Margin";
                break;
            case 19:
                info.type = Double.class;
                info.name = "LoyaltyCardPercentage";
                break;
            case 20:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsPosPromotion";
                break;
            case 21:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsDoNotSendEPlato";
                break;
            case 22:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsCancelled";
                break;
            case 23:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "FollowupNumber";
                break;
            case 24:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IgnoreAutoStockValues";
                break;
            case 25:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AutoStockCalculate";
                break;
            case 26:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AutoStockDefaultMinStockDays";
                break;
            case 27:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AutoStockDefaultMaxStockDays";
                break;
            case 28:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AutoStockDefaultSaleDays";
                break;
            case 29:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AutoStockMinStockPercentage";
                break;
            case 30:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AutoStockMaxStockPercentage";
                break;
            case 31:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SeasonProfileId";
                break;
            case 32:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LabelClassId";
                break;
            case 33:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PrintLabel";
                break;
            case 34:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "MaintainStock";
                break;
            case 35:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AllowSavings";
                break;
            case 36:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AllowDiscounts";
                break;
            case 37:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsDerived";
                break;
            case 38:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "OrganizationId";
                break;
            case 39:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;
            case 40:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 41:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 42:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 43:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;
            case 44:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
        }
    }
    
//    @Override //    public String getInnerText() { //        return null; //    } // // //    @Override //    public void setInnerText(String s) { //    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
