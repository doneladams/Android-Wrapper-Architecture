package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/11/2017 5:10:09 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class ProductsFilter implements KvmSerializable {

    //    public int externalProductId;
    public long productNumber;
    public String externalCode;
    public String searchText;
    public String description;
    //    public String note1;
    public int classificationLevel1IdField = -1;
    //    public int classificationLevel2IdField;
//    public int classificationLevel3IdField;
//    public int classificationLevel4IdField;
//    public int classificationLevel5IdField;
//    public int classificationGroupIdField;
    public long productCategoryId;
    public int brandId;
    //    public int preferredSupplierId;
//    public VectorInt32 assortmentIds;
//    public int articleGroupId;
    public long Barcode;
    //    public int countryId;
//    public int languageId;
    public int supplierId;
    //    public boolean isIgnoreSupplierIdForProductsWithNoSupplier;
//    public String orderCode;
//    public long purchaseUnitBarcode;
//    public BooleanFilter purchaseIsActiveOnly;
//    public int purchaseSeasonProfileId;
//    public int purchaseStoreTypeDifferentationId;
//    public int purchaseAssortmentId;
//    public int cashRegisterGroupId;
//    public int vatId;
//    public DiscountFilter discountFilter;
//    public String lastModifiedSinceDateTime;
//    public String lastModifiedUntilDateTime;
//    public BooleanFilter isStockModification;
//    public String stockModificationDateFrom;
//    public String stockModificationDateTo;
//    public BooleanFilter isIncludeInStockValue;
//    public BooleanFilter isAllowMultiplePricing;
//    public BooleanFilter isProductGroup;
//    public BooleanFilter isParentProductsOnly;
//    public BooleanFilter isIncludeParentProducts;
//    public BooleanFilter isColorProductsOnly;
//    public BooleanFilter isWebshopProductsOnly;
//    public boolean isSmartSearch;
    public WS_Enums.BooleanFilter isIgnoreCancelledProducts;
    //    public int parentProductId;
//    public int sizeTypeId;
//    public int sizeId;
//    public int colorId;
//    public BooleanFilter isGiftCardOnly;
//    public int giftCardTypeId;
//    public int plu;
    public int storeId;
    public int storeNumber;
//    public int storeTypeId;
//    public SearchProductState productState;
//    public BooleanFilter isConsignmentProductsOnly;
//    public String combinedIdentificationNumber;
//    public BooleanFilter isHasNote1Only;
//    public double stock;
//    public ComparisonType stockFilter;
//    public double freeStock;
//    public ComparisonType freeStockFilter;
//    public BooleanFilter isAutoOrderOnly;
//    public boolean isCalculateMargins;
//    public int subBrandId;
//    public int disposalFeeId;
//    public int replacementProductId;
//    public OrderMethod orderMethod;
//    public BooleanFilter fashionProduct;
//    public BooleanFilter saleArticle;
//    public BooleanFilter priceBlocked;
//    public BooleanFilter replacedProducts;
//    public BooleanFilter areReplacedProducts;
//    public BooleanFilter collectionProducts;
//    public BooleanFilter atLeast1NotCancelledPurchase;
//    public BooleanFilter atLeast1AvailableForOrderingPurchase;
//    public BooleanFilter getArticlesOfCancelledSuppliers;
//    public BooleanFilter shelfProductsAndLocalOnly;
//    public BooleanFilter includedInActiveShelfDisplay;
//    public int shelfDisplayId;
//    public RelatedProductsType relatedProductsType;

    public ProductsFilter() {
    }

    public ProductsFilter(SoapObject soapObject) {
        if (soapObject == null)
            return;
//        if (soapObject.hasProperty("ExternalProductId"))
//        {
//            Object obj = soapObject.getProperty("ExternalProductId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                externalProductId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                externalProductId = (Integer) obj;
//            }
//        }
        if (soapObject.hasProperty("ProductNumber")) {
            Object obj = soapObject.getProperty("ProductNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ExternalCode")) {
            Object obj = soapObject.getProperty("ExternalCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                externalCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                externalCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("SearchText")) {
            Object obj = soapObject.getProperty("SearchText");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                searchText = j.toString();
            } else if (obj != null && obj instanceof String) {
                searchText = (String) obj;
            }
        }
        if (soapObject.hasProperty("Description")) {
            Object obj = soapObject.getProperty("Description");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                description = j.toString();
            } else if (obj != null && obj instanceof String) {
                description = (String) obj;
            }
        }
//        if (soapObject.hasProperty("Note1"))
//        {
//            Object obj = soapObject.getProperty("Note1");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                note1 = j.toString();
//            }else if (obj!= null && obj instanceof String){
//                note1 = (String) obj;
//            }
//        }
        if (soapObject.hasProperty("ClassificationLevel1Id")) {
            Object obj = soapObject.getProperty("ClassificationLevel1Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                classificationLevel1IdField = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                classificationLevel1IdField = (Integer) obj;
            }
        }
//        if (soapObject.hasProperty("ClassificationLevel2Id"))
//        {
//            Object obj = soapObject.getProperty("ClassificationLevel2Id");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                classificationLevel2IdField = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                classificationLevel2IdField = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("ClassificationLevel3Id"))
//        {
//            Object obj = soapObject.getProperty("ClassificationLevel3Id");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                classificationLevel3IdField = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                classificationLevel3IdField = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("ClassificationLevel4Id"))
//        {
//            Object obj = soapObject.getProperty("ClassificationLevel4Id");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                classificationLevel4IdField = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                classificationLevel4IdField = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("ClassificationLevel5Id"))
//        {
//            Object obj = soapObject.getProperty("ClassificationLevel5Id");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                classificationLevel5IdField = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                classificationLevel5IdField = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("ClassificationGroupId"))
//        {
//            Object obj = soapObject.getProperty("ClassificationGroupId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                classificationGroupIdField = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                classificationGroupIdField = (Integer) obj;
//            }
//        }
        if (soapObject.hasProperty("ProductCategoryId")) {
            Object obj = soapObject.getProperty("ProductCategoryId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productCategoryId = Long.parseLong(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productCategoryId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("BrandId")) {
            Object obj = soapObject.getProperty("BrandId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                brandId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                brandId = (Integer) obj;
            }
        }
//        if (soapObject.hasProperty("PreferredSupplierId"))
//        {
//            Object obj = soapObject.getProperty("PreferredSupplierId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                preferredSupplierId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                preferredSupplierId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("AssortmentIds"))
//        {
//            SoapObject j = (SoapObject)soapObject.getProperty("AssortmentIds");
//            assortmentIds = new VectorInt32(j);
//        }
//        if (soapObject.hasProperty("ArticleGroupId"))
//        {
//            Object obj = soapObject.getProperty("ArticleGroupId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                articleGroupId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                articleGroupId = (Integer) obj;
//            }
//        }
        if (soapObject.hasProperty("Barcode")) {
            Object obj = soapObject.getProperty("Barcode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                Barcode = Long.parseLong(j.toString());
            } else if (obj != null && obj instanceof Number) {
                Barcode = (Long) obj;
            }
        }
//        if (soapObject.hasProperty("CountryId"))
//        {
//            Object obj = soapObject.getProperty("CountryId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                countryId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                countryId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("LanguageId"))
//        {
//            Object obj = soapObject.getProperty("LanguageId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                languageId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                languageId = (Integer) obj;
//            }
//        }
        if (soapObject.hasProperty("SupplierId"))
        {
            Object obj = soapObject.getProperty("SupplierId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                supplierId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                supplierId = (Integer) obj;
            }
        }
//        if (soapObject.hasProperty("IsIgnoreSupplierIdForProductsWithNoSupplier"))
//        {
//            Object obj = soapObject.getProperty("IsIgnoreSupplierIdForProductsWithNoSupplier");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                isIgnoreSupplierIdForProductsWithNoSupplier = Boolean.parseBoolean(j.toString());
//            }else if (obj!= null && obj instanceof Boolean){
//                isIgnoreSupplierIdForProductsWithNoSupplier = (Boolean) obj;
//            }
//        }
//        if (soapObject.hasProperty("OrderCode"))
//        {
//            Object obj = soapObject.getProperty("OrderCode");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                orderCode = j.toString();
//            }else if (obj!= null && obj instanceof String){
//                orderCode = (String) obj;
//            }
//        }
//        if (soapObject.hasProperty("PurchaseUnitBarcode"))
//        {
//            Object obj = soapObject.getProperty("PurchaseUnitBarcode");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                purchaseUnitBarcode = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                purchaseUnitBarcode = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("PurchaseIsActiveOnly"))
//        {
//            Object obj = soapObject.getProperty("PurchaseIsActiveOnly");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                purchaseIsActiveOnly = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("PurchaseSeasonProfileId"))
//        {
//            Object obj = soapObject.getProperty("PurchaseSeasonProfileId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                purchaseSeasonProfileId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                purchaseSeasonProfileId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("PurchaseStoreTypeDifferentationId"))
//        {
//            Object obj = soapObject.getProperty("PurchaseStoreTypeDifferentationId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                purchaseStoreTypeDifferentationId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                purchaseStoreTypeDifferentationId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("PurchaseAssortmentId"))
//        {
//            Object obj = soapObject.getProperty("PurchaseAssortmentId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                purchaseAssortmentId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                purchaseAssortmentId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("CashRegisterGroupId"))
//        {
//            Object obj = soapObject.getProperty("CashRegisterGroupId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                cashRegisterGroupId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                cashRegisterGroupId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("VatId"))
//        {
//            Object obj = soapObject.getProperty("VatId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                vatId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                vatId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("DiscountFilter"))
//        {
//            Object obj = soapObject.getProperty("DiscountFilter");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                discountFilter = DiscountFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("LastModifiedSinceDateTime"))
//        {
//            Object obj = soapObject.getProperty("LastModifiedSinceDateTime");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                lastModifiedSinceDateTime = j.toString();
//            }else if (obj!= null && obj instanceof String){
//                lastModifiedSinceDateTime = (String) obj;
//            }
//        }
//        if (soapObject.hasProperty("LastModifiedUntilDateTime"))
//        {
//            Object obj = soapObject.getProperty("LastModifiedUntilDateTime");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                lastModifiedUntilDateTime = j.toString();
//            }else if (obj!= null && obj instanceof String){
//                lastModifiedUntilDateTime = (String) obj;
//            }
//        }
//        if (soapObject.hasProperty("IsStockModification"))
//        {
//            Object obj = soapObject.getProperty("IsStockModification");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                isStockModification = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("StockModificationDateFrom"))
//        {
//            Object obj = soapObject.getProperty("StockModificationDateFrom");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                stockModificationDateFrom = j.toString();
//            }else if (obj!= null && obj instanceof String){
//                stockModificationDateFrom = (String) obj;
//            }
//        }
//        if (soapObject.hasProperty("StockModificationDateTo"))
//        {
//            Object obj = soapObject.getProperty("StockModificationDateTo");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                stockModificationDateTo = j.toString();
//            }else if (obj!= null && obj instanceof String){
//                stockModificationDateTo = (String) obj;
//            }
//        }
//        if (soapObject.hasProperty("IsIncludeInStockValue"))
//        {
//            Object obj = soapObject.getProperty("IsIncludeInStockValue");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                isIncludeInStockValue = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("IsAllowMultiplePricing"))
//        {
//            Object obj = soapObject.getProperty("IsAllowMultiplePricing");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                isAllowMultiplePricing = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("IsProductGroup"))
//        {
//            Object obj = soapObject.getProperty("IsProductGroup");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                isProductGroup = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("IsParentProductsOnly"))
//        {
//            Object obj = soapObject.getProperty("IsParentProductsOnly");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                isParentProductsOnly = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("IsIncludeParentProducts"))
//        {
//            Object obj = soapObject.getProperty("IsIncludeParentProducts");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                isIncludeParentProducts = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("IsColorProductsOnly"))
//        {
//            Object obj = soapObject.getProperty("IsColorProductsOnly");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                isColorProductsOnly = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("IsWebshopProductsOnly"))
//        {
//            Object obj = soapObject.getProperty("IsWebshopProductsOnly");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                isWebshopProductsOnly = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("IsSmartSearch"))
//        {
//            Object obj = soapObject.getProperty("IsSmartSearch");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                isSmartSearch = Boolean.parseBoolean(j.toString());
//            }else if (obj!= null && obj instanceof Boolean){
//                isSmartSearch = (Boolean) obj;
//            }
//        }
        if (soapObject.hasProperty("IsIgnoreCancelledProducts")) {
            Object obj = soapObject.getProperty("IsIgnoreCancelledProducts");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isIgnoreCancelledProducts = WS_Enums.BooleanFilter.fromString(j.toString());
            }
        }
//        if (soapObject.hasProperty("ParentProductId"))
//        {
//            Object obj = soapObject.getProperty("ParentProductId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                parentProductId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                parentProductId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("SizeTypeId"))
//        {
//            Object obj = soapObject.getProperty("SizeTypeId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                sizeTypeId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                sizeTypeId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("SizeId"))
//        {
//            Object obj = soapObject.getProperty("SizeId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                sizeId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                sizeId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("ColorId"))
//        {
//            Object obj = soapObject.getProperty("ColorId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                colorId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                colorId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("IsGiftCardOnly"))
//        {
//            Object obj = soapObject.getProperty("IsGiftCardOnly");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                isGiftCardOnly = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("GiftCardTypeId"))
//        {
//            Object obj = soapObject.getProperty("GiftCardTypeId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                giftCardTypeId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                giftCardTypeId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("Plu"))
//        {
//            Object obj = soapObject.getProperty("Plu");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                plu = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                plu = (Integer) obj;
//            }
//        }
        if (soapObject.hasProperty("StoreId")) {
            Object obj = soapObject.getProperty("StoreId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                storeId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                storeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("StoreNumber")) {
            Object obj = soapObject.getProperty("StoreNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                storeNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                storeNumber = (Integer) obj;
            }
        }
//        if (soapObject.hasProperty("StoreTypeId"))
//        {
//            Object obj = soapObject.getProperty("StoreTypeId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                storeTypeId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                storeTypeId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("ProductState"))
//        {
//            Object obj = soapObject.getProperty("ProductState");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                productState = SearchProductState.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("IsConsignmentProductsOnly"))
//        {
//            Object obj = soapObject.getProperty("IsConsignmentProductsOnly");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                isConsignmentProductsOnly = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("CombinedIdentificationNumber"))
//        {
//            Object obj = soapObject.getProperty("CombinedIdentificationNumber");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                combinedIdentificationNumber = j.toString();
//            }else if (obj!= null && obj instanceof String){
//                combinedIdentificationNumber = (String) obj;
//            }
//        }
//        if (soapObject.hasProperty("IsHasNote1Only"))
//        {
//            Object obj = soapObject.getProperty("IsHasNote1Only");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                isHasNote1Only = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("Stock"))
//        {
//            Object obj = soapObject.getProperty("Stock");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                stock = Double.parseDouble(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                stock = (Double) obj;
//            }
//        }
//        if (soapObject.hasProperty("StockFilter"))
//        {
//            Object obj = soapObject.getProperty("StockFilter");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                stockFilter = ComparisonType.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("FreeStock"))
//        {
//            Object obj = soapObject.getProperty("FreeStock");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                freeStock = Double.parseDouble(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                freeStock = (Double) obj;
//            }
//        }
//        if (soapObject.hasProperty("FreeStockFilter"))
//        {
//            Object obj = soapObject.getProperty("FreeStockFilter");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                freeStockFilter = ComparisonType.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("IsAutoOrderOnly"))
//        {
//            Object obj = soapObject.getProperty("IsAutoOrderOnly");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                isAutoOrderOnly = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("IsCalculateMargins"))
//        {
//            Object obj = soapObject.getProperty("IsCalculateMargins");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                isCalculateMargins = Boolean.parseBoolean(j.toString());
//            }else if (obj!= null && obj instanceof Boolean){
//                isCalculateMargins = (Boolean) obj;
//            }
//        }
//        if (soapObject.hasProperty("SubBrandId"))
//        {
//            Object obj = soapObject.getProperty("SubBrandId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                subBrandId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                subBrandId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("DisposalFeeId"))
//        {
//            Object obj = soapObject.getProperty("DisposalFeeId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                disposalFeeId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                disposalFeeId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("ReplacementProductId"))
//        {
//            Object obj = soapObject.getProperty("ReplacementProductId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                replacementProductId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                replacementProductId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("OrderMethod"))
//        {
//            Object obj = soapObject.getProperty("OrderMethod");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                orderMethod = OrderMethod.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("FashionProduct"))
//        {
//            Object obj = soapObject.getProperty("FashionProduct");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                fashionProduct = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("SaleArticle"))
//        {
//            Object obj = soapObject.getProperty("SaleArticle");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                saleArticle = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("PriceBlocked"))
//        {
//            Object obj = soapObject.getProperty("PriceBlocked");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                priceBlocked = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("ReplacedProducts"))
//        {
//            Object obj = soapObject.getProperty("ReplacedProducts");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                replacedProducts = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("AreReplacedProducts"))
//        {
//            Object obj = soapObject.getProperty("AreReplacedProducts");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                areReplacedProducts = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("CollectionProducts"))
//        {
//            Object obj = soapObject.getProperty("CollectionProducts");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                collectionProducts = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("AtLeast1NotCancelledPurchase"))
//        {
//            Object obj = soapObject.getProperty("AtLeast1NotCancelledPurchase");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                atLeast1NotCancelledPurchase = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("AtLeast1AvailableForOrderingPurchase"))
//        {
//            Object obj = soapObject.getProperty("AtLeast1AvailableForOrderingPurchase");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                atLeast1AvailableForOrderingPurchase = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("GetArticlesOfCancelledSuppliers"))
//        {
//            Object obj = soapObject.getProperty("GetArticlesOfCancelledSuppliers");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                getArticlesOfCancelledSuppliers = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("ShelfProductsAndLocalOnly"))
//        {
//            Object obj = soapObject.getProperty("ShelfProductsAndLocalOnly");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                shelfProductsAndLocalOnly = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("IncludedInActiveShelfDisplay"))
//        {
//            Object obj = soapObject.getProperty("IncludedInActiveShelfDisplay");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                includedInActiveShelfDisplay = BooleanFilter.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("ShelfDisplayId"))
//        {
//            Object obj = soapObject.getProperty("ShelfDisplayId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive) obj;
//                shelfDisplayId = Integer.parseInt(j.toString());
//            }else if (obj!= null && obj instanceof Number){
//                shelfDisplayId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("RelatedProductsType"))
//        {
//            Object obj = soapObject.getProperty("RelatedProductsType");
//            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
//                SoapPrimitive j =(SoapPrimitive)obj;
//                relatedProductsType = RelatedProductsType.fromString(j.toString());
//            }
//        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
//            case 0:
//                return externalProductId;
            case 8:
                return productNumber;
            case 9:
                return externalCode;
            case 6:
                return searchText;
            case 2:
                return description;
//            case 5:
//                return note1;
            case 3:
                return classificationLevel1IdField;
//            case 7:
//                return classificationLevel2IdField;
//            case 8:
//                return classificationLevel3IdField;
//            case 9:
//                return classificationLevel4IdField;
//            case 10:
//                return classificationLevel5IdField;
//            case 11:
//                return classificationGroupIdField;
            case 0:
                return productCategoryId;
            case 10:
                return brandId;
//            case 14:
//                return preferredSupplierId;
//            case 15:
//                return assortmentIds;
//            case 16:
//                return articleGroupId;
            case 1:
                return Barcode;
//            case 18:
//                return countryId;
//            case 19:
//                return languageId;
            case 11:
                return supplierId;
//            case 21:
//                return isIgnoreSupplierIdForProductsWithNoSupplier;
//            case 22:
//                return orderCode;
//            case 23:
//                return purchaseUnitBarcode;
//            case 24:
//                return purchaseIsActiveOnly.toString();
//            case 25:
//                return purchaseSeasonProfileId;
//            case 26:
//                return purchaseStoreTypeDifferentationId;
//            case 27:
//                return purchaseAssortmentId;
//            case 28:
//                return cashRegisterGroupId;
//            case 29:
//                return vatId;
//            case 30:
//                return discountFilter.toString();
//            case 31:
//                return lastModifiedSinceDateTime;
//            case 32:
//                return lastModifiedUntilDateTime;
//            case 33:
//                return isStockModification.toString();
//            case 34:
//                return stockModificationDateFrom;
//            case 35:
//                return stockModificationDateTo;
//            case 36:
//                return isIncludeInStockValue.toString();
//            case 37:
//                return isAllowMultiplePricing.toString();
//            case 38:
//                return isProductGroup.toString();
//            case 39:
//                return isParentProductsOnly.toString();
//            case 40:
//                return isIncludeParentProducts.toString();
//            case 41:
//                return isColorProductsOnly.toString();
//            case 42:
//                return isWebshopProductsOnly.toString();
//            case 43:
//                return isSmartSearch;
            case 7:
                return isIgnoreCancelledProducts.toString();
//            case 45:
//                return parentProductId;
//            case 46:
//                return sizeTypeId;
//            case 47:
//                return sizeId;
//            case 48:
//                return colorId;
//            case 49:
//                return isGiftCardOnly.toString();
//            case 50:
//                return giftCardTypeId;
//            case 51:
//                return plu;
            case 4:
                return storeId;
            case 5:
                return storeNumber;
//            case 54:
//                return storeTypeId;
//            case 55:
//                return productState.toString();
//            case 56:
//                return isConsignmentProductsOnly.toString();
//            case 57:
//                return combinedIdentificationNumber;
//            case 58:
//                return isHasNote1Only.toString();
//            case 59:
//                return stock;
//            case 60:
//                return stockFilter.toString();
//            case 61:
//                return freeStock;
//            case 62:
//                return freeStockFilter.toString();
//            case 63:
//                return isAutoOrderOnly.toString();
//            case 64:
//                return isCalculateMargins;
//            case 65:
//                return subBrandId;
//            case 66:
//                return disposalFeeId;
//            case 67:
//                return replacementProductId;
//            case 68:
//                return orderMethod.toString();
//            case 69:
//                return fashionProduct.toString();
//            case 70:
//                return saleArticle.toString();
//            case 71:
//                return priceBlocked.toString();
//            case 72:
//                return replacedProducts.toString();
//            case 73:
//                return areReplacedProducts.toString();
//            case 74:
//                return collectionProducts.toString();
//            case 75:
//                return atLeast1NotCancelledPurchase.toString();
//            case 76:
//                return atLeast1AvailableForOrderingPurchase.toString();
//            case 77:
//                return getArticlesOfCancelledSuppliers.toString();
//            case 78:
//                return shelfProductsAndLocalOnly.toString();
//            case 79:
//                return includedInActiveShelfDisplay.toString();
//            case 80:
//                return shelfDisplayId;
//            case 81:
//                return relatedProductsType.toString();
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 12;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
//            case 0:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "ExternalProductId";
//                break;
            case 8:
                info.type = Long.class;
                info.name = "ProductNumber";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExternalCode";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SearchText";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Description";
                break;
//            case 5:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "Note1";
//                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ClassificationLevel1Id";
                break;
//            case 7:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "ClassificationLevel2Id";
//                break;
//            case 8:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "ClassificationLevel3Id";
//                break;
//            case 9:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "ClassificationLevel4Id";
//                break;
//            case 10:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "ClassificationLevel5Id";
//                break;
//            case 11:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "ClassificationGroupId";
//                break;
            case 0:
                info.type = PropertyInfo.LONG_CLASS;
                info.name = "ProductCategoryId";
                break;
            case 10:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "BrandId";
                break;
//            case 14:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "PreferredSupplierId";
//                break;
//            case 15:
//                info.type = PropertyInfo.VECTOR_CLASS;
//                info.name = "AssortmentIds";
//                break;
//            case 16:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "ArticleGroupId";
//                break;
            case 1:
                info.type = Long.class;
                info.name = "Barcode";
                break;
//            case 18:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "CountryId";
//                break;
//            case 19:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "LanguageId";
//                break;
            case 11:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SupplierId";
                break;
//            case 21:
//                info.type = PropertyInfo.BOOLEAN_CLASS;
//                info.name = "IsIgnoreSupplierIdForProductsWithNoSupplier";
//                break;
//            case 22:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "OrderCode";
//                break;
//            case 23:
//                info.type = Long.class;
//                info.name = "PurchaseUnitBarcode";
//                break;
//            case 24:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "PurchaseIsActiveOnly";
//                break;
//            case 25:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "PurchaseSeasonProfileId";
//                break;
//            case 26:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "PurchaseStoreTypeDifferentationId";
//                break;
//            case 27:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "PurchaseAssortmentId";
//                break;
//            case 28:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "CashRegisterGroupId";
//                break;
//            case 29:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "VatId";
//                break;
//            case 30:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "DiscountFilter";
//                break;
//            case 31:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "LastModifiedSinceDateTime";
//                break;
//            case 32:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "LastModifiedUntilDateTime";
//                break;
//            case 33:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "IsStockModification";
//                break;
//            case 34:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "StockModificationDateFrom";
//                break;
//            case 35:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "StockModificationDateTo";
//                break;
//            case 36:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "IsIncludeInStockValue";
//                break;
//            case 37:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "IsAllowMultiplePricing";
//                break;
//            case 38:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "IsProductGroup";
//                break;
//            case 39:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "IsParentProductsOnly";
//                break;
//            case 40:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "IsIncludeParentProducts";
//                break;
//            case 41:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "IsColorProductsOnly";
//                break;
//            case 42:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "IsWebshopProductsOnly";
//                break;
//            case 43:
//                info.type = PropertyInfo.BOOLEAN_CLASS;
//                info.name = "IsSmartSearch";
//                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IsIgnoreCancelledProducts";
                break;
//            case 45:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "ParentProductId";
//                break;
//            case 46:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "SizeTypeId";
//                break;
//            case 47:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "SizeId";
//                break;
//            case 48:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "ColorId";
//                break;
//            case 49:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "IsGiftCardOnly";
//                break;
//            case 50:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "GiftCardTypeId";
//                break;
//            case 51:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "Plu";
//                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreId";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreNumber";
                break;
//            case 54:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "StoreTypeId";
//                break;
//            case 55:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "ProductState";
//                break;
//            case 56:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "IsConsignmentProductsOnly";
//                break;
//            case 57:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "CombinedIdentificationNumber";
//                break;
//            case 58:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "IsHasNote1Only";
//                break;
//            case 59:
//                info.type = Double.class;
//                info.name = "Stock";
//                break;
//            case 60:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "StockFilter";
//                break;
//            case 61:
//                info.type = Double.class;
//                info.name = "FreeStock";
//                break;
//            case 62:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "FreeStockFilter";
//                break;
//            case 63:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "IsAutoOrderOnly";
//                break;
//            case 64:
//                info.type = PropertyInfo.BOOLEAN_CLASS;
//                info.name = "IsCalculateMargins";
//                break;
//            case 65:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "SubBrandId";
//                break;
//            case 66:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "DisposalFeeId";
//                break;
//            case 67:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "ReplacementProductId";
//                break;
//            case 68:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "OrderMethod";
//                break;
//            case 69:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "FashionProduct";
//                break;
//            case 70:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "SaleArticle";
//                break;
//            case 71:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "PriceBlocked";
//                break;
//            case 72:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "ReplacedProducts";
//                break;
//            case 73:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "AreReplacedProducts";
//                break;
//            case 74:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "CollectionProducts";
//                break;
//            case 75:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "AtLeast1NotCancelledPurchase";
//                break;
//            case 76:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "AtLeast1AvailableForOrderingPurchase";
//                break;
//            case 77:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "GetArticlesOfCancelledSuppliers";
//                break;
//            case 78:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "ShelfProductsAndLocalOnly";
//                break;
//            case 79:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "IncludedInActiveShelfDisplay";
//                break;
//            case 80:
//                info.type = PropertyInfo.INTEGER_CLASS;
//                info.name = "ShelfDisplayId";
//                break;
//            case 81:
//                info.type = PropertyInfo.STRING_CLASS;
//                info.name = "RelatedProductsType";
//                break;
        }
    }

//    @Override
//    public String getInnerText() {
//        return null;
//    }
//
//
//    @Override
//    public void setInnerText(String s) {
//    }


    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
