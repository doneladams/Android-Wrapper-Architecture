package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/16/2017 5:54:08 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.lang.*;
import java.util.Hashtable;

import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ProductListInfo implements KvmSerializable {
    public int productListNumber;

    /*public int companyId;

    public int productListNumber;
    public WS_Enums.ProductListStatus status;*/
    public int productListTypeId;
    public int customerId;
    public String description;
    public int storeId;
    /*  public String note;
      public boolean isCancelled;
      public double totalGrossPrice;
      public double totalNetPrice;
      public double totalWeightedNetPrice;
      public double discountPercentage;
      public double discountPrice;
      public long conversionId;
      public int createdByUserId;
      public String createdDateTime;
      public int lastModifiedByUserId;
      public String lastModifiedDateTime;*/
    public int itemId;

    public ProductListInfo() {
    }

    public ProductListInfo(SoapObject soapObject) {
        if (soapObject == null)
            return;
        /*if (soapObject.hasProperty("CompanyId"))
        {
            Object obj = soapObject.getProperty("CompanyId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                companyId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                companyId = (Integer) obj;
            }
        }*/
        if (soapObject.hasProperty("StoreId")) {
            Object obj = soapObject.getProperty("StoreId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                storeId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                storeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ProductListNumber")) {
            Object obj = soapObject.getProperty("ProductListNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productListNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productListNumber = (Integer) obj;
            }
        }
        /*if (soapObject.hasProperty("Status"))
        {
            Object obj = soapObject.getProperty("Status");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                status = WS_Enums.ProductListStatus.fromString(j.toString());
            }
        }*/
        if (soapObject.hasProperty("ProductListTypeId")) {
            Object obj = soapObject.getProperty("ProductListTypeId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productListTypeId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productListTypeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CustomerId")) {
            Object obj = soapObject.getProperty("CustomerId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                customerId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                customerId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Description")) {
            Object obj = soapObject.getProperty("Description");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                description = j.toString();
            } else if (obj != null && obj instanceof String) {
                description = (String) obj;
            }
        }
        /*if (soapObject.hasProperty("Note"))
        {
            Object obj = soapObject.getProperty("Note");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                note = j.toString();
            }else if (obj!= null && obj instanceof String){
                note = (String) obj;
            }
        }*/
        /*if (soapObject.hasProperty("IsCancelled"))
        {
            Object obj = soapObject.getProperty("IsCancelled");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isCancelled = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isCancelled = (Boolean) obj;
            }
        }*/
       /* if (soapObject.hasProperty("TotalGrossPrice"))
        {
            Object obj = soapObject.getProperty("TotalGrossPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalGrossPrice = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                totalGrossPrice = (Double) obj;
            }
        }*/
       /* if (soapObject.hasProperty("TotalNetPrice"))
        {
            Object obj = soapObject.getProperty("TotalNetPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalNetPrice = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                totalNetPrice = (Double) obj;
            }
        }*/
        /*if (soapObject.hasProperty("TotalWeightedNetPrice"))
        {
            Object obj = soapObject.getProperty("TotalWeightedNetPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalWeightedNetPrice = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                totalWeightedNetPrice = (Double) obj;
            }
        }*/
        /*if (soapObject.hasProperty("DiscountPercentage"))
        {
            Object obj = soapObject.getProperty("DiscountPercentage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                discountPercentage = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                discountPercentage = (Double) obj;
            }
        }*/
        /*if (soapObject.hasProperty("DiscountPrice"))
        {
            Object obj = soapObject.getProperty("DiscountPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                discountPrice = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                discountPrice = (Double) obj;
            }
        }*/
        /*if (soapObject.hasProperty("ConversionId"))
        {
            Object obj = soapObject.getProperty("ConversionId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                conversionId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                conversionId = (Integer) obj;
            }
        }*/
        /*if (soapObject.hasProperty("CreatedByUserId"))
        {
            Object obj = soapObject.getProperty("CreatedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                createdByUserId = (Integer) obj;
            }
        }*/
        /*if (soapObject.hasProperty("CreatedDateTime"))
        {
            Object obj = soapObject.getProperty("CreatedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                createdDateTime = (String) obj;
            }
        }*/
        /*if (soapObject.hasProperty("LastModifiedByUserId"))
        {
            Object obj = soapObject.getProperty("LastModifiedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                lastModifiedByUserId = (Integer) obj;
            }
        }*/
      /*  if (soapObject.hasProperty("LastModifiedDateTime"))
        {
            Object obj = soapObject.getProperty("LastModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                lastModifiedDateTime = (String) obj;
            }
        }*/
        if (soapObject.hasProperty("ItemId")) {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                itemId = (Integer) obj;
            }
        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
           /* case 0:
                return companyId;

            case 3:
                return status.toString();*/

            case 0:
                return productListTypeId;
            case 1:
                return customerId;
            case 2:
                return description;
           /* case 7:
                return note;
            case 8:
                return isCancelled;
            case 9:
                return totalGrossPrice;
            case 10:
                return totalNetPrice;
            case 11:
                return totalWeightedNetPrice;
            case 12:
                return discountPercentage;
            case 13:
                return discountPrice;
            case 14:
                return conversionId;
            case 15:
                return createdByUserId;
            case 16:
                return createdDateTime;
            case 17:
                return lastModifiedByUserId;
            case 18:
                return lastModifiedDateTime;*/
            case 3:
                return itemId;
            case 4:
                return storeId;
            case 5:
                return productListNumber;

        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 6;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            /*case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;

            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Status";
                break;*/
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductListTypeId";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CustomerId";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Description";
                break;
            /*case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Note";
                break;
            case 8:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsCancelled";
                break;
            case 9:
                info.type = Double.class;
                info.name = "TotalGrossPrice";
                break;
            case 10:
                info.type = Double.class;
                info.name = "TotalNetPrice";
                break;
            case 11:
                info.type = Double.class;
                info.name = "TotalWeightedNetPrice";
                break;
            case 12:
                info.type = Double.class;
                info.name = "DiscountPercentage";
                break;
            case 13:
                info.type = Double.class;
                info.name = "DiscountPrice";
                break;
            case 14:
                info.type = Long.class;
                info.name = "ConversionId";
                break;
            case 15:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 17:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 18:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;*/
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreId";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductListNumber";
                break;
        }
    }

//    @Override //    public String getInnerText() { //        return null; //    } // // //    @Override //    public void setInnerText(String s) { //    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
