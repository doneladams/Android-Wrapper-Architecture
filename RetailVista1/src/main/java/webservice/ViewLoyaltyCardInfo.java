package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/17/2017 7:04:46 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.lang.*;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ViewLoyaltyCardInfo implements KvmSerializable {
    
    public String loyaltyCardTypeDescription;
    public int totalSavedPoints;
    public double totalSavedPrice;
    public int totalWithdrawedPoints;
    public double totalWithdrawedPrice;
    public int currentBalancePoints;
    public double currentBalancePrice;
    public WS_Enums.LoyaltyCardTypes loyaltyCardType;
    public long customerNumber;
    public String generalName;
    public int companyId;
    public int storeId;
    public long cardNumber;
    public boolean digital;
    public int loyaltyCardTypeId;
    public int customerId;
    public WS_Enums.LoyaltyCardStatus status;
    public String blockedDescription;
    public boolean isTransferred;
    public String verificationCode;
    public String registrationEmailAddress;
    public int numberOfSentRegistrationEmails;
    public String lastSentRegistrationEmail;
    public String lastPrintedDateTime;
    public int lastPrintedPointsBalance;
    public double lastPrintedPriceBalance;
    public int createdByUserId;
    public String createdDateTime;
    public int lastModifiedByUserId;
    public String lastModifiedDateTime;
    public int itemId;
    
    public ViewLoyaltyCardInfo(){}
    
    public ViewLoyaltyCardInfo(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("LoyaltyCardTypeDescription"))
        {
            Object obj = soapObject.getProperty("LoyaltyCardTypeDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                loyaltyCardTypeDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                loyaltyCardTypeDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("TotalSavedPoints"))
        {
            Object obj = soapObject.getProperty("TotalSavedPoints");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalSavedPoints = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                totalSavedPoints = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("TotalSavedPrice"))
        {
            Object obj = soapObject.getProperty("TotalSavedPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalSavedPrice = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                totalSavedPrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TotalWithdrawedPoints"))
        {
            Object obj = soapObject.getProperty("TotalWithdrawedPoints");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalWithdrawedPoints = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                totalWithdrawedPoints = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("TotalWithdrawedPrice"))
        {
            Object obj = soapObject.getProperty("TotalWithdrawedPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                totalWithdrawedPrice = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                totalWithdrawedPrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("CurrentBalancePoints"))
        {
            Object obj = soapObject.getProperty("CurrentBalancePoints");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                currentBalancePoints = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                currentBalancePoints = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CurrentBalancePrice"))
        {
            Object obj = soapObject.getProperty("CurrentBalancePrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                currentBalancePrice = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                currentBalancePrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("LoyaltyCardType"))
        {
            Object obj = soapObject.getProperty("LoyaltyCardType");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                loyaltyCardType = WS_Enums.LoyaltyCardTypes.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("CustomerNumber"))
        {
            Object obj = soapObject.getProperty("CustomerNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                customerNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                customerNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("GeneralName"))
        {
            Object obj = soapObject.getProperty("GeneralName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                generalName = j.toString();
            }else if (obj!= null && obj instanceof String){
                generalName = (String) obj;
            }
        }
        if (soapObject.hasProperty("CompanyId"))
        {
            Object obj = soapObject.getProperty("CompanyId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                companyId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                companyId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("StoreId"))
        {
            Object obj = soapObject.getProperty("StoreId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                storeId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                storeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CardNumber"))
        {
            Object obj = soapObject.getProperty("CardNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                cardNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                cardNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Digital"))
        {
            Object obj = soapObject.getProperty("Digital");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                digital = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                digital = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("LoyaltyCardTypeId"))
        {
            Object obj = soapObject.getProperty("LoyaltyCardTypeId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                loyaltyCardTypeId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                loyaltyCardTypeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CustomerId"))
        {
            Object obj = soapObject.getProperty("CustomerId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                customerId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                customerId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Status"))
        {
            Object obj = soapObject.getProperty("Status");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                status = WS_Enums.LoyaltyCardStatus.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("BlockedDescription"))
        {
            Object obj = soapObject.getProperty("BlockedDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                blockedDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                blockedDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("IsTransferred"))
        {
            Object obj = soapObject.getProperty("IsTransferred");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isTransferred = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isTransferred = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("VerificationCode"))
        {
            Object obj = soapObject.getProperty("VerificationCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                verificationCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                verificationCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("RegistrationEmailAddress"))
        {
            Object obj = soapObject.getProperty("RegistrationEmailAddress");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                registrationEmailAddress = j.toString();
            }else if (obj!= null && obj instanceof String){
                registrationEmailAddress = (String) obj;
            }
        }
        if (soapObject.hasProperty("NumberOfSentRegistrationEmails"))
        {
            Object obj = soapObject.getProperty("NumberOfSentRegistrationEmails");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                numberOfSentRegistrationEmails = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                numberOfSentRegistrationEmails = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastSentRegistrationEmail"))
        {
            Object obj = soapObject.getProperty("LastSentRegistrationEmail");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastSentRegistrationEmail = j.toString();
            }else if (obj!= null && obj instanceof String){
                lastSentRegistrationEmail = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastPrintedDateTime"))
        {
            Object obj = soapObject.getProperty("LastPrintedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastPrintedDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                lastPrintedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastPrintedPointsBalance"))
        {
            Object obj = soapObject.getProperty("LastPrintedPointsBalance");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastPrintedPointsBalance = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                lastPrintedPointsBalance = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastPrintedPriceBalance"))
        {
            Object obj = soapObject.getProperty("LastPrintedPriceBalance");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastPrintedPriceBalance = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                lastPrintedPriceBalance = (Double) obj;
            }
        }
        if (soapObject.hasProperty("CreatedByUserId"))
        {
            Object obj = soapObject.getProperty("CreatedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                createdByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedDateTime"))
        {
            Object obj = soapObject.getProperty("CreatedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                createdDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedByUserId"))
        {
            Object obj = soapObject.getProperty("LastModifiedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                lastModifiedByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedDateTime"))
        {
            Object obj = soapObject.getProperty("LastModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                lastModifiedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ItemId"))
        {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                itemId = (Integer) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return loyaltyCardTypeDescription;
            case 1:
                return totalSavedPoints;
            case 2:
                return totalSavedPrice;
            case 3:
                return totalWithdrawedPoints;
            case 4:
                return totalWithdrawedPrice;
            case 5:
                return currentBalancePoints;
            case 6:
                return currentBalancePrice;
            case 7:
                return loyaltyCardType.toString();
            case 8:
                return customerNumber;
            case 9:
                return generalName;
            case 10:
                return companyId;
            case 11:
                return storeId;
            case 12:
                return cardNumber;
            case 13:
                return digital;
            case 14:
                return loyaltyCardTypeId;
            case 15:
                return customerId;
            case 16:
                return status.toString();
            case 17:
                return blockedDescription;
            case 18:
                return isTransferred;
            case 19:
                return verificationCode;
            case 20:
                return registrationEmailAddress;
            case 21:
                return numberOfSentRegistrationEmails;
            case 22:
                return lastSentRegistrationEmail;
            case 23:
                return lastPrintedDateTime;
            case 24:
                return lastPrintedPointsBalance;
            case 25:
                return lastPrintedPriceBalance;
            case 26:
                return createdByUserId;
            case 27:
                return createdDateTime;
            case 28:
                return lastModifiedByUserId;
            case 29:
                return lastModifiedDateTime;
            case 30:
                return itemId;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 31;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LoyaltyCardTypeDescription";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "TotalSavedPoints";
                break;
            case 2:
                info.type = Double.class;
                info.name = "TotalSavedPrice";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "TotalWithdrawedPoints";
                break;
            case 4:
                info.type = Double.class;
                info.name = "TotalWithdrawedPrice";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CurrentBalancePoints";
                break;
            case 6:
                info.type = Double.class;
                info.name = "CurrentBalancePrice";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LoyaltyCardType";
                break;
            case 8:
                info.type = Long.class;
                info.name = "CustomerNumber";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "GeneralName";
                break;
            case 10:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;
            case 11:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreId";
                break;
            case 12:
                info.type = Long.class;
                info.name = "CardNumber";
                break;
            case 13:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Digital";
                break;
            case 14:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LoyaltyCardTypeId";
                break;
            case 15:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CustomerId";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Status";
                break;
            case 17:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "BlockedDescription";
                break;
            case 18:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsTransferred";
                break;
            case 19:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VerificationCode";
                break;
            case 20:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "RegistrationEmailAddress";
                break;
            case 21:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "NumberOfSentRegistrationEmails";
                break;
            case 22:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastSentRegistrationEmail";
                break;
            case 23:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastPrintedDateTime";
                break;
            case 24:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastPrintedPointsBalance";
                break;
            case 25:
                info.type = Double.class;
                info.name = "LastPrintedPriceBalance";
                break;
            case 26:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 27:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 28:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 29:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;
            case 30:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
        }
    }
    
//    @Override //    public String getInnerText() { //        return null; //    } // // //    @Override //    public void setInnerText(String s) { //    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
