package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/16/2017 5:54:09 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.util.Hashtable;

import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ViewProductListInfo implements KvmSerializable {

    public int customerNumber;
    public String customerGeneralName;
    public int storeNumber;
    public String storeDescription;
    public int companyId;
    public int storeId;
    public int productListNumber;
    public WS_Enums.ProductListStatus status;
    public int productListTypeId;
    public int customerId;
    public String description;
    public String note;
    public boolean isCancelled;
    public double totalGrossPrice;
    public double totalNetPrice;
    public double totalWeightedNetPrice;
    public double discountPercentage;
    public double discountPrice;
    public long conversionId;
    public int createdByUserId;
    public String createdDateTime;
    public int lastModifiedByUserId;
    public String lastModifiedDateTime;
    public int itemId;

    public ViewProductListInfo() {
    }

    public ViewProductListInfo(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("CustomerNumber")) {
            Object obj = soapObject.getProperty("CustomerNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                customerNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                customerNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CustomerGeneralName")) {
            Object obj = soapObject.getProperty("CustomerGeneralName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                customerGeneralName = j.toString();
            } else if (obj != null && obj instanceof String) {
                customerGeneralName = (String) obj;
            }
        }
        if (soapObject.hasProperty("StoreNumber")) {
            Object obj = soapObject.getProperty("StoreNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                storeNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                storeNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("StoreDescription")) {
            Object obj = soapObject.getProperty("StoreDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                storeDescription = j.toString();
            } else if (obj != null && obj instanceof String) {
                storeDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("CompanyId")) {
            Object obj = soapObject.getProperty("CompanyId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                companyId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                companyId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("StoreId")) {
            Object obj = soapObject.getProperty("StoreId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                storeId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                storeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ProductListNumber")) {
            Object obj = soapObject.getProperty("ProductListNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productListNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productListNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Status")) {
            Object obj = soapObject.getProperty("Status");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                status = WS_Enums.ProductListStatus.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("ProductListTypeId")) {
            Object obj = soapObject.getProperty("ProductListTypeId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productListTypeId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productListTypeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CustomerId")) {
            Object obj = soapObject.getProperty("CustomerId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                customerId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                customerId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Description")) {
            Object obj = soapObject.getProperty("Description");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                description = j.toString();
            } else if (obj != null && obj instanceof String) {
                description = (String) obj;
            }
        }
        if (soapObject.hasProperty("Note")) {
            Object obj = soapObject.getProperty("Note");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                note = j.toString();
            } else if (obj != null && obj instanceof String) {
                note = (String) obj;
            }
        }
        if (soapObject.hasProperty("IsCancelled")) {
            Object obj = soapObject.getProperty("IsCancelled");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isCancelled = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isCancelled = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("TotalGrossPrice")) {
            Object obj = soapObject.getProperty("TotalGrossPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                totalGrossPrice = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                totalGrossPrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TotalNetPrice")) {
            Object obj = soapObject.getProperty("TotalNetPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                totalNetPrice = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                totalNetPrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("TotalWeightedNetPrice")) {
            Object obj = soapObject.getProperty("TotalWeightedNetPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                totalWeightedNetPrice = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                totalWeightedNetPrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("DiscountPercentage")) {
            Object obj = soapObject.getProperty("DiscountPercentage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                discountPercentage = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                discountPercentage = (Double) obj;
            }
        }
        if (soapObject.hasProperty("DiscountPrice")) {
            Object obj = soapObject.getProperty("DiscountPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                discountPrice = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                discountPrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("ConversionId")) {
            Object obj = soapObject.getProperty("ConversionId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                conversionId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                conversionId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedByUserId")) {
            Object obj = soapObject.getProperty("CreatedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                createdByUserId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                createdByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedDateTime")) {
            Object obj = soapObject.getProperty("CreatedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                createdDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                createdDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedByUserId")) {
            Object obj = soapObject.getProperty("LastModifiedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastModifiedByUserId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                lastModifiedByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedDateTime")) {
            Object obj = soapObject.getProperty("LastModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastModifiedDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastModifiedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ItemId")) {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                itemId = (Integer) obj;
            }
        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return customerNumber;
            case 1:
                return customerGeneralName;
            case 2:
                return storeNumber;
            case 3:
                return storeDescription;
            case 4:
                return companyId;
            case 5:
                return storeId;
            case 6:
                return productListNumber;
            case 7:
                return status.toString();
            case 8:
                return productListTypeId;
            case 9:
                return customerId;
            case 10:
                return description;
            case 11:
                return note;
            case 12:
                return isCancelled;
            case 13:
                return totalGrossPrice;
            case 14:
                return totalNetPrice;
            case 15:
                return totalWeightedNetPrice;
            case 16:
                return discountPercentage;
            case 17:
                return discountPrice;
            case 18:
                return conversionId;
            case 19:
                return createdByUserId;
            case 20:
                return createdDateTime;
            case 21:
                return lastModifiedByUserId;
            case 22:
                return lastModifiedDateTime;
            case 23:
                return itemId;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 24;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CustomerNumber";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CustomerGeneralName";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreNumber";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "StoreDescription";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreId";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductListNumber";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Status";
                break;
            case 8:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductListTypeId";
                break;
            case 9:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CustomerId";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Description";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Note";
                break;
            case 12:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsCancelled";
                break;
            case 13:
                info.type = Double.class;
                info.name = "TotalGrossPrice";
                break;
            case 14:
                info.type = Double.class;
                info.name = "TotalNetPrice";
                break;
            case 15:
                info.type = Double.class;
                info.name = "TotalWeightedNetPrice";
                break;
            case 16:
                info.type = Double.class;
                info.name = "DiscountPercentage";
                break;
            case 17:
                info.type = Double.class;
                info.name = "DiscountPrice";
                break;
            case 18:
                info.type = Long.class;
                info.name = "ConversionId";
                break;
            case 19:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 20:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 21:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 22:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;
            case 23:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
        }
    }


    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
