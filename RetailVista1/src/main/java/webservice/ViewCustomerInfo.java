package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/17/2017 7:04:45 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import webservice.WS_Enums.*;
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.lang.*;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ViewCustomerInfo implements KvmSerializable {
    
    public String saleTypeDescription;
    public String saleTypeCode;
    public long supplierNumber;
    public String supplierName;
    public int debtorNumber;
    public String debtorName;
    public String phoneNumber;
    public String faxNumber;
    public String gsmNumber;
    public String visitAttentionOf;
    public String visitStreet;
    public int visitNumberPart1;
    public String visitNumberPart2;
    public String visitAddressDescription;
    public String visitCounty;
    public String visitAddress;
    public String visitZipCode;
    public String visitCity;
    public int visitCountryId;
    public String visitCountry;
    public String postalAttentionOf;
    public String postalStreet;
    public int postalNumberPart1;
    public String postalNumberPart2;
    public String postalAddressDescription;
    public String postalCounty;
    public String postalAddress;
    public String postalZipCode;
    public String postalCity;
    public int postalCountryId;
    public String postalCountry;
    public String invoiceAttentionOf;
    public String invoiceStreet;
    public int invoiceNumberPart1;
    public String invoiceNumberPart2;
    public String invoiceAddressDescription;
    public String invoiceCounty;
    public String invoiceAddress;
    public String invoiceZipCode;
    public String invoiceCity;
    public int invoiceCountryId;
    public String invoiceCountry;
    public String deliveryAttentionOf;
    public String deliveryStreet;
    public int deliveryNumberPart1;
    public String deliveryNumberPart2;
    public String deliveryAddressDescription;
    public String deliveryCounty;
    public String deliveryAddress;
    public String deliveryZipCode;
    public String deliveryCity;
    public int deliveryCountryId;
    public String deliveryCountry;
    public String defaultEmailAddress;
    public int customerTypeId;
    public long customerNumber;
    public String externalCode;
    public long gS1EdiPartyNumber;
    public long gS1EdiCustomerPartyNumber;
    public int supplierId;
    public int debtorId;
    public boolean isDefaultSupplier;
    public boolean isDefaultDebtor;
    public int saleTypeId;
    public int discountAgreementId;
    public int priceAgreementId;
    public String generalName;
    public String searchText;
    public boolean isCompany;
    public String companyName;
    public String previousCompanyName;
    public int salutationId;
    public String initials;
    public String firstName;
    public String middleName;
    public String lastName;
    public String remarks;
    public String url;
    public boolean isExportAllowed;
    public boolean isCancelled;
    public String rfidCode;
    public String dateOfBirth;
    public Gender gender;
    public boolean deceased;
    public int languageId;
    public int saleConfirmationEmailAddressId;
    public boolean sendSaleConfirmation;
    public int organizationId;
    public int companyId;
    public int createdByUserId;
    public String createdDateTime;
    public int lastModifiedByUserId;
    public String lastModifiedDateTime;
    public int itemId;

    public boolean isSelected() {
        return isSelected;
    }

    public void setSelected(boolean selected) {
        isSelected = selected;
    }

    public boolean isSelected;
    
    public ViewCustomerInfo(){}
    
    public ViewCustomerInfo(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("SaleTypeDescription"))
        {
            Object obj = soapObject.getProperty("SaleTypeDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                saleTypeDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                saleTypeDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("SaleTypeCode"))
        {
            Object obj = soapObject.getProperty("SaleTypeCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                saleTypeCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                saleTypeCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("SupplierNumber"))
        {
            Object obj = soapObject.getProperty("SupplierNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                supplierNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                supplierNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SupplierName"))
        {
            Object obj = soapObject.getProperty("SupplierName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                supplierName = j.toString();
            }else if (obj!= null && obj instanceof String){
                supplierName = (String) obj;
            }
        }
        if (soapObject.hasProperty("DebtorNumber"))
        {
            Object obj = soapObject.getProperty("DebtorNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                debtorNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                debtorNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("DebtorName"))
        {
            Object obj = soapObject.getProperty("DebtorName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                debtorName = j.toString();
            }else if (obj!= null && obj instanceof String){
                debtorName = (String) obj;
            }
        }
        if (soapObject.hasProperty("PhoneNumber"))
        {
            Object obj = soapObject.getProperty("PhoneNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                phoneNumber = j.toString();
            }else if (obj!= null && obj instanceof String){
                phoneNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("FaxNumber"))
        {
            Object obj = soapObject.getProperty("FaxNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                faxNumber = j.toString();
            }else if (obj!= null && obj instanceof String){
                faxNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("GsmNumber"))
        {
            Object obj = soapObject.getProperty("GsmNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                gsmNumber = j.toString();
            }else if (obj!= null && obj instanceof String){
                gsmNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("VisitAttentionOf"))
        {
            Object obj = soapObject.getProperty("VisitAttentionOf");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                visitAttentionOf = j.toString();
            }else if (obj!= null && obj instanceof String){
                visitAttentionOf = (String) obj;
            }
        }
        if (soapObject.hasProperty("VisitStreet"))
        {
            Object obj = soapObject.getProperty("VisitStreet");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                visitStreet = j.toString();
            }else if (obj!= null && obj instanceof String){
                visitStreet = (String) obj;
            }
        }
        if (soapObject.hasProperty("VisitNumberPart1"))
        {
            Object obj = soapObject.getProperty("VisitNumberPart1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                visitNumberPart1 = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                visitNumberPart1 = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("VisitNumberPart2"))
        {
            Object obj = soapObject.getProperty("VisitNumberPart2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                visitNumberPart2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                visitNumberPart2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("VisitAddressDescription"))
        {
            Object obj = soapObject.getProperty("VisitAddressDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                visitAddressDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                visitAddressDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("VisitCounty"))
        {
            Object obj = soapObject.getProperty("VisitCounty");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                visitCounty = j.toString();
            }else if (obj!= null && obj instanceof String){
                visitCounty = (String) obj;
            }
        }
        if (soapObject.hasProperty("VisitAddress"))
        {
            Object obj = soapObject.getProperty("VisitAddress");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                visitAddress = j.toString();
            }else if (obj!= null && obj instanceof String){
                visitAddress = (String) obj;
            }
        }
        if (soapObject.hasProperty("VisitZipCode"))
        {
            Object obj = soapObject.getProperty("VisitZipCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                visitZipCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                visitZipCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("VisitCity"))
        {
            Object obj = soapObject.getProperty("VisitCity");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                visitCity = j.toString();
            }else if (obj!= null && obj instanceof String){
                visitCity = (String) obj;
            }
        }
        if (soapObject.hasProperty("VisitCountryId"))
        {
            Object obj = soapObject.getProperty("VisitCountryId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                visitCountryId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                visitCountryId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("VisitCountry"))
        {
            Object obj = soapObject.getProperty("VisitCountry");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                visitCountry = j.toString();
            }else if (obj!= null && obj instanceof String){
                visitCountry = (String) obj;
            }
        }
        if (soapObject.hasProperty("PostalAttentionOf"))
        {
            Object obj = soapObject.getProperty("PostalAttentionOf");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                postalAttentionOf = j.toString();
            }else if (obj!= null && obj instanceof String){
                postalAttentionOf = (String) obj;
            }
        }
        if (soapObject.hasProperty("PostalStreet"))
        {
            Object obj = soapObject.getProperty("PostalStreet");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                postalStreet = j.toString();
            }else if (obj!= null && obj instanceof String){
                postalStreet = (String) obj;
            }
        }
        if (soapObject.hasProperty("PostalNumberPart1"))
        {
            Object obj = soapObject.getProperty("PostalNumberPart1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                postalNumberPart1 = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                postalNumberPart1 = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PostalNumberPart2"))
        {
            Object obj = soapObject.getProperty("PostalNumberPart2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                postalNumberPart2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                postalNumberPart2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("PostalAddressDescription"))
        {
            Object obj = soapObject.getProperty("PostalAddressDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                postalAddressDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                postalAddressDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("PostalCounty"))
        {
            Object obj = soapObject.getProperty("PostalCounty");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                postalCounty = j.toString();
            }else if (obj!= null && obj instanceof String){
                postalCounty = (String) obj;
            }
        }
        if (soapObject.hasProperty("PostalAddress"))
        {
            Object obj = soapObject.getProperty("PostalAddress");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                postalAddress = j.toString();
            }else if (obj!= null && obj instanceof String){
                postalAddress = (String) obj;
            }
        }
        if (soapObject.hasProperty("PostalZipCode"))
        {
            Object obj = soapObject.getProperty("PostalZipCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                postalZipCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                postalZipCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("PostalCity"))
        {
            Object obj = soapObject.getProperty("PostalCity");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                postalCity = j.toString();
            }else if (obj!= null && obj instanceof String){
                postalCity = (String) obj;
            }
        }
        if (soapObject.hasProperty("PostalCountryId"))
        {
            Object obj = soapObject.getProperty("PostalCountryId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                postalCountryId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                postalCountryId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PostalCountry"))
        {
            Object obj = soapObject.getProperty("PostalCountry");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                postalCountry = j.toString();
            }else if (obj!= null && obj instanceof String){
                postalCountry = (String) obj;
            }
        }
        if (soapObject.hasProperty("InvoiceAttentionOf"))
        {
            Object obj = soapObject.getProperty("InvoiceAttentionOf");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                invoiceAttentionOf = j.toString();
            }else if (obj!= null && obj instanceof String){
                invoiceAttentionOf = (String) obj;
            }
        }
        if (soapObject.hasProperty("InvoiceStreet"))
        {
            Object obj = soapObject.getProperty("InvoiceStreet");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                invoiceStreet = j.toString();
            }else if (obj!= null && obj instanceof String){
                invoiceStreet = (String) obj;
            }
        }
        if (soapObject.hasProperty("InvoiceNumberPart1"))
        {
            Object obj = soapObject.getProperty("InvoiceNumberPart1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                invoiceNumberPart1 = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                invoiceNumberPart1 = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("InvoiceNumberPart2"))
        {
            Object obj = soapObject.getProperty("InvoiceNumberPart2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                invoiceNumberPart2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                invoiceNumberPart2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("InvoiceAddressDescription"))
        {
            Object obj = soapObject.getProperty("InvoiceAddressDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                invoiceAddressDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                invoiceAddressDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("InvoiceCounty"))
        {
            Object obj = soapObject.getProperty("InvoiceCounty");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                invoiceCounty = j.toString();
            }else if (obj!= null && obj instanceof String){
                invoiceCounty = (String) obj;
            }
        }
        if (soapObject.hasProperty("InvoiceAddress"))
        {
            Object obj = soapObject.getProperty("InvoiceAddress");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                invoiceAddress = j.toString();
            }else if (obj!= null && obj instanceof String){
                invoiceAddress = (String) obj;
            }
        }
        if (soapObject.hasProperty("InvoiceZipCode"))
        {
            Object obj = soapObject.getProperty("InvoiceZipCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                invoiceZipCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                invoiceZipCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("InvoiceCity"))
        {
            Object obj = soapObject.getProperty("InvoiceCity");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                invoiceCity = j.toString();
            }else if (obj!= null && obj instanceof String){
                invoiceCity = (String) obj;
            }
        }
        if (soapObject.hasProperty("InvoiceCountryId"))
        {
            Object obj = soapObject.getProperty("InvoiceCountryId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                invoiceCountryId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                invoiceCountryId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("InvoiceCountry"))
        {
            Object obj = soapObject.getProperty("InvoiceCountry");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                invoiceCountry = j.toString();
            }else if (obj!= null && obj instanceof String){
                invoiceCountry = (String) obj;
            }
        }
        if (soapObject.hasProperty("DeliveryAttentionOf"))
        {
            Object obj = soapObject.getProperty("DeliveryAttentionOf");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                deliveryAttentionOf = j.toString();
            }else if (obj!= null && obj instanceof String){
                deliveryAttentionOf = (String) obj;
            }
        }
        if (soapObject.hasProperty("DeliveryStreet"))
        {
            Object obj = soapObject.getProperty("DeliveryStreet");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                deliveryStreet = j.toString();
            }else if (obj!= null && obj instanceof String){
                deliveryStreet = (String) obj;
            }
        }
        if (soapObject.hasProperty("DeliveryNumberPart1"))
        {
            Object obj = soapObject.getProperty("DeliveryNumberPart1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                deliveryNumberPart1 = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                deliveryNumberPart1 = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("DeliveryNumberPart2"))
        {
            Object obj = soapObject.getProperty("DeliveryNumberPart2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                deliveryNumberPart2 = j.toString();
            }else if (obj!= null && obj instanceof String){
                deliveryNumberPart2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("DeliveryAddressDescription"))
        {
            Object obj = soapObject.getProperty("DeliveryAddressDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                deliveryAddressDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                deliveryAddressDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("DeliveryCounty"))
        {
            Object obj = soapObject.getProperty("DeliveryCounty");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                deliveryCounty = j.toString();
            }else if (obj!= null && obj instanceof String){
                deliveryCounty = (String) obj;
            }
        }
        if (soapObject.hasProperty("DeliveryAddress"))
        {
            Object obj = soapObject.getProperty("DeliveryAddress");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                deliveryAddress = j.toString();
            }else if (obj!= null && obj instanceof String){
                deliveryAddress = (String) obj;
            }
        }
        if (soapObject.hasProperty("DeliveryZipCode"))
        {
            Object obj = soapObject.getProperty("DeliveryZipCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                deliveryZipCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                deliveryZipCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("DeliveryCity"))
        {
            Object obj = soapObject.getProperty("DeliveryCity");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                deliveryCity = j.toString();
            }else if (obj!= null && obj instanceof String){
                deliveryCity = (String) obj;
            }
        }
        if (soapObject.hasProperty("DeliveryCountryId"))
        {
            Object obj = soapObject.getProperty("DeliveryCountryId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                deliveryCountryId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                deliveryCountryId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("DeliveryCountry"))
        {
            Object obj = soapObject.getProperty("DeliveryCountry");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                deliveryCountry = j.toString();
            }else if (obj!= null && obj instanceof String){
                deliveryCountry = (String) obj;
            }
        }
        if (soapObject.hasProperty("DefaultEmailAddress"))
        {
            Object obj = soapObject.getProperty("DefaultEmailAddress");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                defaultEmailAddress = j.toString();
            }else if (obj!= null && obj instanceof String){
                defaultEmailAddress = (String) obj;
            }
        }
        if (soapObject.hasProperty("CustomerTypeId"))
        {
            Object obj = soapObject.getProperty("CustomerTypeId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                customerTypeId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                customerTypeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CustomerNumber"))
        {
            Object obj = soapObject.getProperty("CustomerNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                customerNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                customerNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ExternalCode"))
        {
            Object obj = soapObject.getProperty("ExternalCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                externalCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                externalCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("GS1EdiPartyNumber"))
        {
            Object obj = soapObject.getProperty("GS1EdiPartyNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                gS1EdiPartyNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                gS1EdiPartyNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("GS1EdiCustomerPartyNumber"))
        {
            Object obj = soapObject.getProperty("GS1EdiCustomerPartyNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                gS1EdiCustomerPartyNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                gS1EdiCustomerPartyNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SupplierId"))
        {
            Object obj = soapObject.getProperty("SupplierId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                supplierId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                supplierId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("DebtorId"))
        {
            Object obj = soapObject.getProperty("DebtorId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                debtorId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                debtorId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IsDefaultSupplier"))
        {
            Object obj = soapObject.getProperty("IsDefaultSupplier");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isDefaultSupplier = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isDefaultSupplier = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsDefaultDebtor"))
        {
            Object obj = soapObject.getProperty("IsDefaultDebtor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isDefaultDebtor = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isDefaultDebtor = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("SaleTypeId"))
        {
            Object obj = soapObject.getProperty("SaleTypeId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                saleTypeId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                saleTypeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("DiscountAgreementId"))
        {
            Object obj = soapObject.getProperty("DiscountAgreementId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                discountAgreementId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                discountAgreementId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PriceAgreementId"))
        {
            Object obj = soapObject.getProperty("PriceAgreementId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                priceAgreementId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                priceAgreementId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("GeneralName"))
        {
            Object obj = soapObject.getProperty("GeneralName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                generalName = j.toString();
            }else if (obj!= null && obj instanceof String){
                generalName = (String) obj;
            }
        }
        if (soapObject.hasProperty("SearchText"))
        {
            Object obj = soapObject.getProperty("SearchText");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                searchText = j.toString();
            }else if (obj!= null && obj instanceof String){
                searchText = (String) obj;
            }
        }
        if (soapObject.hasProperty("IsCompany"))
        {
            Object obj = soapObject.getProperty("IsCompany");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isCompany = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isCompany = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("CompanyName"))
        {
            Object obj = soapObject.getProperty("CompanyName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                companyName = j.toString();
            }else if (obj!= null && obj instanceof String){
                companyName = (String) obj;
            }
        }
        if (soapObject.hasProperty("PreviousCompanyName"))
        {
            Object obj = soapObject.getProperty("PreviousCompanyName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                previousCompanyName = j.toString();
            }else if (obj!= null && obj instanceof String){
                previousCompanyName = (String) obj;
            }
        }
        if (soapObject.hasProperty("SalutationId"))
        {
            Object obj = soapObject.getProperty("SalutationId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                salutationId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                salutationId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Initials"))
        {
            Object obj = soapObject.getProperty("Initials");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                initials = j.toString();
            }else if (obj!= null && obj instanceof String){
                initials = (String) obj;
            }
        }
        if (soapObject.hasProperty("FirstName"))
        {
            Object obj = soapObject.getProperty("FirstName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                firstName = j.toString();
            }else if (obj!= null && obj instanceof String){
                firstName = (String) obj;
            }
        }
        if (soapObject.hasProperty("MiddleName"))
        {
            Object obj = soapObject.getProperty("MiddleName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                middleName = j.toString();
            }else if (obj!= null && obj instanceof String){
                middleName = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastName"))
        {
            Object obj = soapObject.getProperty("LastName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastName = j.toString();
            }else if (obj!= null && obj instanceof String){
                lastName = (String) obj;
            }
        }
        if (soapObject.hasProperty("Remarks"))
        {
            Object obj = soapObject.getProperty("Remarks");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                remarks = j.toString();
            }else if (obj!= null && obj instanceof String){
                remarks = (String) obj;
            }
        }
        if (soapObject.hasProperty("Url"))
        {
            Object obj = soapObject.getProperty("Url");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                url = j.toString();
            }else if (obj!= null && obj instanceof String){
                url = (String) obj;
            }
        }
        if (soapObject.hasProperty("IsExportAllowed"))
        {
            Object obj = soapObject.getProperty("IsExportAllowed");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isExportAllowed = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isExportAllowed = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsCancelled"))
        {
            Object obj = soapObject.getProperty("IsCancelled");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isCancelled = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isCancelled = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("RfidCode"))
        {
            Object obj = soapObject.getProperty("RfidCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                rfidCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                rfidCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("DateOfBirth"))
        {
            Object obj = soapObject.getProperty("DateOfBirth");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                dateOfBirth = j.toString();
            }else if (obj!= null && obj instanceof String){
                dateOfBirth = (String) obj;
            }
        }
        if (soapObject.hasProperty("Gender"))
        {
            Object obj = soapObject.getProperty("Gender");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                gender = Gender.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("Deceased"))
        {
            Object obj = soapObject.getProperty("Deceased");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                deceased = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                deceased = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("LanguageId"))
        {
            Object obj = soapObject.getProperty("LanguageId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                languageId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                languageId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SaleConfirmationEmailAddressId"))
        {
            Object obj = soapObject.getProperty("SaleConfirmationEmailAddressId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                saleConfirmationEmailAddressId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                saleConfirmationEmailAddressId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SendSaleConfirmation"))
        {
            Object obj = soapObject.getProperty("SendSaleConfirmation");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                sendSaleConfirmation = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                sendSaleConfirmation = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("OrganizationId"))
        {
            Object obj = soapObject.getProperty("OrganizationId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                organizationId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                organizationId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CompanyId"))
        {
            Object obj = soapObject.getProperty("CompanyId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                companyId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                companyId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedByUserId"))
        {
            Object obj = soapObject.getProperty("CreatedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                createdByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedDateTime"))
        {
            Object obj = soapObject.getProperty("CreatedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                createdDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedByUserId"))
        {
            Object obj = soapObject.getProperty("LastModifiedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                lastModifiedByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedDateTime"))
        {
            Object obj = soapObject.getProperty("LastModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                lastModifiedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ItemId"))
        {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                itemId = (Integer) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return saleTypeDescription;
            case 1:
                return saleTypeCode;
            case 2:
                return supplierNumber;
            case 3:
                return supplierName;
            case 4:
                return debtorNumber;
            case 5:
                return debtorName;
            case 6:
                return phoneNumber;
            case 7:
                return faxNumber;
            case 8:
                return gsmNumber;
            case 9:
                return visitAttentionOf;
            case 10:
                return visitStreet;
            case 11:
                return visitNumberPart1;
            case 12:
                return visitNumberPart2;
            case 13:
                return visitAddressDescription;
            case 14:
                return visitCounty;
            case 15:
                return visitAddress;
            case 16:
                return visitZipCode;
            case 17:
                return visitCity;
            case 18:
                return visitCountryId;
            case 19:
                return visitCountry;
            case 20:
                return postalAttentionOf;
            case 21:
                return postalStreet;
            case 22:
                return postalNumberPart1;
            case 23:
                return postalNumberPart2;
            case 24:
                return postalAddressDescription;
            case 25:
                return postalCounty;
            case 26:
                return postalAddress;
            case 27:
                return postalZipCode;
            case 28:
                return postalCity;
            case 29:
                return postalCountryId;
            case 30:
                return postalCountry;
            case 31:
                return invoiceAttentionOf;
            case 32:
                return invoiceStreet;
            case 33:
                return invoiceNumberPart1;
            case 34:
                return invoiceNumberPart2;
            case 35:
                return invoiceAddressDescription;
            case 36:
                return invoiceCounty;
            case 37:
                return invoiceAddress;
            case 38:
                return invoiceZipCode;
            case 39:
                return invoiceCity;
            case 40:
                return invoiceCountryId;
            case 41:
                return invoiceCountry;
            case 42:
                return deliveryAttentionOf;
            case 43:
                return deliveryStreet;
            case 44:
                return deliveryNumberPart1;
            case 45:
                return deliveryNumberPart2;
            case 46:
                return deliveryAddressDescription;
            case 47:
                return deliveryCounty;
            case 48:
                return deliveryAddress;
            case 49:
                return deliveryZipCode;
            case 50:
                return deliveryCity;
            case 51:
                return deliveryCountryId;
            case 52:
                return deliveryCountry;
            case 53:
                return defaultEmailAddress;
            case 54:
                return customerTypeId;
            case 55:
                return customerNumber;
            case 56:
                return externalCode;
            case 57:
                return gS1EdiPartyNumber;
            case 58:
                return gS1EdiCustomerPartyNumber;
            case 59:
                return supplierId;
            case 60:
                return debtorId;
            case 61:
                return isDefaultSupplier;
            case 62:
                return isDefaultDebtor;
            case 63:
                return saleTypeId;
            case 64:
                return discountAgreementId;
            case 65:
                return priceAgreementId;
            case 66:
                return generalName;
            case 67:
                return searchText;
            case 68:
                return isCompany;
            case 69:
                return companyName;
            case 70:
                return previousCompanyName;
            case 71:
                return salutationId;
            case 72:
                return initials;
            case 73:
                return firstName;
            case 74:
                return middleName;
            case 75:
                return lastName;
            case 76:
                return remarks;
            case 77:
                return url;
            case 78:
                return isExportAllowed;
            case 79:
                return isCancelled;
            case 80:
                return rfidCode;
            case 81:
                return dateOfBirth;
            case 82:
                return gender.toString();
            case 83:
                return deceased;
            case 84:
                return languageId;
            case 85:
                return saleConfirmationEmailAddressId;
            case 86:
                return sendSaleConfirmation;
            case 87:
                return organizationId;
            case 88:
                return companyId;
            case 89:
                return createdByUserId;
            case 90:
                return createdDateTime;
            case 91:
                return lastModifiedByUserId;
            case 92:
                return lastModifiedDateTime;
            case 93:
                return itemId;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 94;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SaleTypeDescription";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SaleTypeCode";
                break;
            case 2:
                info.type = Long.class;
                info.name = "SupplierNumber";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SupplierName";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "DebtorNumber";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DebtorName";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PhoneNumber";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FaxNumber";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "GsmNumber";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VisitAttentionOf";
                break;
            case 10:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VisitStreet";
                break;
            case 11:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "VisitNumberPart1";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VisitNumberPart2";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VisitAddressDescription";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VisitCounty";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VisitAddress";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VisitZipCode";
                break;
            case 17:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VisitCity";
                break;
            case 18:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "VisitCountryId";
                break;
            case 19:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VisitCountry";
                break;
            case 20:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PostalAttentionOf";
                break;
            case 21:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PostalStreet";
                break;
            case 22:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PostalNumberPart1";
                break;
            case 23:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PostalNumberPart2";
                break;
            case 24:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PostalAddressDescription";
                break;
            case 25:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PostalCounty";
                break;
            case 26:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PostalAddress";
                break;
            case 27:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PostalZipCode";
                break;
            case 28:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PostalCity";
                break;
            case 29:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PostalCountryId";
                break;
            case 30:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PostalCountry";
                break;
            case 31:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "InvoiceAttentionOf";
                break;
            case 32:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "InvoiceStreet";
                break;
            case 33:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "InvoiceNumberPart1";
                break;
            case 34:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "InvoiceNumberPart2";
                break;
            case 35:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "InvoiceAddressDescription";
                break;
            case 36:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "InvoiceCounty";
                break;
            case 37:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "InvoiceAddress";
                break;
            case 38:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "InvoiceZipCode";
                break;
            case 39:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "InvoiceCity";
                break;
            case 40:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "InvoiceCountryId";
                break;
            case 41:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "InvoiceCountry";
                break;
            case 42:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DeliveryAttentionOf";
                break;
            case 43:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DeliveryStreet";
                break;
            case 44:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "DeliveryNumberPart1";
                break;
            case 45:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DeliveryNumberPart2";
                break;
            case 46:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DeliveryAddressDescription";
                break;
            case 47:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DeliveryCounty";
                break;
            case 48:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DeliveryAddress";
                break;
            case 49:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DeliveryZipCode";
                break;
            case 50:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DeliveryCity";
                break;
            case 51:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "DeliveryCountryId";
                break;
            case 52:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DeliveryCountry";
                break;
            case 53:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DefaultEmailAddress";
                break;
            case 54:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CustomerTypeId";
                break;
            case 55:
                info.type = Long.class;
                info.name = "CustomerNumber";
                break;
            case 56:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExternalCode";
                break;
            case 57:
                info.type = Long.class;
                info.name = "GS1EdiPartyNumber";
                break;
            case 58:
                info.type = Long.class;
                info.name = "GS1EdiCustomerPartyNumber";
                break;
            case 59:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SupplierId";
                break;
            case 60:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "DebtorId";
                break;
            case 61:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsDefaultSupplier";
                break;
            case 62:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsDefaultDebtor";
                break;
            case 63:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SaleTypeId";
                break;
            case 64:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "DiscountAgreementId";
                break;
            case 65:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PriceAgreementId";
                break;
            case 66:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "GeneralName";
                break;
            case 67:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SearchText";
                break;
            case 68:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsCompany";
                break;
            case 69:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CompanyName";
                break;
            case 70:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PreviousCompanyName";
                break;
            case 71:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SalutationId";
                break;
            case 72:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Initials";
                break;
            case 73:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FirstName";
                break;
            case 74:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "MiddleName";
                break;
            case 75:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastName";
                break;
            case 76:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Remarks";
                break;
            case 77:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Url";
                break;
            case 78:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsExportAllowed";
                break;
            case 79:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsCancelled";
                break;
            case 80:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "RfidCode";
                break;
            case 81:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DateOfBirth";
                break;
            case 82:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Gender";
                break;
            case 83:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "Deceased";
                break;
            case 84:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LanguageId";
                break;
            case 85:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SaleConfirmationEmailAddressId";
                break;
            case 86:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "SendSaleConfirmation";
                break;
            case 87:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "OrganizationId";
                break;
            case 88:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;
            case 89:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 90:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 91:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 92:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;
            case 93:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
        }
    }
    
//    @Override //    public String getInnerText() { //        return null; //    } // // //    @Override //    public void setInnerText(String s) { //    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
