package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/16/2017 5:54:08 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.util.Hashtable;

import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class MixedMatchFilter implements KvmSerializable {

    /*    public int storeId;
        public int storeIdOrUnassigned;*/
    public int productId;
    public String description;
    /*    public int mixedMatchNumber;
        public String externalCode;

        public int promotionId;
        public int countryId;
        public int countryIdOrUnassigned;
        public int storeTypeId;
        public int storeTypeIdOrUnassigned;
        public int promotionProfileIdOrUnassigned;
        public WS_Enums.MixedMatchType mixedMatchType;
        public WS_Enums.MixedMatchDiscountType mixedMatchDiscountType;
        public WS_Enums.BooleanFilter isActiveOnly;*/
    public WS_Enums.BooleanFilter isActiveAndFutureOnly;
/*    public WS_Enums.BooleanFilter isIgnoredOnly;
    public int applyableProductIdForGroups;*/

    public MixedMatchFilter() {
    }

    public MixedMatchFilter(SoapObject soapObject) {
        if (soapObject == null)
            return;
      /*  if (soapObject.hasProperty("StoreId"))
        {
            Object obj = soapObject.getProperty("StoreId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                storeId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                storeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("StoreIdOrUnassigned"))
        {
            Object obj = soapObject.getProperty("StoreIdOrUnassigned");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                storeIdOrUnassigned = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                storeIdOrUnassigned = (Integer) obj;
            }
        }*/
        if (soapObject.hasProperty("ProductId")) {
            Object obj = soapObject.getProperty("ProductId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Description")) {
            Object obj = soapObject.getProperty("Description");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                description = j.toString();
            } else if (obj != null && obj instanceof String) {
                description = (String) obj;
            }
        }
/*        if (soapObject.hasProperty("MixedMatchNumber"))
        {
            Object obj = soapObject.getProperty("MixedMatchNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                mixedMatchNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                mixedMatchNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ExternalCode"))
        {
            Object obj = soapObject.getProperty("ExternalCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                externalCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                externalCode = (String) obj;
            }
        }

        if (soapObject.hasProperty("PromotionId"))
        {
            Object obj = soapObject.getProperty("PromotionId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                promotionId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                promotionId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CountryId"))
        {
            Object obj = soapObject.getProperty("CountryId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                countryId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                countryId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CountryIdOrUnassigned"))
        {
            Object obj = soapObject.getProperty("CountryIdOrUnassigned");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                countryIdOrUnassigned = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                countryIdOrUnassigned = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("StoreTypeId"))
        {
            Object obj = soapObject.getProperty("StoreTypeId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                storeTypeId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                storeTypeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("StoreTypeIdOrUnassigned"))
        {
            Object obj = soapObject.getProperty("StoreTypeIdOrUnassigned");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                storeTypeIdOrUnassigned = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                storeTypeIdOrUnassigned = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PromotionProfileIdOrUnassigned"))
        {
            Object obj = soapObject.getProperty("PromotionProfileIdOrUnassigned");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                promotionProfileIdOrUnassigned = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                promotionProfileIdOrUnassigned = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("MixedMatchType"))
        {
            Object obj = soapObject.getProperty("MixedMatchType");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                mixedMatchType = WS_Enums.MixedMatchType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("MixedMatchDiscountType"))
        {
            Object obj = soapObject.getProperty("MixedMatchDiscountType");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                mixedMatchDiscountType = WS_Enums.MixedMatchDiscountType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("IsActiveOnly"))
        {
            Object obj = soapObject.getProperty("IsActiveOnly");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                isActiveOnly = WS_Enums.BooleanFilter.fromString(j.toString());
            }
        }*/
        if (soapObject.hasProperty("IsActiveAndFutureOnly")) {
            Object obj = soapObject.getProperty("IsActiveAndFutureOnly");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isActiveAndFutureOnly = WS_Enums.BooleanFilter.fromString(j.toString());
            }
        }
/*        if (soapObject.hasProperty("IsIgnoredOnly"))
        {
            Object obj = soapObject.getProperty("IsIgnoredOnly");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                isIgnoredOnly = WS_Enums.BooleanFilter.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("ApplyableProductIdForGroups"))
        {
            Object obj = soapObject.getProperty("ApplyableProductIdForGroups");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                applyableProductIdForGroups = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                applyableProductIdForGroups = (Integer) obj;
            }
        }*/
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
        /*    case 0:
                return storeId;
            case 1:
                return storeIdOrUnassigned;*/
            case 0:
                return productId;
            case 2:
                return description;    /*case 3:
                return mixedMatchNumber;
            case 4:
                return externalCode;

            case 6:
                return promotionId;
            case 7:
                return countryId;
            case 8:
                return countryIdOrUnassigned;
            case 9:
                return storeTypeId;
            case 10:
                return storeTypeIdOrUnassigned;
            case 11:
                return promotionProfileIdOrUnassigned;
            case 12:
                return mixedMatchType.toString();
            case 13:
                return mixedMatchDiscountType.toString();
            case 14:
                return isActiveOnly.toString();*/
            case 1:
                return isActiveAndFutureOnly.toString();
            /*case 16:
                return isIgnoredOnly.toString();
            case 17:
                return applyableProductIdForGroups;*/
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 3;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
       /*     case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreId";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreIdOrUnassigned";
                break;*/
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductId";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Description";
                break;
 /*           case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "MixedMatchNumber";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExternalCode";
                break;

            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PromotionId";
                break;
            case 7:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CountryId";
                break;
            case 8:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CountryIdOrUnassigned";
                break;
            case 9:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreTypeId";
                break;
            case 10:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreTypeIdOrUnassigned";
                break;
            case 11:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PromotionProfileIdOrUnassigned";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "MixedMatchType";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "MixedMatchDiscountType";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IsActiveOnly";
                break;*/
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IsActiveAndFutureOnly";
                break;
            /*case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IsIgnoredOnly";
                break;
            case 17:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ApplyableProductIdForGroups";
                break;*/
        }
    }


    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
