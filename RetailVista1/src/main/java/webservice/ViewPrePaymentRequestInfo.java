package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 9/8/2017 11:54:00 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ViewPrePaymentRequestInfo implements KvmSerializable {
    
    public boolean isPaid;
    public int saleOrderNumber;
    public String saleOrderDescription;
    public long customerNumber;
    public String customerName;
    public int companyId;
    public int storeId;
    public int prePaymentRequestNumber;
    public int prePaymentId;
    public int customerId;
    public int saleOrderId;
    public int userId;
    public int productId;
    public double toBePaid;
    public String note;
    public int createdByUserId;
    public String createdDateTime;
    public int lastModifiedByUserId;
    public String lastModifiedDateTime;
    public int itemId;
    
    public ViewPrePaymentRequestInfo(){}
    
    public ViewPrePaymentRequestInfo(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("IsPaid"))
        {
            Object obj = soapObject.getProperty("IsPaid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isPaid = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isPaid = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("SaleOrderNumber"))
        {
            Object obj = soapObject.getProperty("SaleOrderNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                saleOrderNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                saleOrderNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SaleOrderDescription"))
        {
            Object obj = soapObject.getProperty("SaleOrderDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                saleOrderDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                saleOrderDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("CustomerNumber"))
        {
            Object obj = soapObject.getProperty("CustomerNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                customerNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                customerNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CustomerName"))
        {
            Object obj = soapObject.getProperty("CustomerName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                customerName = j.toString();
            }else if (obj!= null && obj instanceof String){
                customerName = (String) obj;
            }
        }
        if (soapObject.hasProperty("CompanyId"))
        {
            Object obj = soapObject.getProperty("CompanyId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                companyId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                companyId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("StoreId"))
        {
            Object obj = soapObject.getProperty("StoreId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                storeId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                storeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PrePaymentRequestNumber"))
        {
            Object obj = soapObject.getProperty("PrePaymentRequestNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                prePaymentRequestNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                prePaymentRequestNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PrePaymentId"))
        {
            Object obj = soapObject.getProperty("PrePaymentId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                prePaymentId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                prePaymentId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CustomerId"))
        {
            Object obj = soapObject.getProperty("CustomerId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                customerId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                customerId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SaleOrderId"))
        {
            Object obj = soapObject.getProperty("SaleOrderId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                saleOrderId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                saleOrderId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("UserId"))
        {
            Object obj = soapObject.getProperty("UserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                userId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                userId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ProductId"))
        {
            Object obj = soapObject.getProperty("ProductId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                productId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                productId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ToBePaid"))
        {
            Object obj = soapObject.getProperty("ToBePaid");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                toBePaid = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                toBePaid = (Double) obj;
            }
        }
        if (soapObject.hasProperty("Note"))
        {
            Object obj = soapObject.getProperty("Note");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                note = j.toString();
            }else if (obj!= null && obj instanceof String){
                note = (String) obj;
            }
        }
        if (soapObject.hasProperty("CreatedByUserId"))
        {
            Object obj = soapObject.getProperty("CreatedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                createdByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedDateTime"))
        {
            Object obj = soapObject.getProperty("CreatedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                createdDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedByUserId"))
        {
            Object obj = soapObject.getProperty("LastModifiedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                lastModifiedByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedDateTime"))
        {
            Object obj = soapObject.getProperty("LastModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                lastModifiedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ItemId"))
        {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                itemId = (Integer) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return isPaid;
            case 1:
                return saleOrderNumber;
            case 2:
                return saleOrderDescription;
            case 3:
                return customerNumber;
            case 4:
                return customerName;
            case 5:
                return companyId;
            case 6:
                return storeId;
            case 7:
                return prePaymentRequestNumber;
            case 8:
                return prePaymentId;
            case 9:
                return customerId;
            case 10:
                return saleOrderId;
            case 11:
                return userId;
            case 12:
                return productId;
            case 13:
                return toBePaid;
            case 14:
                return note;
            case 15:
                return createdByUserId;
            case 16:
                return createdDateTime;
            case 17:
                return lastModifiedByUserId;
            case 18:
                return lastModifiedDateTime;
            case 19:
                return itemId;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 20;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsPaid";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SaleOrderNumber";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SaleOrderDescription";
                break;
            case 3:
                info.type = Long.class;
                info.name = "CustomerNumber";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CustomerName";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreId";
                break;
            case 7:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PrePaymentRequestNumber";
                break;
            case 8:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PrePaymentId";
                break;
            case 9:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CustomerId";
                break;
            case 10:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SaleOrderId";
                break;
            case 11:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "UserId";
                break;
            case 12:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductId";
                break;
            case 13:
                info.type = Double.class;
                info.name = "ToBePaid";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Note";
                break;
            case 15:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 17:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 18:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;
            case 19:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
        }
    }
    
//    @Override
//    public String getInnerText() {
//        return null;
//    }
//
//
//    @Override
//    public void setInnerText(String s) {
//    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
