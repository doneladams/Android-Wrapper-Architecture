package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 9/11/2018 7:31:36 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class SuppliersFilter implements KvmSerializable {

    public long supplierNumber;
    public String externalCode;
    public String financialExportCode;
    public long gS1Code;
    public String generalName;
    public String vatCode;
    public String iban;
    public String bIC;
    public long gs1EdiPartyNumber;
    public long gS1EdiSupplierPartyNumber;
    public int productId;
    public int interbranchProductId;
    public WS_Enums.BooleanFilter isInterbrancheOnly;
    public WS_Enums.BooleanFilter isCancelledOnly;
    public boolean isSmartSearch;
    public boolean determineInterbrancheSuppliers;
    public boolean includeInterbranchSuppliers;
    public WS_Enums.BooleanFilter ignoreChangesOnly;

    public SuppliersFilter() {
    }

    public SuppliersFilter(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("SupplierNumber")) {
            Object obj = soapObject.getProperty("SupplierNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                supplierNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                supplierNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ExternalCode")) {
            Object obj = soapObject.getProperty("ExternalCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                externalCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                externalCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("FinancialExportCode")) {
            Object obj = soapObject.getProperty("FinancialExportCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                financialExportCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                financialExportCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("GS1Code")) {
            Object obj = soapObject.getProperty("GS1Code");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                gS1Code = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                gS1Code = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("GeneralName")) {
            Object obj = soapObject.getProperty("GeneralName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                generalName = j.toString();
            } else if (obj != null && obj instanceof String) {
                generalName = (String) obj;
            }
        }
        if (soapObject.hasProperty("VatCode")) {
            Object obj = soapObject.getProperty("VatCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                vatCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                vatCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("Iban")) {
            Object obj = soapObject.getProperty("Iban");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                iban = j.toString();
            } else if (obj != null && obj instanceof String) {
                iban = (String) obj;
            }
        }
        if (soapObject.hasProperty("BIC")) {
            Object obj = soapObject.getProperty("BIC");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                bIC = j.toString();
            } else if (obj != null && obj instanceof String) {
                bIC = (String) obj;
            }
        }
        if (soapObject.hasProperty("Gs1EdiPartyNumber")) {
            Object obj = soapObject.getProperty("Gs1EdiPartyNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                gs1EdiPartyNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                gs1EdiPartyNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("GS1EdiSupplierPartyNumber")) {
            Object obj = soapObject.getProperty("GS1EdiSupplierPartyNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                gS1EdiSupplierPartyNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                gS1EdiSupplierPartyNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ProductId")) {
            Object obj = soapObject.getProperty("ProductId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("InterbranchProductId")) {
            Object obj = soapObject.getProperty("InterbranchProductId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                interbranchProductId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                interbranchProductId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IsInterbrancheOnly")) {
            Object obj = soapObject.getProperty("IsInterbrancheOnly");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isInterbrancheOnly = WS_Enums.BooleanFilter.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("IsCancelledOnly")) {
            Object obj = soapObject.getProperty("IsCancelledOnly");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isCancelledOnly = WS_Enums.BooleanFilter.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("IsSmartSearch")) {
            Object obj = soapObject.getProperty("IsSmartSearch");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isSmartSearch = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isSmartSearch = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("DetermineInterbrancheSuppliers")) {
            Object obj = soapObject.getProperty("DetermineInterbrancheSuppliers");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                determineInterbrancheSuppliers = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                determineInterbrancheSuppliers = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IncludeInterbranchSuppliers")) {
            Object obj = soapObject.getProperty("IncludeInterbranchSuppliers");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                includeInterbranchSuppliers = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                includeInterbranchSuppliers = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IgnoreChangesOnly")) {
            Object obj = soapObject.getProperty("IgnoreChangesOnly");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                ignoreChangesOnly = WS_Enums.BooleanFilter.fromString(j.toString());
            }
        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return supplierNumber;
            case 1:
                return externalCode;
            case 2:
                return financialExportCode;
            case 3:
                return gS1Code;
            case 4:
                return generalName;
            case 5:
                return vatCode;
            case 6:
                return iban;
            case 7:
                return bIC;
            case 8:
                return gs1EdiPartyNumber;
            case 9:
                return gS1EdiSupplierPartyNumber;
            case 10:
                return productId;
            case 11:
                return interbranchProductId;
            case 12:
                return isInterbrancheOnly.toString();
            case 13:
                return isCancelledOnly.toString();
            case 14:
                return isSmartSearch;
            case 15:
                return determineInterbrancheSuppliers;
            case 16:
                return includeInterbranchSuppliers;
            case 17:
                return ignoreChangesOnly.toString();
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 18;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = Long.class;
                info.name = "SupplierNumber";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExternalCode";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FinancialExportCode";
                break;
            case 3:
                info.type = Long.class;
                info.name = "GS1Code";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "GeneralName";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "VatCode";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Iban";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "BIC";
                break;
            case 8:
                info.type = Long.class;
                info.name = "Gs1EdiPartyNumber";
                break;
            case 9:
                info.type = Long.class;
                info.name = "GS1EdiSupplierPartyNumber";
                break;
            case 10:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductId";
                break;
            case 11:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "InterbranchProductId";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IsInterbrancheOnly";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IsCancelledOnly";
                break;
            case 14:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsSmartSearch";
                break;
            case 15:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "DetermineInterbrancheSuppliers";
                break;
            case 16:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IncludeInterbranchSuppliers";
                break;
            case 17:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IgnoreChangesOnly";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
