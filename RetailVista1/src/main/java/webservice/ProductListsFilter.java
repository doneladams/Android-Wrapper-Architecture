package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/16/2017 5:54:08 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//


import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class ProductListsFilter implements KvmSerializable {

    public int storeId;
    public int productListNumber;
    //  public WS_Enums.ProductListStatus status;
    public int productListTypeId;
    //    public int customerId;
    public String description;
    public WS_Enums.BooleanFilter isCancelledOnly;
//    public long conversionId;

    public ProductListsFilter() {
    }

    public ProductListsFilter(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("StoreId")) {
            Object obj = soapObject.getProperty("StoreId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                storeId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                storeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ProductListNumber")) {
            Object obj = soapObject.getProperty("ProductListNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productListNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productListNumber = (Integer) obj;
            }
        }
     /*   if (soapObject.hasProperty("Status")) {
            Object obj = soapObject.getProperty("Status");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                status = WS_Enums.ProductListStatus.fromString(j.toString());
            }
        }*/
        if (soapObject.hasProperty("ProductListTypeId")) {
            Object obj = soapObject.getProperty("ProductListTypeId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productListTypeId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productListTypeId = (Integer) obj;
            }
        }
    /*    if (soapObject.hasProperty("CustomerId")) {
            Object obj = soapObject.getProperty("CustomerId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                customerId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                customerId = (Integer) obj;
            }
        }*/
        if (soapObject.hasProperty("Description")) {
            Object obj = soapObject.getProperty("Description");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                description = j.toString();
            } else if (obj != null && obj instanceof String) {
                description = (String) obj;
            }
        }
        if (soapObject.hasProperty("IsCancelledOnly")) {
            Object obj = soapObject.getProperty("IsCancelledOnly");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isCancelledOnly = WS_Enums.BooleanFilter.fromString(j.toString());
            }
        }
/*        if (soapObject.hasProperty("ConversionId")) {
            Object obj = soapObject.getProperty("ConversionId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                conversionId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                conversionId = (Integer) obj;
            }
        }*/
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return storeId;
            case 1:
                return productListNumber;
            case 2:
                return productListTypeId;
            case 3:
                return description;
            case 4:
                return isCancelledOnly.toString();
/*            case 4:
                return customerId;
            case 2:
                return status.toString();
            case 7:
                return conversionId;*/
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 5;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreId";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductListNumber";
                break;

            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductListTypeId";
                break;

            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Description";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IsCancelledOnly";
                break;
         /*   case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CustomerId";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Status";
                break;
            case 7:
                info.type = Long.class;
                info.name = "ConversionId";
                break;*/
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
