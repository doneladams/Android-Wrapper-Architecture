package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 9/11/2018 7:31:36 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.util.Hashtable;

import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ViewPriceAgreementProductInfo implements KvmSerializable {

    public String priceAgreementCode;
    public String priceAgreementDescription;
    public long productNumber;
    public String productDescription;
    public WS_Enums.CustomerPriceType priceType;
    public int priceAgreementId;
    public int productId;
    public double grossPrice;
    public double percentage;
    public boolean allowDiscounts;
    public int organizationId;
    public int companyId;
    public int createdByUserId;
    public String createdDateTime;
    public int lastModifiedByUserId;
    public String lastModifiedDateTime;
    public int itemId;

    public ViewPriceAgreementProductInfo() {
    }

    public ViewPriceAgreementProductInfo(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("PriceAgreementCode")) {
            Object obj = soapObject.getProperty("PriceAgreementCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                priceAgreementCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                priceAgreementCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("PriceAgreementDescription")) {
            Object obj = soapObject.getProperty("PriceAgreementDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                priceAgreementDescription = j.toString();
            } else if (obj != null && obj instanceof String) {
                priceAgreementDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("ProductNumber")) {
            Object obj = soapObject.getProperty("ProductNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ProductDescription")) {
            Object obj = soapObject.getProperty("ProductDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productDescription = j.toString();
            } else if (obj != null && obj instanceof String) {
                productDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("PriceType")) {
            Object obj = soapObject.getProperty("PriceType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                priceType = WS_Enums.CustomerPriceType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("PriceAgreementId")) {
            Object obj = soapObject.getProperty("PriceAgreementId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                priceAgreementId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                priceAgreementId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ProductId")) {
            Object obj = soapObject.getProperty("ProductId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("GrossPrice")) {
            Object obj = soapObject.getProperty("GrossPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                grossPrice = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                grossPrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("Percentage")) {
            Object obj = soapObject.getProperty("Percentage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                percentage = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                percentage = (Double) obj;
            }
        }
        if (soapObject.hasProperty("AllowDiscounts")) {
            Object obj = soapObject.getProperty("AllowDiscounts");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                allowDiscounts = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                allowDiscounts = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("OrganizationId")) {
            Object obj = soapObject.getProperty("OrganizationId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                organizationId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                organizationId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CompanyId")) {
            Object obj = soapObject.getProperty("CompanyId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                companyId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                companyId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedByUserId")) {
            Object obj = soapObject.getProperty("CreatedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                createdByUserId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                createdByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedDateTime")) {
            Object obj = soapObject.getProperty("CreatedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                createdDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                createdDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedByUserId")) {
            Object obj = soapObject.getProperty("LastModifiedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastModifiedByUserId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                lastModifiedByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedDateTime")) {
            Object obj = soapObject.getProperty("LastModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastModifiedDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastModifiedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ItemId")) {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                itemId = (Integer) obj;
            }
        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return priceAgreementCode;
            case 1:
                return priceAgreementDescription;
            case 2:
                return productNumber;
            case 3:
                return productDescription;
            case 4:
                return priceType.toString();
            case 5:
                return priceAgreementId;
            case 6:
                return productId;
            case 7:
                return grossPrice;
            case 8:
                return percentage;
            case 9:
                return allowDiscounts;
            case 10:
                return organizationId;
            case 11:
                return companyId;
            case 12:
                return createdByUserId;
            case 13:
                return createdDateTime;
            case 14:
                return lastModifiedByUserId;
            case 15:
                return lastModifiedDateTime;
            case 16:
                return itemId;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 17;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PriceAgreementCode";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PriceAgreementDescription";
                break;
            case 2:
                info.type = Long.class;
                info.name = "ProductNumber";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ProductDescription";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PriceType";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PriceAgreementId";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductId";
                break;
            case 7:
                info.type = Double.class;
                info.name = "GrossPrice";
                break;
            case 8:
                info.type = Double.class;
                info.name = "Percentage";
                break;
            case 9:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AllowDiscounts";
                break;
            case 10:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "OrganizationId";
                break;
            case 11:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;
            case 12:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 14:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;
            case 16:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
