package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/17/2017 7:04:46 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.lang.*;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ViewPhoneNumberInfo implements KvmSerializable {
    
    public String customerContactFullName;
    public String customerContactJobTitle;
    public String phoneTypeDescription;
    public int customerId;
    public int customerContactId;
    public String description;
    public int phoneTypeId;
    public boolean isSecret;
    public int followupNumber;
    public String searchPhoneNumber;
    public int countryCode;
    public int nationalPrefix;
    public String areaCode;
    public String phoneNumber;
    public int countryId;
    public String formattedPhoneNumber;
    public int organizationId;
    public int companyId;
    public int createdByUserId;
    public String createdDateTime;
    public int lastModifiedByUserId;
    public String lastModifiedDateTime;
    public int itemId;
    
    public ViewPhoneNumberInfo(){}
    
    public ViewPhoneNumberInfo(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("CustomerContactFullName"))
        {
            Object obj = soapObject.getProperty("CustomerContactFullName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                customerContactFullName = j.toString();
            }else if (obj!= null && obj instanceof String){
                customerContactFullName = (String) obj;
            }
        }
        if (soapObject.hasProperty("CustomerContactJobTitle"))
        {
            Object obj = soapObject.getProperty("CustomerContactJobTitle");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                customerContactJobTitle = j.toString();
            }else if (obj!= null && obj instanceof String){
                customerContactJobTitle = (String) obj;
            }
        }
        if (soapObject.hasProperty("PhoneTypeDescription"))
        {
            Object obj = soapObject.getProperty("PhoneTypeDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                phoneTypeDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                phoneTypeDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("CustomerId"))
        {
            Object obj = soapObject.getProperty("CustomerId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                customerId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                customerId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CustomerContactId"))
        {
            Object obj = soapObject.getProperty("CustomerContactId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                customerContactId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                customerContactId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Description"))
        {
            Object obj = soapObject.getProperty("Description");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                description = j.toString();
            }else if (obj!= null && obj instanceof String){
                description = (String) obj;
            }
        }
        if (soapObject.hasProperty("PhoneTypeId"))
        {
            Object obj = soapObject.getProperty("PhoneTypeId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                phoneTypeId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                phoneTypeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IsSecret"))
        {
            Object obj = soapObject.getProperty("IsSecret");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                isSecret = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                isSecret = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("FollowupNumber"))
        {
            Object obj = soapObject.getProperty("FollowupNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                followupNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                followupNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SearchPhoneNumber"))
        {
            Object obj = soapObject.getProperty("SearchPhoneNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                searchPhoneNumber = j.toString();
            }else if (obj!= null && obj instanceof String){
                searchPhoneNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("CountryCode"))
        {
            Object obj = soapObject.getProperty("CountryCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                countryCode = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                countryCode = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("NationalPrefix"))
        {
            Object obj = soapObject.getProperty("NationalPrefix");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                nationalPrefix = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                nationalPrefix = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AreaCode"))
        {
            Object obj = soapObject.getProperty("AreaCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                areaCode = j.toString();
            }else if (obj!= null && obj instanceof String){
                areaCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("PhoneNumber"))
        {
            Object obj = soapObject.getProperty("PhoneNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                phoneNumber = j.toString();
            }else if (obj!= null && obj instanceof String){
                phoneNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("CountryId"))
        {
            Object obj = soapObject.getProperty("CountryId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                countryId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                countryId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("FormattedPhoneNumber"))
        {
            Object obj = soapObject.getProperty("FormattedPhoneNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                formattedPhoneNumber = j.toString();
            }else if (obj!= null && obj instanceof String){
                formattedPhoneNumber = (String) obj;
            }
        }
        if (soapObject.hasProperty("OrganizationId"))
        {
            Object obj = soapObject.getProperty("OrganizationId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                organizationId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                organizationId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CompanyId"))
        {
            Object obj = soapObject.getProperty("CompanyId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                companyId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                companyId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedByUserId"))
        {
            Object obj = soapObject.getProperty("CreatedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                createdByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedDateTime"))
        {
            Object obj = soapObject.getProperty("CreatedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                createdDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedByUserId"))
        {
            Object obj = soapObject.getProperty("LastModifiedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                lastModifiedByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedDateTime"))
        {
            Object obj = soapObject.getProperty("LastModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                lastModifiedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ItemId"))
        {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                itemId = (Integer) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return customerContactFullName;
            case 1:
                return customerContactJobTitle;
            case 2:
                return phoneTypeDescription;
            case 3:
                return customerId;
            case 4:
                return customerContactId;
            case 5:
                return description;
            case 6:
                return phoneTypeId;
            case 7:
                return isSecret;
            case 8:
                return followupNumber;
            case 9:
                return searchPhoneNumber;
            case 10:
                return countryCode;
            case 11:
                return nationalPrefix;
            case 12:
                return areaCode;
            case 13:
                return phoneNumber;
            case 14:
                return countryId;
            case 15:
                return formattedPhoneNumber;
            case 16:
                return organizationId;
            case 17:
                return companyId;
            case 18:
                return createdByUserId;
            case 19:
                return createdDateTime;
            case 20:
                return lastModifiedByUserId;
            case 21:
                return lastModifiedDateTime;
            case 22:
                return itemId;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 23;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CustomerContactFullName";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CustomerContactJobTitle";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PhoneTypeDescription";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CustomerId";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CustomerContactId";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Description";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PhoneTypeId";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsSecret";
                break;
            case 8:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "FollowupNumber";
                break;
            case 9:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SearchPhoneNumber";
                break;
            case 10:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CountryCode";
                break;
            case 11:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "NationalPrefix";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AreaCode";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PhoneNumber";
                break;
            case 14:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CountryId";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FormattedPhoneNumber";
                break;
            case 16:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "OrganizationId";
                break;
            case 17:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;
            case 18:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 19:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 20:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 21:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;
            case 22:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
        }
    }
    
//    @Override //    public String getInnerText() { //        return null; //    } // // //    @Override //    public void setInnerText(String s) { //    }
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
