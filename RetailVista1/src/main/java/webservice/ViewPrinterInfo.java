package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 9/8/2017 11:59:10 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ViewPrinterInfo implements KvmSerializable {
    
    public int storeNumber;
    public String thermalPrinterLanguageDescription;
    public String storeDescription;
    public int companyNumber;
    public String extendedDescription;
    public int storeId;
    public WS_Enums.PrinterOutputType printerOutputType;
    public String description;
    public WS_Enums.ThermalPrinterDestinationType destinationType;
    public int receiptPrinterId;
    public int thermalPrinterLanguageId;
    public String windowsPrinterName;
    public String computerName;
    public String ipAddress;
    public int tcpPort;
    public String queueName;
    public boolean amountCommandSupport;
    public int companyId;
    public int createdByUserId;
    public String createdDateTime;
    public int lastModifiedByUserId;
    public String lastModifiedDateTime;
    public int itemId;
    
    public ViewPrinterInfo(){}
    
    public ViewPrinterInfo(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("StoreNumber"))
        {
            Object obj = soapObject.getProperty("StoreNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                storeNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                storeNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ThermalPrinterLanguageDescription"))
        {
            Object obj = soapObject.getProperty("ThermalPrinterLanguageDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                thermalPrinterLanguageDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                thermalPrinterLanguageDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("StoreDescription"))
        {
            Object obj = soapObject.getProperty("StoreDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                storeDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                storeDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("CompanyNumber"))
        {
            Object obj = soapObject.getProperty("CompanyNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                companyNumber = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                companyNumber = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ExtendedDescription"))
        {
            Object obj = soapObject.getProperty("ExtendedDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                extendedDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                extendedDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("StoreId"))
        {
            Object obj = soapObject.getProperty("StoreId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                storeId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                storeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("PrinterOutputType"))
        {
            Object obj = soapObject.getProperty("PrinterOutputType");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                printerOutputType = WS_Enums.PrinterOutputType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("Description"))
        {
            Object obj = soapObject.getProperty("Description");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                description = j.toString();
            }else if (obj!= null && obj instanceof String){
                description = (String) obj;
            }
        }
        if (soapObject.hasProperty("DestinationType"))
        {
            Object obj = soapObject.getProperty("DestinationType");
            if (obj!= null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive)obj;
                destinationType = WS_Enums.ThermalPrinterDestinationType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("ReceiptPrinterId"))
        {
            Object obj = soapObject.getProperty("ReceiptPrinterId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                receiptPrinterId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                receiptPrinterId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ThermalPrinterLanguageId"))
        {
            Object obj = soapObject.getProperty("ThermalPrinterLanguageId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                thermalPrinterLanguageId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                thermalPrinterLanguageId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("WindowsPrinterName"))
        {
            Object obj = soapObject.getProperty("WindowsPrinterName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                windowsPrinterName = j.toString();
            }else if (obj!= null && obj instanceof String){
                windowsPrinterName = (String) obj;
            }
        }
        if (soapObject.hasProperty("ComputerName"))
        {
            Object obj = soapObject.getProperty("ComputerName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                computerName = j.toString();
            }else if (obj!= null && obj instanceof String){
                computerName = (String) obj;
            }
        }
        if (soapObject.hasProperty("IpAddress"))
        {
            Object obj = soapObject.getProperty("IpAddress");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                ipAddress = j.toString();
            }else if (obj!= null && obj instanceof String){
                ipAddress = (String) obj;
            }
        }
        if (soapObject.hasProperty("TcpPort"))
        {
            Object obj = soapObject.getProperty("TcpPort");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                tcpPort = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                tcpPort = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("QueueName"))
        {
            Object obj = soapObject.getProperty("QueueName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                queueName = j.toString();
            }else if (obj!= null && obj instanceof String){
                queueName = (String) obj;
            }
        }
        if (soapObject.hasProperty("AmountCommandSupport"))
        {
            Object obj = soapObject.getProperty("AmountCommandSupport");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                amountCommandSupport = Boolean.parseBoolean(j.toString());
            }else if (obj!= null && obj instanceof Boolean){
                amountCommandSupport = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("CompanyId"))
        {
            Object obj = soapObject.getProperty("CompanyId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                companyId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                companyId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedByUserId"))
        {
            Object obj = soapObject.getProperty("CreatedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                createdByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedDateTime"))
        {
            Object obj = soapObject.getProperty("CreatedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                createdDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                createdDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedByUserId"))
        {
            Object obj = soapObject.getProperty("LastModifiedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedByUserId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                lastModifiedByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedDateTime"))
        {
            Object obj = soapObject.getProperty("LastModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                lastModifiedDateTime = j.toString();
            }else if (obj!= null && obj instanceof String){
                lastModifiedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ItemId"))
        {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                itemId = (Integer) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return storeNumber;
            case 1:
                return thermalPrinterLanguageDescription;
            case 2:
                return storeDescription;
            case 3:
                return companyNumber;
            case 4:
                return extendedDescription;
            case 5:
                return storeId;
            case 6:
                return printerOutputType.toString();
            case 7:
                return description;
            case 8:
                return destinationType.toString();
            case 9:
                return receiptPrinterId;
            case 10:
                return thermalPrinterLanguageId;
            case 11:
                return windowsPrinterName;
            case 12:
                return computerName;
            case 13:
                return ipAddress;
            case 14:
                return tcpPort;
            case 15:
                return queueName;
            case 16:
                return amountCommandSupport;
            case 17:
                return companyId;
            case 18:
                return createdByUserId;
            case 19:
                return createdDateTime;
            case 20:
                return lastModifiedByUserId;
            case 21:
                return lastModifiedDateTime;
            case 22:
                return itemId;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 23;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreNumber";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ThermalPrinterLanguageDescription";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "StoreDescription";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyNumber";
                break;
            case 4:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExtendedDescription";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "StoreId";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PrinterOutputType";
                break;
            case 7:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Description";
                break;
            case 8:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DestinationType";
                break;
            case 9:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ReceiptPrinterId";
                break;
            case 10:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ThermalPrinterLanguageId";
                break;
            case 11:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "WindowsPrinterName";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ComputerName";
                break;
            case 13:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "IpAddress";
                break;
            case 14:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "TcpPort";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "QueueName";
                break;
            case 16:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AmountCommandSupport";
                break;
            case 17:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;
            case 18:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 19:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 20:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 21:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;
            case 22:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
        }
    }
    
    //    @Override
//    public String getInnerText() {
//        return null;
//    }
//
//
//    @Override
//    public void setInnerText(String s) {
//    }
    
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
