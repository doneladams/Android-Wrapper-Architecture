package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/16/2017 5:54:08 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class ViewBrandInfo implements KvmSerializable {

    public String seasonProfileDescription;
    public String code;
    public String externalCode;
    public long gs1Code;
    public long gs1ExportCode;
    public String description;
    public int labelClassIdField;
    public boolean ignoreAutoStockValues;
    public boolean autoStockCalculate;
    public int autoStockDefaultMinStockDays;
    public int autoStockDefaultMaxStockDays;
    public int autoStockDefaultSaleDays;
    public int autoStockMinStockPercentage;
    public int autoStockMaxStockPercentage;
    public int seasonProfileId;
    public boolean isCancelled;
    public boolean printLabel;
    public boolean maintainStock;
    public boolean allowSavings;
    public boolean allowDiscounts;
    public boolean isDerived;
    public int organizationId;
    public int companyId;
    public int createdByUserId;
    public String createdDateTime;
    public int lastModifiedByUserId;
    public String lastModifiedDateTime;
    public int itemId;
    public boolean isSelected;

    public ViewBrandInfo() {
    }

    public ViewBrandInfo(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("SeasonProfileDescription")) {
            Object obj = soapObject.getProperty("SeasonProfileDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                seasonProfileDescription = j.toString();
            } else if (obj != null && obj instanceof String) {
                seasonProfileDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("Code")) {
            Object obj = soapObject.getProperty("Code");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                code = j.toString();
            } else if (obj != null && obj instanceof String) {
                code = (String) obj;
            }
        }
        if (soapObject.hasProperty("ExternalCode")) {
            Object obj = soapObject.getProperty("ExternalCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                externalCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                externalCode = (String) obj;
            }
        }
        if (soapObject.hasProperty("Gs1Code")) {
            Object obj = soapObject.getProperty("Gs1Code");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                gs1Code = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                gs1Code = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Gs1ExportCode")) {
            Object obj = soapObject.getProperty("Gs1ExportCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                gs1ExportCode = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                gs1ExportCode = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Description")) {
            Object obj = soapObject.getProperty("Description");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                description = j.toString();
            } else if (obj != null && obj instanceof String) {
                description = (String) obj;
            }
        }
        if (soapObject.hasProperty("LabelClassId")) {
            Object obj = soapObject.getProperty("LabelClassId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                labelClassIdField = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                labelClassIdField = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IgnoreAutoStockValues")) {
            Object obj = soapObject.getProperty("IgnoreAutoStockValues");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                ignoreAutoStockValues = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                ignoreAutoStockValues = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockCalculate")) {
            Object obj = soapObject.getProperty("AutoStockCalculate");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                autoStockCalculate = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                autoStockCalculate = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockDefaultMinStockDays")) {
            Object obj = soapObject.getProperty("AutoStockDefaultMinStockDays");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                autoStockDefaultMinStockDays = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                autoStockDefaultMinStockDays = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockDefaultMaxStockDays")) {
            Object obj = soapObject.getProperty("AutoStockDefaultMaxStockDays");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                autoStockDefaultMaxStockDays = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                autoStockDefaultMaxStockDays = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockDefaultSaleDays")) {
            Object obj = soapObject.getProperty("AutoStockDefaultSaleDays");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                autoStockDefaultSaleDays = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                autoStockDefaultSaleDays = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockMinStockPercentage")) {
            Object obj = soapObject.getProperty("AutoStockMinStockPercentage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                autoStockMinStockPercentage = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                autoStockMinStockPercentage = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AutoStockMaxStockPercentage")) {
            Object obj = soapObject.getProperty("AutoStockMaxStockPercentage");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                autoStockMaxStockPercentage = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                autoStockMaxStockPercentage = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SeasonProfileId")) {
            Object obj = soapObject.getProperty("SeasonProfileId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                seasonProfileId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                seasonProfileId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("IsCancelled")) {
            Object obj = soapObject.getProperty("IsCancelled");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isCancelled = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isCancelled = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("PrintLabel")) {
            Object obj = soapObject.getProperty("PrintLabel");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                printLabel = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                printLabel = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("MaintainStock")) {
            Object obj = soapObject.getProperty("MaintainStock");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                maintainStock = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                maintainStock = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("AllowSavings")) {
            Object obj = soapObject.getProperty("AllowSavings");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                allowSavings = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                allowSavings = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("AllowDiscounts")) {
            Object obj = soapObject.getProperty("AllowDiscounts");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                allowDiscounts = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                allowDiscounts = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsDerived")) {
            Object obj = soapObject.getProperty("IsDerived");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isDerived = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isDerived = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("OrganizationId")) {
            Object obj = soapObject.getProperty("OrganizationId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                organizationId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                organizationId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CompanyId")) {
            Object obj = soapObject.getProperty("CompanyId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                companyId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                companyId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedByUserId")) {
            Object obj = soapObject.getProperty("CreatedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                createdByUserId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                createdByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedDateTime")) {
            Object obj = soapObject.getProperty("CreatedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                createdDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                createdDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedByUserId")) {
            Object obj = soapObject.getProperty("LastModifiedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastModifiedByUserId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                lastModifiedByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedDateTime")) {
            Object obj = soapObject.getProperty("LastModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastModifiedDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastModifiedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ItemId")) {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                itemId = (Integer) obj;
            }
        }
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return seasonProfileDescription;
            case 1:
                return code;
            case 2:
                return externalCode;
            case 3:
                return gs1Code;
            case 4:
                return gs1ExportCode;
            case 5:
                return description;
            case 6:
                return labelClassIdField;
            case 7:
                return ignoreAutoStockValues;
            case 8:
                return autoStockCalculate;
            case 9:
                return autoStockDefaultMinStockDays;
            case 10:
                return autoStockDefaultMaxStockDays;
            case 11:
                return autoStockDefaultSaleDays;
            case 12:
                return autoStockMinStockPercentage;
            case 13:
                return autoStockMaxStockPercentage;
            case 14:
                return seasonProfileId;
            case 15:
                return isCancelled;
            case 16:
                return printLabel;
            case 17:
                return maintainStock;
            case 18:
                return allowSavings;
            case 19:
                return allowDiscounts;
            case 20:
                return isDerived;
            case 21:
                return organizationId;
            case 22:
                return companyId;
            case 23:
                return createdByUserId;
            case 24:
                return createdDateTime;
            case 25:
                return lastModifiedByUserId;
            case 26:
                return lastModifiedDateTime;
            case 27:
                return itemId;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 28;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SeasonProfileDescription";
                break;
            case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Code";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExternalCode";
                break;
            case 3:
                info.type = Long.class;
                info.name = "Gs1Code";
                break;
            case 4:
                info.type = Long.class;
                info.name = "Gs1ExportCode";
                break;
            case 5:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Description";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LabelClassId";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IgnoreAutoStockValues";
                break;
            case 8:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AutoStockCalculate";
                break;
            case 9:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AutoStockDefaultMinStockDays";
                break;
            case 10:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AutoStockDefaultMaxStockDays";
                break;
            case 11:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AutoStockDefaultSaleDays";
                break;
            case 12:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AutoStockMinStockPercentage";
                break;
            case 13:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AutoStockMaxStockPercentage";
                break;
            case 14:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SeasonProfileId";
                break;
            case 15:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsCancelled";
                break;
            case 16:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PrintLabel";
                break;
            case 17:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "MaintainStock";
                break;
            case 18:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AllowSavings";
                break;
            case 19:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "AllowDiscounts";
                break;
            case 20:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsDerived";
                break;
            case 21:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "OrganizationId";
                break;
            case 22:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;
            case 23:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 24:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 25:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 26:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;
            case 27:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
        }
    }


    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
