package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/11/2017 5:10:09 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.lang.*;
import java.util.Hashtable;

import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class ProductInfo implements KvmSerializable {
    public long mainBarcode;
    public int brandId;
    public double consumerUnitToSaleUnitFactor;
    public String description;
    public int productCategoryId;
    public int articleGroupId;
    public int assortmentId;
    public int classificationLevel1IdField;
    public int classificationLevel2IdField;
    public int classificationLevel3IdField;
    public int classificationLevel4IdField;
    public int classificationLevel5IdField;
    public int itemId;
    public String note1;
    public String note2;
    public String note3;
    public String note4;
    public double defaultSaleAmount;
    public boolean isProductGroup;
    public boolean isConsignmentProduct;
    public boolean isScaleIntegration;
    public boolean isKitchenArticle;
    public boolean isCancelled;
    public boolean isTrackAndTraceProduct;
    public int saleUnitPackageIdField;
    public String exchangeRemarks;
    public double grossPrice;
    public boolean isAllowPriceModification;
    public boolean isSale;
    public boolean isAllowMultiplePricing;
    public int sizeIsoDimensionIdArticle;
    public double heightArticle;
    public double widthArticle;
    public double depthArticle;
    public WS_Enums.MarkingCodeType markingCodeType;
    public boolean isAllowDiscountPercentageModification;
    public boolean isNoDiscountOnDiscount;
    public boolean isIncludeInStockValue;
    public String cbsCode;
    public int barcodeTypeId;
    public String lastExchangeDateTime;
    public double advicePrice;
    public String alternateDescription;
    public String externalCode;
    public boolean isNoDiscounts;
    public boolean isNoMixedMatchDiscount;
    public boolean isNoDiscountAgreementDiscount;
    public boolean isNoSavings;
    public boolean isAskForPriceInPos;
    public boolean isAskForAmountInPos;
    public boolean isAskForDescriptionInPos;
    public boolean isPriceZeroAllowed;
    public boolean isSerialAdministration;
    public boolean printLabel;
    public boolean isGiftCard;

    /*

    public int oldItemId;
    public int organizationId;
    public long productNumber;


    public int saleLedgerId;
    public boolean isDerived;
    public int replacementProductId;



    public int sizeTypeId;
    public int sizeId;
    public int colorId;
    public int warrantyId;
    public int transportClassIdField;
    public int labelClassIdField;
    public int locationClassIdField;

    public int subBrandId;
    public int posMessageId;
    public int disposalFeeId;
    public int productCombinationGroupId;

    public int companyId;


    public int saleUnitDimensionId;


    public String posDescription;
    public String formattedDescription;

    public int externalProductId;

    public String information;


    public int plu;
    public int followupNumber;
    public int preferredSupplierId;

    public int freeTableId;
    public String searchText;

    public double lengthArticle;


    public int sizeIsoDimensionIdPackageField;
    public double lengthPackageField;
    public double heightPackageField;
    public double widthPackageField;
    public double depthPackageField;
    public int contentIsoDimensionId;
    public int contentIsoPackageIdField;
    public double netContent;
    public int weightIsoDimensionId;
    public double netWeight;
    public double grossWeight;
    public String allowanceCode;
    public double allowanceAmount;





    public boolean isNoQuantityPriceBreakDiscount;



    public String storageLocation;
    public WS_Enums.RelatedProductsType relatedProductsType;
    public int parentProductId;

    public int giftCardTypeId;
    public boolean isCollection;

    public boolean isPriceBlocked;
    public int createdByUserId;
    public String createdDateTime;
    public int lastModifiedByUserId;
    public String lastModifiedDateTime;
*/


    public ProductInfo() {
    }

    public ProductInfo(SoapObject soapObject) {
        if (soapObject == null)
            return;
//        if (soapObject.hasProperty("OldItemId")) {
//            java.lang.Object obj = soapObject.getProperty("OldItemId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                oldItemId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                oldItemId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("OrganizationId")) {
//            java.lang.Object obj = soapObject.getProperty("OrganizationId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                organizationId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                organizationId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("ProductNumber")) {
//            java.lang.Object obj = soapObject.getProperty("ProductNumber");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                productNumber = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                productNumber = (Integer) obj;
//            }
//        }
        if (soapObject.hasProperty("MainBarcode")) {
            java.lang.Object obj = soapObject.getProperty("MainBarcode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                mainBarcode = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                mainBarcode = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("BarcodeTypeId")) {
            java.lang.Object obj = soapObject.getProperty("BarcodeTypeId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                barcodeTypeId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                barcodeTypeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastExchangeDateTime")) {
            java.lang.Object obj = soapObject.getProperty("LastExchangeDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastExchangeDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastExchangeDateTime = (String) obj;
            }
        }
//        if (soapObject.hasProperty("SaleLedgerId")) {
//            java.lang.Object obj = soapObject.getProperty("SaleLedgerId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                saleLedgerId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                saleLedgerId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("IsDerived")) {
//            java.lang.Object obj = soapObject.getProperty("IsDerived");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                isDerived = Boolean.parseBoolean(j.toString());
//            } else if (obj != null && obj instanceof Boolean) {
//                isDerived = (Boolean) obj;
//            }
//        }
//        if (soapObject.hasProperty("ReplacementProductId")) {
//            java.lang.Object obj = soapObject.getProperty("ReplacementProductId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                replacementProductId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                replacementProductId = (Integer) obj;
//            }
//        }
        if (soapObject.hasProperty("AdvicePrice")) {
            java.lang.Object obj = soapObject.getProperty("AdvicePrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                advicePrice = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                advicePrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("ArticleGroupId")) {
            java.lang.Object obj = soapObject.getProperty("ArticleGroupId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                articleGroupId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                articleGroupId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("AssortmentId")) {
            java.lang.Object obj = soapObject.getProperty("AssortmentId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                assortmentId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                assortmentId = (Integer) obj;
            }
        }
//        if (soapObject.hasProperty("SizeTypeId")) {
//            java.lang.Object obj = soapObject.getProperty("SizeTypeId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                sizeTypeId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                sizeTypeId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("SizeId")) {
//            java.lang.Object obj = soapObject.getProperty("SizeId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                sizeId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                sizeId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("ColorId")) {
//            java.lang.Object obj = soapObject.getProperty("ColorId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                colorId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                colorId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("WarrantyId")) {
//            java.lang.Object obj = soapObject.getProperty("WarrantyId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                warrantyId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                warrantyId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("TransportClassId")) {
//            java.lang.Object obj = soapObject.getProperty("TransportClassId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                transportClassIdField = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                transportClassIdField = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("LabelClassId")) {
//            java.lang.Object obj = soapObject.getProperty("LabelClassId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                labelClassIdField = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                labelClassIdField = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("LocationClassId")) {
//            java.lang.Object obj = soapObject.getProperty("LocationClassId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                locationClassIdField = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                locationClassIdField = (Integer) obj;
//            }
//        }
        if (soapObject.hasProperty("BrandId")) {
            java.lang.Object obj = soapObject.getProperty("BrandId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                brandId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                brandId = (Integer) obj;
            }
        }
//        if (soapObject.hasProperty("SubBrandId")) {
//            java.lang.Object obj = soapObject.getProperty("SubBrandId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                subBrandId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                subBrandId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("PosMessageId")) {
//            java.lang.Object obj = soapObject.getProperty("PosMessageId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                posMessageId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                posMessageId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("DisposalFeeId")) {
//            java.lang.Object obj = soapObject.getProperty("DisposalFeeId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                disposalFeeId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                disposalFeeId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("ProductCombinationGroupId")) {
//            java.lang.Object obj = soapObject.getProperty("ProductCombinationGroupId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                productCombinationGroupId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                productCombinationGroupId = (Integer) obj;
//            }
//        }
        if (soapObject.hasProperty("ClassificationLevel1Id")) {
            java.lang.Object obj = soapObject.getProperty("ClassificationLevel1Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                classificationLevel1IdField = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                classificationLevel1IdField = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ClassificationLevel2Id")) {
            java.lang.Object obj = soapObject.getProperty("ClassificationLevel2Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                classificationLevel2IdField = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                classificationLevel2IdField = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ClassificationLevel3Id")) {
            java.lang.Object obj = soapObject.getProperty("ClassificationLevel3Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                classificationLevel3IdField = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                classificationLevel3IdField = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ClassificationLevel4Id")) {
            java.lang.Object obj = soapObject.getProperty("ClassificationLevel4Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                classificationLevel4IdField = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                classificationLevel4IdField = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ClassificationLevel5Id")) {
            java.lang.Object obj = soapObject.getProperty("ClassificationLevel5Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                classificationLevel5IdField = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                classificationLevel5IdField = (Integer) obj;
            }
        }
//        if (soapObject.hasProperty("CompanyId")) {
//            java.lang.Object obj = soapObject.getProperty("CompanyId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                companyId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                companyId = (Integer) obj;
//            }
//        }
        if (soapObject.hasProperty("DefaultSaleAmount")) {
            java.lang.Object obj = soapObject.getProperty("DefaultSaleAmount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                defaultSaleAmount = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                defaultSaleAmount = (Double) obj;
            }
        }
        if (soapObject.hasProperty("ConsumerUnitToSaleUnitFactor")) {
            java.lang.Object obj = soapObject.getProperty("ConsumerUnitToSaleUnitFactor");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                consumerUnitToSaleUnitFactor = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                consumerUnitToSaleUnitFactor = (Double) obj;
            }
        }
//        if (soapObject.hasProperty("SaleUnitDimensionId")) {
//            java.lang.Object obj = soapObject.getProperty("SaleUnitDimensionId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                saleUnitDimensionId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                saleUnitDimensionId = (Integer) obj;
//            }
//        }
        if (soapObject.hasProperty("SaleUnitPackageId")) {
            java.lang.Object obj = soapObject.getProperty("SaleUnitPackageId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                saleUnitPackageIdField = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                saleUnitPackageIdField = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Description")) {
            java.lang.Object obj = soapObject.getProperty("Description");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                description = j.toString();
            } else if (obj != null && obj instanceof String) {
                description = (String) obj;
            }
        }
        if (soapObject.hasProperty("AlternateDescription")) {
            java.lang.Object obj = soapObject.getProperty("AlternateDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                alternateDescription = j.toString();
            } else if (obj != null && obj instanceof String) {
                alternateDescription = (String) obj;
            }
        }
//        if (soapObject.hasProperty("PosDescription")) {
//            java.lang.Object obj = soapObject.getProperty("PosDescription");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                posDescription = j.toString();
//            } else if (obj != null && obj instanceof String) {
//                posDescription = (String) obj;
//            }
//        }
//        if (soapObject.hasProperty("FormattedDescription")) {
//            java.lang.Object obj = soapObject.getProperty("FormattedDescription");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                formattedDescription = j.toString();
//            } else if (obj != null && obj instanceof String) {
//                formattedDescription = (String) obj;
//            }
        //       }
        if (soapObject.hasProperty("ExchangeRemarks")) {
            java.lang.Object obj = soapObject.getProperty("ExchangeRemarks");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                exchangeRemarks = j.toString();
            } else if (obj != null && obj instanceof String) {
                exchangeRemarks = (String) obj;
            }
        }
        if (soapObject.hasProperty("ExternalCode")) {
            java.lang.Object obj = soapObject.getProperty("ExternalCode");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                externalCode = j.toString();
            } else if (obj != null && obj instanceof String) {
                externalCode = (String) obj;
            }
        }
//        if (soapObject.hasProperty("ExternalProductId")) {
//            java.lang.Object obj = soapObject.getProperty("ExternalProductId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                externalProductId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                externalProductId = (Integer) obj;
//            }
//        }
        if (soapObject.hasProperty("GrossPrice")) {
            java.lang.Object obj = soapObject.getProperty("GrossPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                grossPrice = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                grossPrice = (Double) obj;
            }
        }
//        if (soapObject.hasProperty("Information")) {
//            java.lang.Object obj = soapObject.getProperty("Information");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                information = j.toString();
//            } else if (obj != null && obj instanceof String) {
//                information = (String) obj;
//            }
//        }
        if (soapObject.hasProperty("IsAllowMultiplePricing")) {
            java.lang.Object obj = soapObject.getProperty("IsAllowMultiplePricing");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isAllowMultiplePricing = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isAllowMultiplePricing = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsAllowPriceModification")) {
            java.lang.Object obj = soapObject.getProperty("IsAllowPriceModification");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isAllowPriceModification = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isAllowPriceModification = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsSale")) {
            java.lang.Object obj = soapObject.getProperty("IsSale");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isSale = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isSale = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsProductGroup")) {
            java.lang.Object obj = soapObject.getProperty("IsProductGroup");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isProductGroup = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isProductGroup = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsConsignmentProduct")) {
            java.lang.Object obj = soapObject.getProperty("IsConsignmentProduct");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isConsignmentProduct = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isConsignmentProduct = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsScaleIntegration")) {
            java.lang.Object obj = soapObject.getProperty("IsScaleIntegration");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isScaleIntegration = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isScaleIntegration = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsKitchenArticle")) {
            java.lang.Object obj = soapObject.getProperty("IsKitchenArticle");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isKitchenArticle = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isKitchenArticle = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsCancelled")) {
            java.lang.Object obj = soapObject.getProperty("IsCancelled");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isCancelled = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isCancelled = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsTrackAndTraceProduct")) {
            java.lang.Object obj = soapObject.getProperty("IsTrackAndTraceProduct");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isTrackAndTraceProduct = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isTrackAndTraceProduct = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("Note1")) {
            java.lang.Object obj = soapObject.getProperty("Note1");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                note1 = j.toString();
            } else if (obj != null && obj instanceof String) {
                note1 = (String) obj;
            }
        }
        if (soapObject.hasProperty("Note2")) {
            java.lang.Object obj = soapObject.getProperty("Note2");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                note2 = j.toString();
            } else if (obj != null && obj instanceof String) {
                note2 = (String) obj;
            }
        }
        if (soapObject.hasProperty("Note3")) {
            java.lang.Object obj = soapObject.getProperty("Note3");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                note3 = j.toString();
            } else if (obj != null && obj instanceof String) {
                note3 = (String) obj;
            }
        }
        if (soapObject.hasProperty("Note4")) {
            java.lang.Object obj = soapObject.getProperty("Note4");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                note4 = j.toString();
            } else if (obj != null && obj instanceof String) {
                note4 = (String) obj;
            }
        }
//        if (soapObject.hasProperty("Plu")) {
//            java.lang.Object obj = soapObject.getProperty("Plu");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                plu = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                plu = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("FollowupNumber")) {
//            java.lang.Object obj = soapObject.getProperty("FollowupNumber");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                followupNumber = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                followupNumber = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("PreferredSupplierId")) {
//            java.lang.Object obj = soapObject.getProperty("PreferredSupplierId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                preferredSupplierId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                preferredSupplierId = (Integer) obj;
//            }
//        }
        if (soapObject.hasProperty("ProductCategoryId")) {
            java.lang.Object obj = soapObject.getProperty("ProductCategoryId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productCategoryId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productCategoryId = (Integer) obj;
            }
        }
//        if (soapObject.hasProperty("FreeTableId")) {
//            java.lang.Object obj = soapObject.getProperty("FreeTableId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                freeTableId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                freeTableId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("SearchText")) {
//            java.lang.Object obj = soapObject.getProperty("SearchText");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                searchText = j.toString();
//            } else if (obj != null && obj instanceof String) {
//                searchText = (String) obj;
//            }
//        }
        if (soapObject.hasProperty("SizeIsoDimensionIdArticle")) {
            java.lang.Object obj = soapObject.getProperty("SizeIsoDimensionIdArticle");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                sizeIsoDimensionIdArticle = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                sizeIsoDimensionIdArticle = (Integer) obj;
            }
        }
//        if (soapObject.hasProperty("LengthArticle")) {
//            java.lang.Object obj = soapObject.getProperty("LengthArticle");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                lengthArticle = Double.parseDouble(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                lengthArticle = (Double) obj;
//            }
//        }
        if (soapObject.hasProperty("HeightArticle")) {
            java.lang.Object obj = soapObject.getProperty("HeightArticle");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                heightArticle = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                heightArticle = (Double) obj;
            }
        }
        if (soapObject.hasProperty("WidthArticle")) {
            java.lang.Object obj = soapObject.getProperty("WidthArticle");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                widthArticle = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                widthArticle = (Double) obj;
            }
        }
        if (soapObject.hasProperty("DepthArticle")) {
            java.lang.Object obj = soapObject.getProperty("DepthArticle");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                depthArticle = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                depthArticle = (Double) obj;
            }
        }
//        if (soapObject.hasProperty("SizeIsoDimensionIdPackage")) {
//            java.lang.Object obj = soapObject.getProperty("SizeIsoDimensionIdPackage");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                sizeIsoDimensionIdPackageField = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                sizeIsoDimensionIdPackageField = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("LengthPackage")) {
//            java.lang.Object obj = soapObject.getProperty("LengthPackage");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                lengthPackageField = Double.parseDouble(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                lengthPackageField = (Double) obj;
//            }
//        }
//        if (soapObject.hasProperty("HeightPackage")) {
//            java.lang.Object obj = soapObject.getProperty("HeightPackage");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                heightPackageField = Double.parseDouble(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                heightPackageField = (Double) obj;
//            }
//        }
//        if (soapObject.hasProperty("WidthPackage")) {
//            java.lang.Object obj = soapObject.getProperty("WidthPackage");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                widthPackageField = Double.parseDouble(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                widthPackageField = (Double) obj;
//            }
//        }
//        if (soapObject.hasProperty("DepthPackage")) {
//            java.lang.Object obj = soapObject.getProperty("DepthPackage");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                depthPackageField = Double.parseDouble(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                depthPackageField = (Double) obj;
//            }
//        }
//        if (soapObject.hasProperty("ContentIsoDimensionId")) {
//            java.lang.Object obj = soapObject.getProperty("ContentIsoDimensionId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                contentIsoDimensionId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                contentIsoDimensionId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("ContentIsoPackageId")) {
//            java.lang.Object obj = soapObject.getProperty("ContentIsoPackageId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                contentIsoPackageIdField = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                contentIsoPackageIdField = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("NetContent")) {
//            java.lang.Object obj = soapObject.getProperty("NetContent");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                netContent = Double.parseDouble(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                netContent = (Double) obj;
//            }
//        }
//        if (soapObject.hasProperty("WeightIsoDimensionId")) {
//            java.lang.Object obj = soapObject.getProperty("WeightIsoDimensionId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                weightIsoDimensionId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                weightIsoDimensionId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("NetWeight")) {
//            java.lang.Object obj = soapObject.getProperty("NetWeight");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                netWeight = Double.parseDouble(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                netWeight = (Double) obj;
//            }
//        }
//        if (soapObject.hasProperty("GrossWeight")) {
//            java.lang.Object obj = soapObject.getProperty("GrossWeight");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                grossWeight = Double.parseDouble(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                grossWeight = (Double) obj;
//            }
//        }
//        if (soapObject.hasProperty("AllowanceCode")) {
//            java.lang.Object obj = soapObject.getProperty("AllowanceCode");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                allowanceCode = j.toString();
//            } else if (obj != null && obj instanceof String) {
//                allowanceCode = (String) obj;
//            }
//        }
//        if (soapObject.hasProperty("AllowanceAmount")) {
//            java.lang.Object obj = soapObject.getProperty("AllowanceAmount");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                allowanceAmount = Double.parseDouble(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                allowanceAmount = (Double) obj;
//            }
//        }
        if (soapObject.hasProperty("MarkingCodeType")) {
            java.lang.Object obj = soapObject.getProperty("MarkingCodeType");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                markingCodeType = WS_Enums.MarkingCodeType.fromString(j.toString());
            }
        }
        if (soapObject.hasProperty("IsAllowDiscountPercentageModification")) {
            java.lang.Object obj = soapObject.getProperty("IsAllowDiscountPercentageModification");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isAllowDiscountPercentageModification = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isAllowDiscountPercentageModification = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsAskForPriceInPos")) {
            java.lang.Object obj = soapObject.getProperty("IsAskForPriceInPos");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isAskForPriceInPos = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isAskForPriceInPos = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsAskForAmountInPos")) {
            java.lang.Object obj = soapObject.getProperty("isAskForAmountInPos");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isAskForAmountInPos = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isAskForAmountInPos = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsNoDiscountAgreementDiscount")) {
            java.lang.Object obj = soapObject.getProperty("IsNoDiscountAgreementDiscount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isNoDiscountAgreementDiscount = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isNoDiscountAgreementDiscount = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsNoSavings")) {
            java.lang.Object obj = soapObject.getProperty("IsNoSavings");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isNoSavings = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isNoSavings = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsNoDiscounts")) {
            java.lang.Object obj = soapObject.getProperty("IsNoDiscounts");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isNoDiscounts = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isNoDiscounts = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsNoDiscountOnDiscount")) {
            java.lang.Object obj = soapObject.getProperty("IsNoDiscountOnDiscount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isNoDiscountOnDiscount = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isNoDiscountOnDiscount = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsNoMixedMatchDiscount")) {
            java.lang.Object obj = soapObject.getProperty("IsNoMixedMatchDiscount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isNoMixedMatchDiscount = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isNoMixedMatchDiscount = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsPriceZeroAllowed")) {
            java.lang.Object obj = soapObject.getProperty("IsPriceZeroAllowed");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isPriceZeroAllowed = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isPriceZeroAllowed = (Boolean) obj;
            }
        }
//        if (soapObject.hasProperty("IsNoQuantityPriceBreakDiscount")) {
//            java.lang.Object obj = soapObject.getProperty("IsNoQuantityPriceBreakDiscount");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                isNoQuantityPriceBreakDiscount = Boolean.parseBoolean(j.toString());
//            } else if (obj != null && obj instanceof Boolean) {
//                isNoQuantityPriceBreakDiscount = (Boolean) obj;
//            }
//        }
        if (soapObject.hasProperty("IsSerialAdministration")) {
            java.lang.Object obj = soapObject.getProperty("IsSerialAdministration");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isSerialAdministration = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isSerialAdministration = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsAskForDescriptionInPos")) {
            java.lang.Object obj = soapObject.getProperty("IsAskForDescriptionInPos");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isAskForDescriptionInPos = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isAskForDescriptionInPos = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("IsIncludeInStockValue")) {
            java.lang.Object obj = soapObject.getProperty("IsIncludeInStockValue");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isIncludeInStockValue = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isIncludeInStockValue = (Boolean) obj;
            }
        }
//        if (soapObject.hasProperty("StorageLocation")) {
//            java.lang.Object obj = soapObject.getProperty("StorageLocation");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                storageLocation = j.toString();
//            } else if (obj != null && obj instanceof String) {
//                storageLocation = (String) obj;
//            }
//        }
//        if (soapObject.hasProperty("RelatedProductsType")) {
//            java.lang.Object obj = soapObject.getProperty("RelatedProductsType");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                relatedProductsType = WS_Enums.RelatedProductsType.fromString(j.toString());
//            }
//        }
//        if (soapObject.hasProperty("ParentProductId")) {
//            java.lang.Object obj = soapObject.getProperty("ParentProductId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                parentProductId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                parentProductId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("CbsCode")) {
//            java.lang.Object obj = soapObject.getProperty("CbsCode");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                cbsCode = j.toString();
//            } else if (obj != null && obj instanceof String) {
//                cbsCode = (String) obj;
//            }
//        }
        if (soapObject.hasProperty("IsGiftCard")) {
            java.lang.Object obj = soapObject.getProperty("IsGiftCard");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                isGiftCard = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                isGiftCard = (Boolean) obj;
            }
        }
//        if (soapObject.hasProperty("GiftCardTypeId")) {
//            java.lang.Object obj = soapObject.getProperty("GiftCardTypeId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                giftCardTypeId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                giftCardTypeId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("IsCollection")) {
//            java.lang.Object obj = soapObject.getProperty("IsCollection");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                isCollection = Boolean.parseBoolean(j.toString());
//            } else if (obj != null && obj instanceof Boolean) {
//                isCollection = (Boolean) obj;
//            }
//        }
        if (soapObject.hasProperty("PrintLabel")) {
            java.lang.Object obj = soapObject.getProperty("PrintLabel");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                printLabel = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                printLabel = (Boolean) obj;
            }
        }
//        if (soapObject.hasProperty("IsPriceBlocked")) {
//            java.lang.Object obj = soapObject.getProperty("IsPriceBlocked");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                isPriceBlocked = Boolean.parseBoolean(j.toString());
//            } else if (obj != null && obj instanceof Boolean) {
//                isPriceBlocked = (Boolean) obj;
//            }
//        }
//        if (soapObject.hasProperty("CreatedByUserId")) {
//            java.lang.Object obj = soapObject.getProperty("CreatedByUserId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                createdByUserId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                createdByUserId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("CreatedDateTime")) {
//            java.lang.Object obj = soapObject.getProperty("CreatedDateTime");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                createdDateTime = j.toString();
//            } else if (obj != null && obj instanceof String) {
//                createdDateTime = (String) obj;
//            }
//        }
//        if (soapObject.hasProperty("LastModifiedByUserId")) {
//            java.lang.Object obj = soapObject.getProperty("LastModifiedByUserId");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                lastModifiedByUserId = Integer.parseInt(j.toString());
//            } else if (obj != null && obj instanceof Number) {
//                lastModifiedByUserId = (Integer) obj;
//            }
//        }
//        if (soapObject.hasProperty("LastModifiedDateTime")) {
//            java.lang.Object obj = soapObject.getProperty("LastModifiedDateTime");
//            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
//                SoapPrimitive j = (SoapPrimitive) obj;
//                lastModifiedDateTime = j.toString();
//            } else if (obj != null && obj instanceof String) {
//                lastModifiedDateTime = (String) obj;
//            }
//        }
        if (soapObject.hasProperty("ItemId")) {
            java.lang.Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                itemId = (Integer) obj;
            }
        }
    }

    @Override
    public java.lang.Object getProperty(int arg0) {
        switch (arg0) {
//            case 0:
//                return oldItemId;
//            case 1:
//                return organizationId;
//            case 2:
//                return productNumber;
            case 0:
                return mainBarcode;
            case 1:
                return barcodeTypeId;
            case 2:
                return lastExchangeDateTime;
//            case 6:
//                return saleLedgerId;
//            case 7:
//                return isDerived;
//            case 8:
//                return replacementProductId;
            case 3:
                return articleGroupId;
            case 4:
                return assortmentId;
//            case 12:
//                return sizeTypeId;
//            case 13:
//                return sizeId;
//            case 14:
//                return colorId;
//            case 15:
//                return warrantyId;
//            case 16:
//                return transportClassIdField;
//            case 17:
//                return labelClassIdField;
//            case 18:
//                return locationClassIdField;
            case 5:
                return brandId;
//            case 20:
//                return subBrandId;
//            case 21:
//                return posMessageId;
//            case 22:
//                return disposalFeeId;
//            case 23:
//                return productCombinationGroupId;
            case 6:
                return classificationLevel1IdField;
            case 7:
                return classificationLevel2IdField;
            case 8:
                return classificationLevel3IdField;
            case 9:
                return classificationLevel4IdField;
            case 10:
                return classificationLevel5IdField;
//            case 29:
//                return companyId;
            case 11:
                return defaultSaleAmount;
            case 12:
                return consumerUnitToSaleUnitFactor;
//            case 32:
//                return saleUnitDimensionId;
            case 13:
                return saleUnitPackageIdField;
            case 14:
                return description;

//            case 36:
//                return posDescription;
//            case 37:
//                return formattedDescription;
            case 15:
                return exchangeRemarks;

//            case 40:
//                return externalProductId;
            case 16:
                return grossPrice;
//            case 42:
//                return information;
            case 17:
                return isAllowMultiplePricing;
            case 18:
                return isAllowPriceModification;
            case 19:
                return isSale;
            case 20:
                return isProductGroup;
            case 21:
                return isConsignmentProduct;
            case 22:
                return isScaleIntegration;
            case 23:
                return isKitchenArticle;
            case 24:
                return isCancelled;
            case 25:
                return isTrackAndTraceProduct;
            case 26:
                return note1;
            case 27:
                return note2;
            case 28:
                return note3;
            case 29:
                return note4;
//            case 56:
//                return plu;
//            case 57:
//                return followupNumber;
//            case 58:
//                return preferredSupplierId;
            case 30:
                return productCategoryId;
//            case 60:
//                return freeTableId;
//            case 61:
//                return searchText;
            case 31:
                return sizeIsoDimensionIdArticle;
//            case 63:
//                return lengthArticle;
            case 32:
                return heightArticle;
            case 33:
                return widthArticle;
            case 34:
                return depthArticle;
//            case 67:
//                return sizeIsoDimensionIdPackageField;
//            case 68:
//                return lengthPackageField;
//            case 69:
//                return heightPackageField;
//            case 70:
//                return widthPackageField;
//            case 71:
//                return depthPackageField;
//            case 72:
//                return contentIsoDimensionId;
//            case 73:
//                return contentIsoPackageIdField;
//            case 74:
//                return netContent;
//            case 75:
//                return weightIsoDimensionId;
//            case 76:
//                return netWeight;
//            case 77:
//                return grossWeight;
//            case 78:
//                return allowanceCode;
//            case 79:
//                return allowanceAmount;
            case 35:
                return markingCodeType.toString();
            case 36:
                return isAllowDiscountPercentageModification;


            case 37:
                return isNoDiscountOnDiscount;

//            case 90:
//                return isNoQuantityPriceBreakDiscount;


            case 38:
                return isIncludeInStockValue;
//            case 94:
//                return storageLocation;
//            case 95:
//                return relatedProductsType.toString();
//            case 96:
//                return parentProductId;
            case 39:
                return cbsCode;

//            case 99:
//                return giftCardTypeId;
//            case 100:
//                return isCollection;

//            case 102:
//                return isPriceBlocked;
//            case 103:
//                return createdByUserId;
//            case 104:
//                return createdDateTime;
//            case 105:
//                return lastModifiedByUserId;
//            case 106:
//                return lastModifiedDateTime;
            case 40:
                return itemId;
            case 41:
                return advicePrice;
            case 42:
                return alternateDescription;
            case 43:
                return externalCode;
            case 44:
                return isNoDiscounts;
            case 45:
                return isNoMixedMatchDiscount;
            case 46:
                return isNoDiscountAgreementDiscount;
            case 47:
                return isNoSavings;
            case 48:
                return isAskForPriceInPos;
            case 49:
                return isAskForAmountInPos;
            case 50:
                return isAskForDescriptionInPos;
            case 51:
                return isPriceZeroAllowed;
            case 52:
                return isSerialAdministration;
            case 53:
                return printLabel;
            case 54:
                return isGiftCard;
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 55;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = Long.class;
                info.name = "MainBarcode";
                break;
            case 1:
                if (barcodeTypeId == 0) {
                    info.type = PropertyInfo.INTEGER_CLASS;
                    info.name = "BarcodeTypeId1";
                    break;
                } else {
                    info.type = PropertyInfo.INTEGER_CLASS;
                    info.name = "BarcodeTypeId";
                    break;

                }
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastExchangeDateTime";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ArticleGroupId";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "AssortmentId";
                break;

            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "BrandId";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ClassificationLevel1Id";
                break;
            case 7:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ClassificationLevel2Id";
                break;
            case 8:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ClassificationLevel3Id";
                break;
            case 9:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ClassificationLevel4Id";
                break;
            case 10:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ClassificationLevel5Id";
                break;
            case 11:
                if (defaultSaleAmount == 0) {
                    info.type = Double.class;
                    info.name = "DefaultSaleAmount1";
                    break;
                } else {
                    info.type = Double.class;
                    info.name = "DefaultSaleAmount";
                    break;
                }
            case 12:
                if (consumerUnitToSaleUnitFactor == 0) {
                    info.type = Double.class;
                    info.name = "ConsumerUnitToSaleUnitFactor1";
                    break;
                } else {
                    info.type = Double.class;
                    info.name = "ConsumerUnitToSaleUnitFactor";
                    break;
                }
            case 13:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SaleUnitPackageId";
                break;
            case 14:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Description";
                break;
            case 15:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExchangeRemarks";
                break;
            case 16:
                if (grossPrice == 0) {
                    info.type = Double.class;
                    info.name = "GrossPrice1";
                    break;
                } else {
                    info.type = Double.class;
                    info.name = "GrossPrice";
                    break;

                }
            case 17:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsAllowMultiplePricing";
                break;
            case 18:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsAllowPriceModification";
                break;
            case 19:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsSale";
                break;
            case 20:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsProductGroup";
                break;
            case 21:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsConsignmentProduct";
                break;
            case 22:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsScaleIntegration";
                break;
            case 23:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsKitchenArticle";
                break;
            case 24:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsCancelled";
                break;
            case 25:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsTrackAndTraceProduct";
                break;
            case 26:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Note1";
                break;
            case 27:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Note2";
                break;
            case 28:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Note3";
                break;
            case 29:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Note4";
                break;
            case 30:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductCategoryId";
                break;
            case 31:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SizeIsoDimensionIdArticle";
                break;
            case 32:
                if (heightArticle == 0) {
                    info.type = Double.class;
                    info.name = "HeightArticle1";
                    break;
                } else {
                    info.type = Double.class;
                    info.name = "HeightArticle";
                    break;
                }
            case 33:
                if (widthArticle == 0) {
                    info.type = Double.class;
                    info.name = "WidthArticle1";
                    break;
                } else {
                    info.type = Double.class;
                    info.name = "WidthArticle";
                    break;
                }
            case 34:
                if (depthArticle == 0) {
                    info.type = Double.class;
                    info.name = "DepthArticle1";
                    break;
                } else {
                    info.type = Double.class;
                    info.name = "DepthArticle";
                    break;
                }
            case 35:
                if (markingCodeType.toString().trim().length() > 0) {
                    info.type = PropertyInfo.STRING_CLASS;
                    info.name = "MarkingCodeType";
                    break;

                } else {
                    info.type = PropertyInfo.STRING_CLASS;
                    info.name = "MarkingCodeType1";
                    break;

                }
            case 36:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsAllowDiscountPercentageModification";
                break;
            case 37:
                if (isNoDiscounts == true) {
                    info.type = PropertyInfo.BOOLEAN_CLASS;
                    info.name = "IsNoDiscountOnDiscount1";
                    break;
                } else {
                    info.type = PropertyInfo.BOOLEAN_CLASS;
                    info.name = "IsNoDiscountOnDiscount";
                    break;

                }
            case 38:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsIncludeInStockValue";
                break;
            case 39:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CbsCode";
                break;
            case 40:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
            case 41:
                if (advicePrice == 0) {
                    info.type = Double.class;
                    info.name = "AdvicePrice1";
                    break;
                } else {
                    info.type = Double.class;
                    info.name = "AdvicePrice";
                    break;
                }
            case 42:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AlternateDescription";
                break;
            case 43:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "ExternalCode";
                break;
            case 44:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsNoDiscounts";
                break;

            case 45:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsNoMixedMatchDiscount";
                break;
            case 46:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsNoDiscountAgreementDiscount";
                break;
            case 47:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsNoSavings";
                break;
            case 48:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsAskForPriceInPos";
                break;
            case 49:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsAskForAmountInPos";
                break;
            case 50:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsAskForDescriptionInPos";
                break;
            case 51:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsPriceZeroAllowed";
                break;
            case 52:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsSerialAdministration";
                break;
            case 53:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "PrintLabel";
                break;
            case 54:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsGiftCard";
                break;

            //


          /*  case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "OldItemId";
                break;
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "OrganizationId";
                break;
            case 2:
                info.type = Long.class;
                info.name = "ProductNumber";
                break;

            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SaleLedgerId";
                break;
            case 7:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsDerived";
                break;
            case 8:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ReplacementProductId";
                break;

            case 12:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SizeTypeId";
                break;
            case 13:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SizeId";
                break;
            case 14:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ColorId";
                break;
            case 15:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "WarrantyId";
                break;
            case 16:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "TransportClassId";
                break;
            case 17:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LabelClassId";
                break;
            case 18:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LocationClassId";
                break;
            case 20:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SubBrandId";
                break;
            case 21:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PosMessageId";
                break;
            case 22:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "DisposalFeeId";
                break;
            case 23:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductCombinationGroupId";
                break;
            case 29:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;
            case 32:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SaleUnitDimensionId";
                break;

            case 36:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "PosDescription";
                break;
            case 37:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "FormattedDescription";
                break;

            case 40:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ExternalProductId";
                break;

            case 42:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Information";
                break;

            case 56:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Plu";
                break;
            case 57:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "FollowupNumber";
                break;
            case 58:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "PreferredSupplierId";
                break;

            case 60:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "FreeTableId";
                break;
            case 61:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "SearchText";
                break;

            case 63:
                info.type = Double.class;
                info.name = "LengthArticle";
                break;

            case 67:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SizeIsoDimensionIdPackage";
                break;
            case 68:
                info.type = Double.class;
                info.name = "LengthPackage";
                break;
            case 69:
                info.type = Double.class;
                info.name = "HeightPackage";
                break;
            case 70:
                info.type = Double.class;
                info.name = "WidthPackage";
                break;
            case 71:
                info.type = Double.class;
                info.name = "DepthPackage";
                break;
            case 72:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ContentIsoDimensionId";
                break;
            case 73:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ContentIsoPackageId";
                break;
            case 74:
                info.type = Double.class;
                info.name = "NetContent";
                break;
            case 75:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "WeightIsoDimensionId";
                break;
            case 76:
                info.type = Double.class;
                info.name = "NetWeight";
                break;
            case 77:
                info.type = Double.class;
                info.name = "GrossWeight";
                break;
            case 78:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "AllowanceCode";
                break;
            case 79:
                info.type = Double.class;
                info.name = "AllowanceAmount";
                break;

            case 90:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsNoQuantityPriceBreakDiscount";
                break;

            case 94:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "StorageLocation";
                break;
            case 95:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "RelatedProductsType";
                break;
            case 96:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ParentProductId";
                break;

            case 99:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "GiftCardTypeId";
                break;
            case 100:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsCollection";
                break;
            case 102:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "IsPriceBlocked";
                break;
            case 103:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 104:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 105:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 106:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;*/

        }
    }

//    @Override //    public String getInnerText() { //        return null; //    } // // //    @Override //    public void setInnerText(String s) { //    }

    @Override
    public void setProperty(int arg0, java.lang.Object arg1) {
    }

}
