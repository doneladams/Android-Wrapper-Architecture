package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/16/2017 5:54:09 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class ProductListRowsFilter implements KvmSerializable {

    public int productListId;
//    public String description;
/*
    public int itemId;
    public int productId;
    public int brandId;
    public int supplierId;
    public int productListTypeId;
    public int referenceNumber;
    public int labelClassIdField;
    public long conversionId;
    public VectorInt32 itemIds;
    public boolean exludeProvidedItemIds;
    public WS_Enums.BooleanFilter deviantPricesOnly;*/

    public ProductListRowsFilter() {
    }

    public ProductListRowsFilter(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("ProductListId")) {
            Object obj = soapObject.getProperty("ProductListId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productListId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productListId = (Integer) obj;
            }
        }
   /*     if (soapObject.hasProperty("Description")) {
            Object obj = soapObject.getProperty("Description");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                description = j.toString();
            } else if (obj != null && obj instanceof String) {
                description = (String) obj;
            }
        }*/
    /*    if (soapObject.hasProperty("ItemId")) {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                itemId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ProductId")) {
            Object obj = soapObject.getProperty("ProductId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("BrandId")) {
            Object obj = soapObject.getProperty("BrandId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                brandId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                brandId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SupplierId")) {
            Object obj = soapObject.getProperty("SupplierId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                supplierId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                supplierId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ProductListTypeId")) {
            Object obj = soapObject.getProperty("ProductListTypeId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productListTypeId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productListTypeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ReferenceNumber")) {
            Object obj = soapObject.getProperty("ReferenceNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                referenceNumber = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                referenceNumber = (Integer) obj;
            }
        }

        if (soapObject.hasProperty("LabelClassId")) {
            Object obj = soapObject.getProperty("LabelClassId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                labelClassIdField = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                labelClassIdField = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ConversionId")) {
            Object obj = soapObject.getProperty("ConversionId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                conversionId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                conversionId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ItemIds")) {
            SoapObject j = (SoapObject) soapObject.getProperty("ItemIds");
            itemIds = new VectorInt32(j);
        }
        if (soapObject.hasProperty("ExludeProvidedItemIds")) {
            Object obj = soapObject.getProperty("ExludeProvidedItemIds");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                exludeProvidedItemIds = Boolean.parseBoolean(j.toString());
            } else if (obj != null && obj instanceof Boolean) {
                exludeProvidedItemIds = (Boolean) obj;
            }
        }
        if (soapObject.hasProperty("DeviantPricesOnly")) {
            Object obj = soapObject.getProperty("DeviantPricesOnly");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                deviantPricesOnly = WS_Enums.BooleanFilter.fromString(j.toString());
            }
        }*/
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return productListId;
       /*     case 1:
                return description;*/
            /*case 0:
                return itemId;

            case 2:
                return productId;
            case 3:
                return brandId;
            case 4:
                return supplierId;
            case 5:
                return productListTypeId;
            case 6:
                return referenceNumber;

            case 8:
                return labelClassIdField;
            case 9:
                return conversionId;
            case 10:
                return itemIds;
            case 11:
                return exludeProvidedItemIds;
            case 12:
                return deviantPricesOnly.toString();*/
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 1;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductListId";
                break;
    /*        case 1:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "Description";
                break;
*/
/*            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductId";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "BrandId";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SupplierId";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductListTypeId";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ReferenceNumber";
                break;
            case 8:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LabelClassId";
                break;
            case 9:
                info.type = Long.class;
                info.name = "ConversionId";
                break;
            case 10:
                info.type = PropertyInfo.VECTOR_CLASS;
                info.name = "ItemIds";
                break;
            case 11:
                info.type = PropertyInfo.BOOLEAN_CLASS;
                info.name = "ExludeProvidedItemIds";
                break;
            case 12:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "DeviantPricesOnly";
                break;*/
        }
    }

    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
