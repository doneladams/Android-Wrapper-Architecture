package webservice;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 8/16/2017 5:54:08 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//

import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

import java.util.Hashtable;

public class MixedMatchProductInfo implements KvmSerializable {

    public int mixedMatchId;
    public int productId;
    public int columnNumber;
    public double amount;
    public int restrictToBarcodeId;
/*    public int supplierId;
    public int brandId;
    public int subBrandId;
    public int classification1IdField;
    public int productCategoryId;
    public int cashRegisterGroupId;

    public int restrictToBarcodeTypeId;
    public double restrictToBarcodePrice;
    public int organizationId;
    public int companyId;
    public int createdByUserId;
    public String createdDateTime;
    public int lastModifiedByUserId;
    public String lastModifiedDateTime;
    public int itemId;*/

    public MixedMatchProductInfo() {
    }

    public MixedMatchProductInfo(SoapObject soapObject) {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("MixedMatchId")) {
            Object obj = soapObject.getProperty("MixedMatchId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                mixedMatchId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                mixedMatchId = (Integer) obj;
            }
        }
/*        if (soapObject.hasProperty("SupplierId")) {
            Object obj = soapObject.getProperty("SupplierId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                supplierId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                supplierId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("BrandId")) {
            Object obj = soapObject.getProperty("BrandId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                brandId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                brandId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("SubBrandId")) {
            Object obj = soapObject.getProperty("SubBrandId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                subBrandId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                subBrandId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("Classification1Id")) {
            Object obj = soapObject.getProperty("Classification1Id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                classification1IdField = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                classification1IdField = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ProductCategoryId")) {
            Object obj = soapObject.getProperty("ProductCategoryId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productCategoryId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productCategoryId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CashRegisterGroupId")) {
            Object obj = soapObject.getProperty("CashRegisterGroupId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                cashRegisterGroupId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                cashRegisterGroupId = (Integer) obj;
            }
        }*/
        if (soapObject.hasProperty("ProductId")) {
            Object obj = soapObject.getProperty("ProductId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                productId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                productId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("ColumnNumber")) {
            Object obj = soapObject.getProperty("ColumnNumber");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                columnNumber = Byte.parseByte(j.toString());
            } else if (obj != null && obj instanceof Byte) {
                columnNumber = (Byte) obj;
            }
        }
        if (soapObject.hasProperty("Amount")) {
            Object obj = soapObject.getProperty("Amount");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                amount = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                amount = (Double) obj;
            }
        }
        if (soapObject.hasProperty("RestrictToBarcodeId")) {
            Object obj = soapObject.getProperty("RestrictToBarcodeId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                restrictToBarcodeId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                restrictToBarcodeId = (Integer) obj;
            }
        }
/*
        if (soapObject.hasProperty("RestrictToBarcodeTypeId")) {
            Object obj = soapObject.getProperty("RestrictToBarcodeTypeId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                restrictToBarcodeTypeId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                restrictToBarcodeTypeId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("RestrictToBarcodePrice")) {
            Object obj = soapObject.getProperty("RestrictToBarcodePrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                restrictToBarcodePrice = Double.parseDouble(j.toString());
            } else if (obj != null && obj instanceof Number) {
                restrictToBarcodePrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("OrganizationId")) {
            Object obj = soapObject.getProperty("OrganizationId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                organizationId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                organizationId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CompanyId")) {
            Object obj = soapObject.getProperty("CompanyId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                companyId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                companyId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedByUserId")) {
            Object obj = soapObject.getProperty("CreatedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                createdByUserId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                createdByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("CreatedDateTime")) {
            Object obj = soapObject.getProperty("CreatedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                createdDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                createdDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedByUserId")) {
            Object obj = soapObject.getProperty("LastModifiedByUserId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastModifiedByUserId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                lastModifiedByUserId = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("LastModifiedDateTime")) {
            Object obj = soapObject.getProperty("LastModifiedDateTime");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                lastModifiedDateTime = j.toString();
            } else if (obj != null && obj instanceof String) {
                lastModifiedDateTime = (String) obj;
            }
        }
        if (soapObject.hasProperty("ItemId")) {
            Object obj = soapObject.getProperty("ItemId");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)) {
                SoapPrimitive j = (SoapPrimitive) obj;
                itemId = Integer.parseInt(j.toString());
            } else if (obj != null && obj instanceof Number) {
                itemId = (Integer) obj;
            }
        }*/
    }

    @Override
    public Object getProperty(int arg0) {
        switch (arg0) {
            case 0:
                return mixedMatchId;
 /*           case 1:
                return supplierId;
            case 2:
                return brandId;
            case 3:
                return subBrandId;
            case 4:
                return classification1IdField;
            case 5:
                return productCategoryId;
            case 6:
                return cashRegisterGroupId;*/
            case 1:
                return productId;
            case 2:
                return columnNumber;
            case 3:
                return amount;
            case 4:
                return restrictToBarcodeId;
            /*case 11:
                return restrictToBarcodeTypeId;
            case 12:
                return restrictToBarcodePrice;
            case 13:
                return organizationId;
            case 14:
                return companyId;
            case 15:
                return createdByUserId;
            case 16:
                return createdDateTime;
            case 17:
                return lastModifiedByUserId;
            case 18:
                return lastModifiedDateTime;
            case 19:
                return itemId;*/
        }
        return null;
    }

    @Override
    public int getPropertyCount() {
        return 5;
    }

    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch (index) {
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "MixedMatchId";
                break;
/*            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SupplierId";
                break;
            case 2:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "BrandId";
                break;
            case 3:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "SubBrandId";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "Classification1Id";
                break;
            case 5:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductCategoryId";
                break;
            case 6:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CashRegisterGroupId";
                break;*/
            case 1:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ProductId";
                break;
            case 2:
                info.type = Integer.class;
                info.name = "ColumnNumber";
                break;
            case 3:
                info.type = Double.class;
                info.name = "Amount";
                break;
            case 4:
                if (restrictToBarcodeId == -1) {
                    info.type = PropertyInfo.INTEGER_CLASS;
                    info.name = "RestrictToBarcodeId1";
                    break;
                } else {
                    info.type = PropertyInfo.INTEGER_CLASS;
                    info.name = "RestrictToBarcodeId";
                    break;
                }
                /*
            case 11:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "RestrictToBarcodeTypeId";
                break;
            case 12:
                info.type = Double.class;
                info.name = "RestrictToBarcodePrice";
                break;
            case 13:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "OrganizationId";
                break;
            case 14:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CompanyId";
                break;
            case 15:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "CreatedByUserId";
                break;
            case 16:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "CreatedDateTime";
                break;
            case 17:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "LastModifiedByUserId";
                break;
            case 18:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "LastModifiedDateTime";
                break;
            case 19:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "ItemId";
                break;*/
        }
    }


    @Override
    public void setProperty(int arg0, Object arg1) {
    }

}
